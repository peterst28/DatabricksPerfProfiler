{"Event":"DBCEventLoggingListenerMetadata","Spark Version":"3.4.1","Timestamp":1710846017378,"Rollover Number":1,"SparkContext Id":7286199472653344301}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":0,"rootExecutionId":0,"description":"spark.table('hive_metastore.sternp.flights').fi...","details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:258)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:397)\npy4j.Gateway.invoke(Gateway.java:306)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:195)\npy4j.ClientServerConnection.run(ClientServerConnection.java:115)\njava.lang.Thread.run(Thread.java:750)","physicalPlanDescription":"== Physical Plan ==\nOverwriteByExpression (6)\n+- * ColumnarToRow (5)\n   +- PhotonResultStage (4)\n      +- PhotonFilter (3)\n         +- PhotonProject (2)\n            +- PhotonScan parquet hive_metastore.sternp.flights (1)\n\n\n(1) PhotonScan parquet hive_metastore.sternp.flights\nOutput [32]: [Month#45, DayofMonth#46, DayOfWeek#47, DepTime#48, CRSDepTime#49, ArrTime#50, CRSArrTime#51, UniqueCarrier#52, FlightNum#53, TailNum#54, ActualElapsedTime#55, CRSElapsedTime#56, AirTime#57, ArrDelay#58, DepDelay#59, Origin#60, Dest#61, Distance#62, TaxiIn#63, TaxiOut#64, Cancelled#65, CancellationCode#66, Diverted#67, CarrierDelay#68, WeatherDelay#69, NASDelay#70, SecurityDelay#71, LateAircraftDelay#72, IsArrDelayed#73, IsDepDelayed#74, id#75L, Year#44]\nDictionaryFilters: [(id#75L = 1234)]\nLocation: TahoeLogFileIndexEdge [dbfs:/home/peter.stern@databricks.com/flights]\nReadSchema: struct<Month:int,DayofMonth:int,DayOfWeek:int,DepTime:string,CRSDepTime:int,ArrTime:string,CRSArrTime:int,UniqueCarrier:string,FlightNum:int,TailNum:string,ActualElapsedTime:string,CRSElapsedTime:int,AirTime:string,ArrDelay:string,DepDelay:string,Origin:string,Dest:string,Distance:string,TaxiIn:string,TaxiOut:string,Cancelled:int,CancellationCode:string,Diverted:int,CarrierDelay:string,WeatherDelay:string,NASDelay:string,SecurityDelay:string,LateAircraftDelay:string,IsArrDelayed:string,IsDepDelayed:string,id:bigint>\nRequiredDataFilters: [isnotnull(id#75L), (id#75L = 1234)]\n\n(2) PhotonProject\nInput [32]: [Month#45, DayofMonth#46, DayOfWeek#47, DepTime#48, CRSDepTime#49, ArrTime#50, CRSArrTime#51, UniqueCarrier#52, FlightNum#53, TailNum#54, ActualElapsedTime#55, CRSElapsedTime#56, AirTime#57, ArrDelay#58, DepDelay#59, Origin#60, Dest#61, Distance#62, TaxiIn#63, TaxiOut#64, Cancelled#65, CancellationCode#66, Diverted#67, CarrierDelay#68, WeatherDelay#69, NASDelay#70, SecurityDelay#71, LateAircraftDelay#72, IsArrDelayed#73, IsDepDelayed#74, id#75L, Year#44]\nArguments: [Year#44, Month#45, DayofMonth#46, DayOfWeek#47, DepTime#48, CRSDepTime#49, ArrTime#50, CRSArrTime#51, UniqueCarrier#52, FlightNum#53, TailNum#54, ActualElapsedTime#55, CRSElapsedTime#56, AirTime#57, ArrDelay#58, DepDelay#59, Origin#60, Dest#61, Distance#62, TaxiIn#63, TaxiOut#64, Cancelled#65, CancellationCode#66, Diverted#67, ... 8 more fields]\n\n(3) PhotonFilter\nInput [32]: [Year#44, Month#45, DayofMonth#46, DayOfWeek#47, DepTime#48, CRSDepTime#49, ArrTime#50, CRSArrTime#51, UniqueCarrier#52, FlightNum#53, TailNum#54, ActualElapsedTime#55, CRSElapsedTime#56, AirTime#57, ArrDelay#58, DepDelay#59, Origin#60, Dest#61, Distance#62, TaxiIn#63, TaxiOut#64, Cancelled#65, CancellationCode#66, Diverted#67, CarrierDelay#68, WeatherDelay#69, NASDelay#70, SecurityDelay#71, LateAircraftDelay#72, IsArrDelayed#73, IsDepDelayed#74, id#75L]\nArguments: false\n\n(4) PhotonResultStage\nInput [32]: [Year#44, Month#45, DayofMonth#46, DayOfWeek#47, DepTime#48, CRSDepTime#49, ArrTime#50, CRSArrTime#51, UniqueCarrier#52, FlightNum#53, TailNum#54, ActualElapsedTime#55, CRSElapsedTime#56, AirTime#57, ArrDelay#58, DepDelay#59, Origin#60, Dest#61, Distance#62, TaxiIn#63, TaxiOut#64, Cancelled#65, CancellationCode#66, Diverted#67, CarrierDelay#68, WeatherDelay#69, NASDelay#70, SecurityDelay#71, LateAircraftDelay#72, IsArrDelayed#73, IsDepDelayed#74, id#75L]\n\n(5) ColumnarToRow [codegen id : 1]\nInput [32]: [Year#44, Month#45, DayofMonth#46, DayOfWeek#47, DepTime#48, CRSDepTime#49, ArrTime#50, CRSArrTime#51, UniqueCarrier#52, FlightNum#53, TailNum#54, ActualElapsedTime#55, CRSElapsedTime#56, AirTime#57, ArrDelay#58, DepDelay#59, Origin#60, Dest#61, Distance#62, TaxiIn#63, TaxiOut#64, Cancelled#65, CancellationCode#66, Diverted#67, CarrierDelay#68, WeatherDelay#69, NASDelay#70, SecurityDelay#71, LateAircraftDelay#72, IsArrDelayed#73, IsDepDelayed#74, id#75L]\n\n(6) OverwriteByExpression\nInput [32]: [Year#44, Month#45, DayofMonth#46, DayOfWeek#47, DepTime#48, CRSDepTime#49, ArrTime#50, CRSArrTime#51, UniqueCarrier#52, FlightNum#53, TailNum#54, ActualElapsedTime#55, CRSElapsedTime#56, AirTime#57, ArrDelay#58, DepDelay#59, Origin#60, Dest#61, Distance#62, TaxiIn#63, TaxiOut#64, Cancelled#65, CancellationCode#66, Diverted#67, CarrierDelay#68, WeatherDelay#69, NASDelay#70, SecurityDelay#71, LateAircraftDelay#72, IsArrDelayed#73, IsDepDelayed#74, id#75L]\nArguments: [num_affected_rows#163L, num_inserted_rows#164L], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$6464/937910781@70866de5, org.apache.spark.sql.execution.datasources.noop.NoopWrite$@7fd51ce4\n\n","sparkPlanInfo":{"nodeName":"OverwriteByExpression","simpleString":"OverwriteByExpression [num_affected_rows#163L, num_inserted_rows#164L], org.apache.spark.sql.execution.datasources.v2.DataSourceV2Strategy$$Lambda$6464/937910781@70866de5, org.apache.spark.sql.execution.datasources.noop.NoopWrite$@7fd51ce4","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"PhotonResultStage","simpleString":"PhotonResultStage","children":[{"nodeName":"PhotonFilter","simpleString":"PhotonFilter false","children":[{"nodeName":"PhotonProject","simpleString":"PhotonProject [Year#44, Month#45, DayofMonth#46, DayOfWeek#47, DepTime#48, CRSDepTime#49, ArrTime#50, CRSArrTime#51, UniqueCarrier#52, FlightNum#53, TailNum#54, ActualElapsedTime#55, CRSElapsedTime#56, AirTime#57, ArrDelay#58, DepDelay#59, Origin#60, Dest#61, Distance#62, TaxiIn#63, TaxiOut#64, Cancelled#65, CancellationCode#66, Diverted#67, ... 8 more fields]","children":[{"nodeName":"PhotonScan parquet hive_metastore.sternp.flights","simpleString":"PhotonScan parquet hive_metastore.sternp.flights[Month#45,DayofMonth#46,DayOfWeek#47,DepTime#48,CRSDepTime#49,ArrTime#50,CRSArrTime#51,UniqueCarrier#52,FlightNum#53,TailNum#54,ActualElapsedTime#55,CRSElapsedTime#56,AirTime#57,ArrDelay#58,DepDelay#59,Origin#60,Dest#61,Distance#62,TaxiIn#63,TaxiOut#64,Cancelled#65,CancellationCode#66,Diverted#67,CarrierDelay#68,... 8 more fields] DataFilters: [isnotnull(id#75L), (id#75L = 1234)], DictionaryFilters: [(id#75L = 1234)], Format: parquet, Location: TahoeLogFileIndexEdge(1 paths)[dbfs:/home/peter.stern@databricks.com/flights], PartitionFilters: [], ReadSchema: struct<Month:int,DayofMonth:int,DayOfWeek:int,DepTime:string,CRSDepTime:int,ArrTime:string,CRSArr..., RequiredDataFilters: [isnotnull(id#75L), (id#75L = 1234)]","children":[],"metadata":{"Location":"TahoeLogFileIndexEdge(1 paths)[dbfs:/home/peter.stern@databricks.com/flights]","ReadSchema":"struct<Month:int,DayofMonth:int,DayOfWeek:int,DepTime:string,CRSDepTime:int,ArrTime:string,CRSArrTime:int,UniqueCarrier:string,FlightNum:int,TailNum:string,ActualElapsedTime:string,CRSElapsedTime:int,AirTime:string,ArrDelay:string,DepDelay:string,Origin:string,Dest:string,Distance:string,TaxiIn:string,TaxiOut:string,Cancelled:int,CancellationCode:string,Diverted:int,CarrierDelay:string,WeatherDelay:string,NASDelay:string,SecurityDelay:string,LateAircraftDelay:string,IsArrDelayed:string,IsDepDelayed:string,id:bigint>","Format":"parquet","RequiredDataFilters":"[isnotnull(id#75L), (id#75L = 1234)]","DictionaryFilters":"[(id#75L = 1234)]","PartitionFilters":"[]","DataFilters":"[isnotnull(id#75L), (id#75L = 1234)]"},"metrics":[{"name":"driver time - sorting files by size","accumulatorId":113,"metricType":"timing","experimental":false},{"name":"unified cache hits count for ParquetFooter","accumulatorId":140,"metricType":"sum","experimental":false},{"name":"unified cache miss count for ParquetFooter","accumulatorId":143,"metricType":"sum","experimental":false},{"name":"unified cache write bytes for ParquetColumnChunk","accumulatorId":154,"metricType":"size","experimental":false},{"name":"row groups in files to read total","accumulatorId":63,"metricType":"sum","experimental":false},{"name":"cache writes size (uncompressed)","accumulatorId":58,"metricType":"size","experimental":true},{"name":"dictionary filtering - num row groups evaluated","accumulatorId":89,"metricType":"sum","experimental":true},{"name":"data filters - row groups filtered","accumulatorId":81,"metricType":"sum","experimental":false},{"name":"cloud storage response size","accumulatorId":123,"metricType":"size","experimental":false},{"name":"columns with filters","accumulatorId":85,"metricType":"sum","experimental":true},{"name":"files read","accumulatorId":100,"metricType":"sum","experimental":false},{"name":"preferred locations algorithm version","accumulatorId":116,"metricType":"maximum","experimental":false},{"name":"executor time IO wait - file statuses","accumulatorId":95,"metricType":"timing","experimental":false},{"name":"scanned columns","accumulatorId":108,"metricType":"count","experimental":false},{"name":"size of a row of all columns in the relation (estimated)","accumulatorId":109,"metricType":"size","experimental":false},{"name":"unified cache coalesce count for ParquetColumnChunk","accumulatorId":145,"metricType":"sum","experimental":false},{"name":"number of deletion vectors read from memory cache","accumulatorId":129,"metricType":"count","experimental":false},{"name":"number of output batches","accumulatorId":44,"metricType":"sum","experimental":false},{"name":"size of row groups before filtering","accumulatorId":62,"metricType":"size","experimental":false},{"name":"cloud storage retry duration","accumulatorId":127,"metricType":"timing","experimental":false},{"name":"rows scanned","accumulatorId":78,"metricType":"sum","experimental":false},{"name":"unified cache write bytes for Range","accumulatorId":156,"metricType":"size","experimental":false},{"name":"size of deletion vectors read from disk cache","accumulatorId":136,"metricType":"count","experimental":false},{"name":"cache true misses size (uncompressed)","accumulatorId":54,"metricType":"size","experimental":true},{"name":"unified cache hits count for ParquetColumnChunk","accumulatorId":139,"metricType":"sum","experimental":false},{"name":"columns in the relation","accumulatorId":107,"metricType":"count","experimental":false},{"name":"number of deletion vector rows read from disk cache","accumulatorId":133,"metricType":"count","experimental":false},{"name":"data filters - batches skipped","accumulatorId":80,"metricType":"sum","experimental":false},{"name":"repeated reads estimated high size","accumulatorId":121,"metricType":"size","experimental":false},{"name":"unified cache serve bytes for Range","accumulatorId":150,"metricType":"size","experimental":false},{"name":"number of deletion vectors read from disk cache","accumulatorId":130,"metricType":"count","experimental":false},{"name":"files pruned","accumulatorId":114,"metricType":"sum","experimental":false},{"name":"size of a row of scanned columns (estimated)","accumulatorId":110,"metricType":"size","experimental":false},{"name":"max partition size chosen","accumulatorId":118,"metricType":"size","experimental":false},{"name":"files missing","accumulatorId":96,"metricType":"sum","experimental":false},{"name":"number of deletion vectors read","accumulatorId":128,"metricType":"count","experimental":false},{"name":"number of non-local (rescheduled) scan tasks","accumulatorId":99,"metricType":"sum","experimental":true},{"name":"cache rescheduled misses size","accumulatorId":55,"metricType":"size","experimental":true},{"name":"rows skipped via stats filtering","accumulatorId":65,"metricType":"sum","experimental":false},{"name":"cloud storage request size","accumulatorId":122,"metricType":"size","experimental":false},{"name":"driver time - list and filter partitions","accumulatorId":101,"metricType":"timing","experimental":false},{"name":"size of the smallest file read","accumulatorId":103,"metricType":"size","experimental":false},{"name":"cache rescheduled misses size (uncompressed)","accumulatorId":56,"metricType":"size","experimental":true},{"name":"cache misses size","accumulatorId":51,"metricType":"size","experimental":false},{"name":"columns with filters - dictionary encoded","accumulatorId":86,"metricType":"sum","experimental":true},{"name":"number of local scan tasks","accumulatorId":98,"metricType":"sum","experimental":true},{"name":"size of data read with io requests","accumulatorId":94,"metricType":"size","experimental":true},{"name":"row groups read actual","accumulatorId":64,"metricType":"sum","experimental":false},{"name":"size of files read","accumulatorId":102,"metricType":"size","experimental":false},{"name":"cloud storage retry count","accumulatorId":126,"metricType":"count","experimental":false},{"name":"peak reader threads utilized","accumulatorId":93,"metricType":"average","experimental":false},{"name":"size of files pruned","accumulatorId":115,"metricType":"size","experimental":false},{"name":"cloud storage request count","accumulatorId":124,"metricType":"count","experimental":false},{"name":"cloud storage requests to fetch parquet footer","accumulatorId":77,"metricType":"count","experimental":false},{"name":"unified cache coalesce count for Range","accumulatorId":147,"metricType":"sum","experimental":false},{"name":"size of deletion vectors read","accumulatorId":134,"metricType":"count","experimental":false},{"name":"dictionary filtering - num row groups not evaluated - dictionary size","accumulatorId":90,"metricType":"sum","experimental":true},{"name":"number of deletion vector rows read from memory cache","accumulatorId":132,"metricType":"count","experimental":false},{"name":"unified cache miss count for Range","accumulatorId":144,"metricType":"sum","experimental":false},{"name":"tasks total","accumulatorId":48,"metricType":"sum","experimental":false},{"name":"dictionary filtering - num row groups eligible","accumulatorId":88,"metricType":"sum","experimental":true},{"name":"cache writes stored uncompressed size","accumulatorId":60,"metricType":"size","experimental":true},{"name":"cache hits size","accumulatorId":49,"metricType":"size","experimental":false},{"name":"data filters - rows skipped","accumulatorId":79,"metricType":"sum","experimental":false},{"name":"unified cache read bytes for ParquetColumnChunk","accumulatorId":151,"metricType":"size","experimental":false},{"name":"split size average distribution per node","accumulatorId":105,"metricType":"size","experimental":false},{"name":"number of deletion vector rows read","accumulatorId":131,"metricType":"count","experimental":false},{"name":"number of output rows","accumulatorId":43,"metricType":"sum","experimental":false},{"name":"unified cache read bytes for Range","accumulatorId":153,"metricType":"size","experimental":false},{"name":"the proration factor used","accumulatorId":117,"metricType":"sum","experimental":false},{"name":"unified cache hits count for Range","accumulatorId":141,"metricType":"sum","experimental":false},{"name":"unified cache coalesce count for ParquetFooter","accumulatorId":146,"metricType":"sum","experimental":false},{"name":"size of the largest file read","accumulatorId":104,"metricType":"size","experimental":false},{"name":"size of deletion vectors read from memory cache","accumulatorId":135,"metricType":"count","experimental":false},{"name":"cache hits size (uncompressed)","accumulatorId":50,"metricType":"size","experimental":true},{"name":"unified cache serve bytes for ParquetColumnChunk","accumulatorId":148,"metricType":"size","experimental":false},{"name":"max distance between the positions of scanned columns in the relation","accumulatorId":111,"metricType":"count","experimental":false},{"name":"repeated reads estimated low size","accumulatorId":120,"metricType":"size","experimental":false},{"name":"row groups skipped via stats filtering","accumulatorId":66,"metricType":"sum","experimental":false},{"name":"files corrupt","accumulatorId":97,"metricType":"sum","experimental":false},{"name":"cache true misses size","accumulatorId":53,"metricType":"size","experimental":true},{"name":"row groups skipped via lazy materialization","accumulatorId":82,"metricType":"sum","experimental":false},{"name":"cluster's current parallelism ","accumulatorId":119,"metricType":"sum","experimental":false},{"name":"split size relative skew","accumulatorId":106,"metricType":"size","experimental":false},{"name":"unified cache miss count for ParquetColumnChunk","accumulatorId":142,"metricType":"sum","experimental":false},{"name":"cache writes stored compressed size","accumulatorId":59,"metricType":"size","experimental":true},{"name":"cache writes size","accumulatorId":57,"metricType":"size","experimental":true},{"name":"cloud storage request duration","accumulatorId":125,"metricType":"timing","experimental":false},{"name":"num early close","accumulatorId":47,"metricType":"sum","experimental":false},{"name":"unified cache write bytes for ParquetFooter","accumulatorId":155,"metricType":"size","experimental":false},{"name":"cache misses size (uncompressed)","accumulatorId":52,"metricType":"size","experimental":true},{"name":"partitions read","accumulatorId":112,"metricType":"sum","experimental":false},{"name":"row groups skipped via dictionary filtering","accumulatorId":91,"metricType":"sum","experimental":false},{"name":"row groups using lazy materialization","accumulatorId":83,"metricType":"sum","experimental":false},{"name":"unified cache serve bytes for ParquetFooter","accumulatorId":149,"metricType":"size","experimental":false},{"name":"unified cache read bytes for ParquetFooter","accumulatorId":152,"metricType":"size","experimental":false},{"name":"peak memory usage","accumulatorId":92,"metricType":"size","experimental":false}],"explainId":null}],"metadata":{},"metrics":[{"name":"number of output batches","accumulatorId":38,"metricType":"sum","experimental":false},{"name":"tasks total","accumulatorId":42,"metricType":"sum","experimental":false},{"name":"number of output rows","accumulatorId":37,"metricType":"sum","experimental":false},{"name":"num early close","accumulatorId":41,"metricType":"sum","experimental":false}],"explainId":null}],"metadata":{},"metrics":[{"name":"number of output batches","accumulatorId":11,"metricType":"sum","experimental":false},{"name":"tasks total","accumulatorId":15,"metricType":"sum","experimental":false},{"name":"number of output rows","accumulatorId":10,"metricType":"sum","experimental":false},{"name":"num early close","accumulatorId":14,"metricType":"sum","experimental":false}],"explainId":null}],"metadata":{},"metrics":[{"name":"peak memory usage","accumulatorId":8,"metricType":"size","experimental":false},{"name":"stage duration","accumulatorId":6,"metricType":"timing","experimental":false},{"name":"peak untracked memory usage","accumulatorId":9,"metricType":"size","experimental":false},{"name":"stage description size bytes","accumulatorId":7,"metricType":"sum","experimental":false},{"name":"number of output rows","accumulatorId":5,"metricType":"sum","experimental":false}],"explainId":null}],"metadata":{},"metrics":[],"explainId":null}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":3,"metricType":"sum","experimental":false},{"name":"number of input batches","accumulatorId":4,"metricType":"sum","experimental":false}],"explainId":null}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":2,"metricType":"timing","experimental":false}],"explainId":null}],"metadata":{},"metrics":[],"explainId":null},"time":1710846017178,"modifiedConfigs":{"spark.r.sql.derby.temp.dir":"/tmp/Rtmp4Hkc3N","spark.databricks.optimizer.optimizeLimit.maxLimit":"10001"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":0,"accumUpdates":[[160,2454]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":0,"accumUpdates":[[118,0],[111,30],[107,32],[100,1],[112,1],[113,0],[103,63454541],[106,0],[110,464],[109,468],[105,0],[116,1],[117,0],[115,0],[119,0],[114,0],[104,63454541],[101,1388],[108,31],[102,63454541]]}
{"Event":"SparkListenerJobStart","Job ID":0,"Submission Time":1710846020221,"Stage Infos":[{"Stage ID":0,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":3,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"spark_plan_40\",\"name\":\"WholeStageCodegen\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[2],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":2,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"spark_plan_34\",\"name\":\"PhotonResultStage\"}","Callsite":"mapPartitionsWithIndexInternal at PhotonExec.scala:405","Parent IDs":[1],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":0,"Name":"PhotonFileScanRDD","Scope":"{\"id\":\"spark_plan_34\",\"name\":\"PhotonResultStage\"}","Callsite":"RDD at PhotonFileScanRDD.scala:44","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":1,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"spark_plan_34\",\"name\":\"PhotonResultStage\"}","Callsite":"mapPartitionsWithIndexInternal at photonPhysicalOperators.scala:5158","Parent IDs":[0],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:258)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:397)\npy4j.Gateway.invoke(Gateway.java:306)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:195)\npy4j.ClientServerConnection.run(ClientServerConnection.java:115)\njava.lang.Thread.run(Thread.java:750)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[0],"Properties":{"spark.hadoop.fs.idbfs.impl":"com.databricks.io.idbfs.IdbfsFileSystem","spark.databricks.session.share":"false","spark.databricks.repo.gitProvider":"gitHub","spark.hadoop.hive.server2.session.check.interval":"60000","spark.databricks.tahoe.logStore.class":"com.databricks.tahoe.store.DelegatingLogStore","spark.driver.port":"44085","spark.databricks.managedCatalog.clientClassName":"com.databricks.managedcatalog.ManagedCatalogClientImpl","spark.databricks.clusterUsageTags.sparkMasterUrlType":"*********(redacted)","spark.hadoop.fs.cpfs-s3n.impl":"*********(redacted)","spark.databricks.clusterUsageTags.sparkEnvVarContainsSingleQuotes":"false","spark.databricks.clusterUsageTags.clusterCreator":"JobLauncher","spark.databricks.mlflow.autologging.enabled":"true","spark.databricks.clusterUsageTags.enableSqlAclsOnly":"false","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2":"0","spark.sql.sources.default":"delta","spark.databricks.tahoe.logStore.azure.class":"com.databricks.tahoe.store.AzureLogStore","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED --add-opens=java.management/sun.management=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.task.reaper.killTimeout":"60s","spark.hadoop.fs.fcfs-s3.impl":"*********(redacted)","spark.job.interruptOnCancel":"true","spark.hadoop.fs.s3a.max.total.tasks":"1000","spark.databricks.clusterUsageTags.userProvidedRemoteVolumeType":"azure_disk_volume_type: PREMIUM_LRS\n","spark.home":"/databricks/spark","spark.hadoop.fs.s3n.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.databricks.metrics.filesystem_io_metrics":"true","spark.hadoop.fs.stage.impl.disable.cache":"true","spark.hadoop.spark.sql.parquet.output.committer.class":"org.apache.spark.sql.parquet.DirectParquetOutputCommitter","spark.databricks.clusterUsageTags.clusterAvailability":"ON_DEMAND_AZURE","spark.databricks.io.directoryCommit.enableLogicalDelete":"false","spark.app.startTime":"1710845951397","spark.executor.tempDirectory":"/local_disk0/tmp","spark.hadoop.fs.s3a.connection.maximum":"200","spark.databricks.credential.scope.fs.adls.gen2.tokenProviderClassName":"*********(redacted)","spark.databricks.clusterUsageTags.driverInstanceId":"79a81908d2ff43548410866dcc44e341","spark.databricks.autotune.maintenance.client.classname":"com.databricks.maintenanceautocompute.MACClientImpl","spark.databricks.clusterUsageTags.userProvidedSparkVersion":"*********(redacted)","spark.hadoop.fs.gs.impl.disable.cache":"true","spark.databricks.sparkContextId":"7286199472653344301","spark.databricks.workerNodeTypeId":"Standard_DS3_v2","spark.hadoop.databricks.s3.create.deleteUnnecessaryFakeDirectories":"false","spark.databricks.clusterUsageTags.workerEnvironmentId":"workerenv-984752964297111","spark.hadoop.mapreduce.fileoutputcommitter.algorithm.version":"2","spark.databricks.clusterUsageTags.clusterId":"0319-105822-dwdvii6m","spark.databricks.privateLinkEnabled":"false","spark.databricks.service.client.type":"python","spark.databricks.clusterUsageTags.runtimeEngine":"PHOTON","spark.job.description":"spark.table('hive_metastore.sternp.flights').fi...","spark.databricks.clusterUsageTags.clusterWorkers":"0","spark.app.id":"local-1710845960024","spark.r.sql.derby.temp.dir":"/tmp/Rtmp4Hkc3N","spark.databricks.clusterUsageTags.enableCredentialPassthrough":"false","spark.extraListeners":"com.databricks.backend.daemon.driver.DBCEventLoggingListener","spark.databricks.passthrough.glue.credentialsProviderFactoryClassName":"*********(redacted)","spark.databricks.cloudfetch.requestDownloadUrlsWithHeaders":"*********(redacted)","spark.databricks.clusterUsageTags.clusterMetastoreAccessType":"RDS_DIRECT","spark.hadoop.parquet.page.verify-checksum.enabled":"true","spark.databricks.repo.relativePath":"DatabricksPerfProfiler/Tests/SituationCreators/DataSkipping","spark.databricks.job.runId":"1","spark.connect.extensions.command.classes":"io.delta.connect.DeltaCommandPlugin","spark.databricks.clusterUsageTags.driverContainerPrivateIp":"10.139.64.122","spark.driver.tempDirectory":"/local_disk0/tmp","spark.hadoop.fs.wasbs.impl.disable.cache":"true","spark.repl.class.outputDir":"/local_disk0/tmp/repl/spark-7286199472653344301-1115d1ed-53f6-4b9c-b9db-824b82339854","spark.shuffle.service.enabled":"true","spark.speculation":"false","spark.eventLog.enabled":"false","spark.hadoop.spark.databricks.metrics.filesystem_metrics":"true","spark.hadoop.fs.fcfs-s3n.impl":"*********(redacted)","spark.databricks.clusterUsageTags.enableJdbcAutoStart":"true","spark.sql.hive.metastore.jars":"/databricks/databricks-hive/*","spark.hadoop.fs.cpfs-s3.impl":"*********(redacted)","spark.databricks.clusterUsageTags.attribute_tag_budget":"","spark.databricks.clusterUsageTags.userId":"*********(redacted)","spark.databricks.dataLineage.enabled":"true","spark.hadoop.spark.sql.sources.outputCommitterClass":"com.databricks.backend.daemon.data.client.MapReduceDirectOutputCommitter","spark.databricks.clusterUsageTags.clusterTargetWorkers":"0","spark.hadoop.spark.hadoop.aws.glue.cache.db.size":"1000","spark.hadoop.fs.adl.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.sql.hive.convertCTAS":"true","spark.databricks.passthrough.oauth.refresher.impl":"*********(redacted)","spark.databricks.secret.envVar.keys.toRedact":"*********(redacted)","spark.databricks.clusterUsageTags.containerType":"LXC","spark.databricks.unityCatalog.enabled":"true","spark.ui.prometheus.enabled":"true","spark.worker.cleanup.enabled":"false","spark.sql.hive.convertMetastoreParquet":"true","spark.databricks.unityCatalog.volumes.enabled":"true","spark.hadoop.fs.stage.impl":"com.databricks.backend.daemon.driver.managedcatalog.PersonalStagingFileSystem","spark.hadoop.fs.s3.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.databricks.clusterUsageTags.enableJobsAutostart":"true","spark.hadoop.fs.s3n.impl.disable.cache":"true","spark.hadoop.fs.adl.impl.disable.cache":"true","spark.databricks.cloudfetch.hasRegionSupport":"true","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2S3":"0","spark.hadoop.fs.s3a.fast.upload.active.blocks":"32","spark.hadoop.fs.s3.impl.disable.cache":"true","spark.databricks.sql.configMapperClass":"com.databricks.dbsql.config.SqlConfigMapperBridge","spark.hadoop.databricks.s3commit.client.sslTrustAll":"false","spark.databricks.clusterUsageTags.attribute_tag_dust_maintainer":"","spark.databricks.clusterUsageTags.instanceWorkerEnvNetworkType":"default","spark.databricks.replId":"ReplId-3cb19-91ec5-bc30b-d","spark.databricks.clusterUsageTags.clusterSpotBidMaxPrice":"-1.0","spark.databricks.clusterUsageTags.userProvidedRemoteVolumeCount":"0","spark.r.backendConnectionTimeout":"604800","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2File":"0","spark.databricks.unityCatalog.queryFederation.enabled":"true","spark.driver.maxResultSize":"4g","spark.hadoop.parquet.memory.pool.ratio":"0.5","spark.databricks.clusterUsageTags.driverNodeType":"Standard_DS3_v2","spark.sql.catalogImplementation":"hive","spark.databricks.clusterUsageTags.clusterGeneration":"0","spark.databricks.repo.gitReferenceType":"branch","spark.databricks.wsfs.workspacePrivatePreview":"true","spark.databricks.clusterUsageTags.isSingleUserCluster":"true","user":"peter.stern@databricks.com","spark.databricks.passthrough.adls.tokenProviderClassName":"*********(redacted)","spark.databricks.acl.scim.client":"com.databricks.spark.sql.acl.client.DriverToWebappScimClient","spark.databricks.unityCatalog.credentialManager.apiTokenProviderClassName":"*********(redacted)","spark.databricks.clusterUsageTags.isServicePrincipalCluster":"false","spark.sql.warehouse.dir":"dbfs:/user/hive/warehouse","spark.logConf":"true","spark.hadoop.parquet.block.size.row.check.min":"10","spark.databricks.service.dbutils.repl.backend":"com.databricks.dbconnect.ReplDBUtils","spark.databricks.enablePublicDbfsFuse":"false","spark.hadoop.fs.abfss.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.hadoop.fs.wasb.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.databricks.clusterUsageTags.cloudProvider":"Azure","spark.hadoop.hive.server2.thrift.http.port":"10000","spark.databricks.clusterUsageTags.clusterLogDeliveryEnabled":"false","spark.shuffle.manager":"SORT","spark.hadoop.hive.server2.keystore.password":"*********(redacted)","spark.databricks.acl.provider":"com.databricks.sql.acl.ReflectionBackedAclProvider","spark.databricks.clusterUsageTags.enableElasticDisk":"true","spark.hadoop.parquet.abfs.readahead.optimization.enabled":"true","spark.hadoop.spark.hadoop.aws.glue.cache.table.ttl-mins":"30","spark.databricks.repo.gitReference":"master","orgId":"984752964297111","spark.databricks.eventLog.listenerClassName":"com.databricks.backend.daemon.driver.DBCEventLoggingListener","spark.databricks.clusterUsageTags.clusterStateMessage":"Starting Spark","spark.databricks.clusterUsageTags.sparkVersion":"13.3.x-photon-scala2.12","spark.databricks.clusterUsageTags.hailEnabled":"false","spark.databricks.unityCatalog.legacy.enableCrossScopeCredCache":"true","spark.sql.streaming.checkpointFileManagerClass":"com.databricks.spark.sql.streaming.DatabricksCheckpointFileManager","spark.databricks.clusterUsageTags.numPerGlobalInitScriptsV2":"2","spark.databricks.clusterUsageTags.userProvidedRemoteVolumeSizeGb":"0","spark.hadoop.fs.wasbs.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.hadoop.fs.file.impl":"com.databricks.backend.daemon.driver.WorkspaceLocalFileSystem","spark.hadoop.hive.warehouse.subdir.inherit.perms":"false","spark.databricks.unityCatalog.volumes.fuse.server.enabled":"true","spark.speculation.multiplier":"3","spark.databricks.clusterUsageTags.clusterPythonVersion":"3","spark.databricks.clusterUsageTags.ngrokNpipEnabled":"false","spark.databricks.unityCatalog.credentialScope.enabled":"*********(redacted)","spark.hadoop.hive.server2.thrift.http.cookie.auth.enabled":"false","spark.databricks.job.type":"notebook","spark.databricks.pipelines.analysisId":"DLTAnalysisID-59f00-11ec6-b0f35-f","spark.storage.memoryFraction":"0.5","spark.r.numRBackendThreads":"1","spark.databricks.inherited.credentials.keys.spark.databricks.api.token":"*********(redacted)","spark.databricks.unityCatalog.enforce.permissions":"false","spark.hadoop.hive.server2.idle.operation.timeout":"7200000","spark.hadoop.hive.server2.transport.mode":"http","spark.hadoop.spark.hadoop.aws.glue.cache.db.ttl-mins":"30","spark.databricks.notebook.path":"/Repos/peter.stern@databricks.com/DB_Projects/DatabricksPerfProfiler/Tests/SituationCreators/DataSkipping","spark.databricks.tahoe.logStore.aws.class":"com.databricks.tahoe.store.MultiClusterLogStore","spark.hadoop.fs.s3a.fast.upload.default":"true","spark.databricks.driver.preferredMavenCentralMirrorUrl":"*********(redacted)","spark.master":"local[*, 4]","spark.databricks.clusterUsageTags.sparkEnvVarContainsNewline":"false","spark.databricks.execution.rootSqlExecutionId":"0","spark.files.fetchFailure.unRegisterOutputOnHost":"true","spark.hadoop.fs.s3a.retry.throttle.interval":"500ms","spark.sql.allowMultipleContexts":"false","spark.databricks.sql.initial.catalog.name":"hive_metastore","spark.databricks.clusterUsageTags.privateLinkEnabled":"false","spark.hadoop.fs.s3a.fast.upload":"true","spark.databricks.repo.gitUrl":"*********(redacted)","spark.databricks.secret.sparkConf.keys.toRedact":"*********(redacted)","NFS_REPL_TEMP_DIR":"/local_disk0/.ephemeral_nfs/repl_tmp_data/ReplId-3cb19-91ec5-bc30b-d","spark.executor.memory":"1821m","spark.hadoop.fs.azure.user.agent.prefix":"*********(redacted)","spark.executor.id":"driver","spark.worker.aioaLazyConfig.iamReadinessCheckClientClass":"com.databricks.backend.daemon.driver.NephosIamRoleCheckClient","spark.hadoop.fs.s3a.retry.interval":"250ms","spark.rpc.message.maxSize":"256","spark.databricks.token":"*********(redacted)","spark.databricks.clusterUsageTags.clusterLogDestination":"","spark.scheduler.listenerbus.eventqueue.capacity":"20000","spark.hadoop.databricks.loki.fileSystemCache.enabled":"true","spark.databricks.env":"databricks-python-repl-ipykernel","spark.hadoop.parquet.page.size.check.estimate":"false","spark.databricks.repo.gitCommit":"ea79fadf0fe93e0a8df00470c2687afb78e53fde","spark.hadoop.hive.server2.keystore.path":"/databricks/keys/jetty-ssl-driver-keystore.jks","spark.streaming.driver.writeAheadLog.closeFileAfterWrite":"true","spark.databricks.wsfsPublicPreview":"true","spark.rdd.compress":"true","spark.hadoop.mapred.output.committer.class":"com.databricks.backend.daemon.data.client.DirectOutputCommitter","spark.storage.blockManagerTimeoutIntervalMs":"300000","spark.databricks.driverNodeTypeId":"Standard_DS3_v2","spark.hadoop.fs.azure.skip.metrics":"true","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2Workspace":"0","spark.hadoop.hive.hmshandler.retry.attempts":"10","spark.databricks.eventLog.dir":"eventlogs","spark.hadoop.fs.fcfs-wasb.impl":"*********(redacted)","spark.hadoop.fs.gs.outputstream.upload.chunk.size":"16777216","spark.hadoop.spark.driverproxy.customHeadersToProperties":"*********(redacted)","spark.databricks.automl.serviceEnabled":"true","spark.databricks.clusterUsageTags.sparkEnvVarContainsDoubleQuotes":"false","spark.databricks.credential.scope.fs.gs.auth.access.tokenProviderClassName":"*********(redacted)","spark.akka.frameSize":"256","spark.databricks.passthrough.s3a.tokenProviderClassName":"*********(redacted)","spark.databricks.delta.multiClusterWrites.enabled":"true","spark.hadoop.fs.fcfs-s3n.impl.disable.cache":"true","spark.databricks.clusterUsageTags.attribute_tag_dust_execution_env":"","spark.hadoop.fs.AbstractFileSystem.gs.impl":"shaded.databricks.com.google.cloud.hadoop.fs.gcs.GoogleHadoopFS","spark.databricks.clusterUsageTags.sparkImageLabel":"release__13.3.x-snapshot-photon-scala2.12__databricks-universe__13.3.12__ca78acd__818fc34__jenkins__8ed39b5__format-3","spark.serializer.objectStreamReset":"100","spark.hadoop.fs.abfs.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.databricks.clusterUsageTags.sparkEnvVarContainsEscape":"false","spark.sparkr.use.daemon":"false","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2Abfss":"0","spark.databricks.clusterUsageTags.clusterFirstOnDemand":"1","spark.files.useFetchCache":"false","spark.sql.hive.metastore.version":"0.13.0","spark.databricks.clusterUsageTags.driverPublicDns":"20.57.65.98","spark.databricks.clusterUsageTags.clusterNumCustomTags":"1","spark.databricks.clusterUsageTags.clusterName":"job-274603979781452-run-23538773048979-Job_cluster","spark.sql.hive.metastore.sharedPrefixes":"org.mariadb.jdbc,com.mysql.jdbc,org.postgresql,com.microsoft.sqlserver,microsoft.sql.DateTimeOffset,microsoft.sql.Types,com.databricks,com.codahale,com.fasterxml.jackson,shaded.databricks","spark.databricks.clusterUsageTags.clusterNumSshKeys":"0","spark.hadoop.fs.s3a.attempts.maximum":"10","spark.databricks.clusterUsageTags.orgId":"984752964297111","spark.memory.offHeap.enabled":"true","spark.databricks.redactor":"com.databricks.spark.util.DatabricksSparkLogRedactorProxy","spark.hadoop.fs.s3a.block.size":"67108864","spark.hadoop.hive.server2.enable.doAs":"false","spark.databricks.clusterUsageTags.sparkEnvVarContainsDollarSign":"false","spark.databricks.clusterUsageTags.clusterResourceClass":"SingleNode","spark.hadoop.hive.server2.idle.session.timeout":"900000","spark.hadoop.fs.abfs.impl.disable.cache":"true","spark.hadoop.fs.fcfs-abfss.impl.disable.cache":"true","spark.databricks.clusterUsageTags.autoTerminationMinutes":"0","spark.databricks.clusterUsageTags.attribute_tag_dust_suite":"","spark.databricks.passthrough.glue.executorServiceFactoryClassName":"*********(redacted)","spark.databricks.clusterUsageTags.enableDfAcls":"false","spark.hadoop.parquet.block.size.row.check.max":"10","spark.databricks.clusterUsageTags.driverInstancePrivateIp":"10.139.0.128","spark.databricks.clusterSource":"JOB","spark.hadoop.fs.cpfs-abfss.impl":"*********(redacted)","spark.hadoop.fs.s3a.connection.timeout":"50000","spark.hadoop.fs.cpfs-adl.impl.disable.cache":"true","spark.hadoop.fs.fcfs-abfs.impl.disable.cache":"true","spark.databricks.clusterUsageTags.region":"eastus2","spark.ui.port":"40001","spark.sql.parquet.compression.codec":"snappy","spark.databricks.workspaceUrl":"*********(redacted)","spark.hadoop.fs.abfss.impl.disable.cache":"true","spark.hadoop.parquet.filter.columnindex.enabled":"false","spark.sql.execution.id":"0","spark.databricks.passthrough.adls.gen2.tokenProviderClassName":"*********(redacted)","spark.hadoop.hive.hmshandler.retry.interval":"2000","spark.hadoop.fs.cpfs-abfss.impl.disable.cache":"true","spark.hadoop.fs.mlflowdbfs.impl":"com.databricks.mlflowdbfs.MlflowdbfsFileSystem","spark.databricks.acl.client":"com.databricks.spark.sql.acl.client.SparkSqlAclClient","spark.databricks.clusterUsageTags.dataPlaneRegion":"eastus2","spark.databricks.clusterUsageTags.clusterOwnerUserId":"5246238868874017","spark.streaming.driver.writeAheadLog.allowBatching":"true","spark.databricks.repo.gitStatus":"unknown","spark.databricks.clusterUsageTags.enableLocalDiskEncryption":"false","spark.hadoop.fs.azure.authorization.caching.enable":"false","spark.databricks.credential.scope.fs.s3a.tokenProviderClassName":"*********(redacted)","spark.hadoop.hive.server2.use.SSL":"true","spark.hadoop.fs.s3a.threads.max":"136","spark.repl.class.uri":"spark://10.139.64.122:44085/classes","spark.databricks.overrideDefaultCommitProtocol":"org.apache.spark.sql.execution.datasources.SQLHadoopMapReduceCommitProtocol","spark.databricks.optimizer.optimizeLimit.maxLimit":"10001","spark.driver.host":"10.139.64.122","spark.driver.allowMultipleContexts":"false","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2Gcs":"0","spark.databricks.driverNfs.enabled":"true","spark.hadoop.parquet.page.metadata.validation.enabled":"true","spark.hadoop.fs.fcfs-abfs.impl":"*********(redacted)","spark.hadoop.fs.s3a.multipart.size":"10485760","spark.databricks.delta.logStore.crossCloud.fatal":"true","spark.task.reaper.enabled":"true","spark.hadoop.fs.fcfs-s3a.impl":"*********(redacted)","spark.databricks.clusterUsageTags.clusterNodeType":"Standard_DS3_v2","spark.databricks.cloudProvider":"Azure","spark.databricks.clusterUsageTags.instanceWorkerEnvId":"workerenv-984752964297111","spark.databricks.inherited.credentials.keys.spark.databricks.uc.api.token":"*********(redacted)","spark.databricks.sessionUUID":"797146ac-c7f5-4ff2-a506-c99ef0f4235e","spark.databricks.cluster.profile":"singleNode","spark.shuffle.memoryFraction":"0.2","spark.databricks.clusterUsageTags.clusterScalingType":"fixed_size","spark.hadoop.fs.fcfs-s3.impl.disable.cache":"true","spark.hadoop.fs.dbfsartifacts.impl":"com.databricks.backend.daemon.data.client.DBFSV1","spark.databricks.credential.redactor":"*********(redacted)","spark.databricks.clusterUsageTags.isDpCpPrivateLinkEnabled":"false","spark.app.name":"Databricks Shell","spark.databricks.clusterUsageTags.clusterSku":"STANDARD_SKU","spark.hadoop.fs.azure.cache.invalidator.type":"com.databricks.encryption.utils.CacheInvalidatorImpl","spark.metrics.conf":"/databricks/spark/conf/metrics.properties","spark.databricks.workload.name":"JobRun","spark.sql.streaming.stopTimeout":"15s","spark.hadoop.fs.s3a.assumed.role.credentials.provider":"*********(redacted)","spark.delta.sharing.profile.provider.class":"*********(redacted)","spark.hadoop.spark.databricks.io.parquet.verifyChecksumOnWrite.enabled":"false","spark.files.overwrite":"true","spark.databricks.tahoe.logStore.gcp.class":"com.databricks.tahoe.store.GCPLogStore","spark.databricks.credential.scope.fs.impl":"*********(redacted)","spark.hadoop.spark.databricks.io.parquet.verifyChecksumOnWrite.throwsException":"false","spark.databricks.passthrough.s3a.threadPoolExecutor.factory.class":"com.databricks.backend.daemon.driver.aws.S3APassthroughThreadPoolExecutorFactory","spark.hadoop.fs.s3a.retry.limit":"6","spark.databricks.preemption.enabled":"true","spark.hadoop.fs.gs.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.hadoop.fs.dbfs.impl":"com.databricks.backend.daemon.data.client.DbfsHadoop3","spark.databricks.clusterUsageTags.enableGlueCatalogCredentialPassthrough":"*********(redacted)","spark.shuffle.reduceLocality.enabled":"false","spark.databricks.repl.enableClassFileCleanup":"true","spark.hadoop.fs.s3a.multipart.threshold":"104857600","spark.hadoop.fs.fcfs-abfss.impl":"*********(redacted)","spark.sparklyr-backend.threads":"1","spark.hadoop.fs.fcfs-wasbs.impl.disable.cache":"true","spark.databricks.clusterUsageTags.ignoreTerminationEventInAlerting":"false","spark.hadoop.databricks.fs.perfMetrics.enable":"true","spark.databricks.eventLog.enabled":"true","spark.databricks.clusterUsageTags.managedResourceGroup":"databricks-rg-field-eng-east-fg2bkkcjf6sio","spark.databricks.isShieldWorkspace":"false","spark.hadoop.spark.hadoop.aws.glue.cache.table.size":"1000","spark.databricks.api.url":"https://eastus2.azuredatabricks.net","spark.databricks.inherited.spark.databricks.api.url":"*********(redacted)","spark.hadoop.fs.fcfs-wasbs.impl":"*********(redacted)","spark.databricks.clusterUsageTags.clusterPinned":"false","spark.speculation.quantile":"0.9","spark.databricks.job.id":"120914686532015","spark.hadoop.fs.cpfs-s3a.impl":"*********(redacted)","spark.hadoop.fs.cpfs-adl.impl":"*********(redacted)","userId":"5246238868874017","spark.hadoop.fs.wasb.impl.disable.cache":"true","spark.sql.legacy.createHiveTableByDefault":"false","spark.scheduler.mode":"FAIR","spark.shuffle.service.port":"4048","spark.databricks.qpl.queryId":"a2d5be24-f79f-47e0-ab03-85d764a1f013","spark.databricks.clusterUsageTags.isIMv2Enabled":"false","spark.hadoop.fs.fcfs-wasb.impl.disable.cache":"true","spark.hadoop.databricks.s3.verifyBucketExists.enabled":"false","spark.databricks.driverNfs.pathSuffix":".ephemeral_nfs","spark.sql.sources.commitProtocolClass":"com.databricks.sql.transaction.directory.DirectoryAtomicCommitProtocol","spark.hadoop.fs.s3a.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.databricks.driverNfs.clusterWidePythonLibsEnabled":"true","spark.connect.extensions.relation.classes":"io.delta.connect.DeltaRelationPlugin","spark.scheduler.pool":"4373445070598975677","spark.hadoop.databricks.loki.fileStatusCache.enabled":"true","spark.databricks.unityCatalog.credentialManager.tokenRefreshEnabled":"*********(redacted)","spark.memory.offHeap.size":"5728370688","spark.databricks.clusterUsageTags.azureSubscriptionId":"3f2e4d32-8e8d-46d6-82bc-5bb8d962328b","spark.databricks.clusterUsageTags.clusterNoDriverDaemon":"false","spark.databricks.clusterUsageTags.clusterState":"Pending","spark.sql.parquet.cacheMetadata":"true","spark.databricks.clusterUsageTags.clusterSizeType":"VM_CONTAINER","spark.databricks.clusterUsageTags.effectiveSparkVersion":"13.3.x-photon-scala2.12","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2Dbfs":"0","spark.databricks.clusterUsageTags.driverContainerId":"bd692b0bef384c12a995d531971b051d","spark.worker.aioaLazyConfig.dbfsReadinessCheckClientClass":"com.databricks.backend.daemon.driver.NephosDbfsReadinessCheckClient","spark.databricks.clusterUsageTags.clusterUnityCatalogMode":"*********(redacted)","spark.databricks.clusterUsageTags.clusterAllTags":"[{\"key\":\"ResourceClass\",\"value\":\"SingleNode\"},{\"key\":\"Vendor\",\"value\":\"Databricks\"},{\"key\":\"Creator\",\"value\":\"peter.stern@databricks.com\"},{\"key\":\"ClusterName\",\"value\":\"job-274603979781452-run-23538773048979-Job_cluster\"},{\"key\":\"ClusterId\",\"value\":\"0319-105822-dwdvii6m\"},{\"key\":\"JobId\",\"value\":\"274603979781452\"},{\"key\":\"RunName\",\"value\":\"GenerateDataSkippingLog\"},{\"key\":\"owner\",\"value\":\"kyle@databricks.com\"},{\"key\":\"DatabricksEnvironment\",\"value\":\"workerenv-984752964297111\"}]","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2Volumes":"0","spark.hadoop.parquet.page.write-checksum.enabled":"true","spark.plugins":"org.apache.spark.sql.connect.SparkConnectPlugin","spark.cleaner.referenceTracking.blocking":"false","spark.hadoop.databricks.dbfs.client.version":"v2","spark.hadoop.fs.fcfs-s3a.impl.disable.cache":"true","spark.databricks.clusterUsageTags.attribute_tag_service":"","spark.databricks.cloudfetch.requesterClassName":"*********(redacted)","spark.databricks.clusterUsageTags.clusterOwnerOrgId":"984752964297111","spark.jobGroup.id":"4373445070598975677_4922646936881899313_job-120914686532015-run-1-action-3037558833761539","spark.databricks.workload.id":"984752964297111-120914686532015-1","spark.databricks.service.dbutils.server.backend":"com.databricks.dbconnect.SparkServerDBUtils","spark.hadoop.fs.s3a.impl.disable.cache":"true","spark.databricks.clusterUsageTags.sparkEnvVarContainsBacktick":"false","spark.databricks.credential.aws.secretKey.redactor":"*********(redacted)"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":0,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":3,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"spark_plan_40\",\"name\":\"WholeStageCodegen\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[2],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":2,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"spark_plan_34\",\"name\":\"PhotonResultStage\"}","Callsite":"mapPartitionsWithIndexInternal at PhotonExec.scala:405","Parent IDs":[1],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":0,"Name":"PhotonFileScanRDD","Scope":"{\"id\":\"spark_plan_34\",\"name\":\"PhotonResultStage\"}","Callsite":"RDD at PhotonFileScanRDD.scala:44","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":1,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"spark_plan_34\",\"name\":\"PhotonResultStage\"}","Callsite":"mapPartitionsWithIndexInternal at photonPhysicalOperators.scala:5158","Parent IDs":[0],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:258)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:397)\npy4j.Gateway.invoke(Gateway.java:306)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:195)\npy4j.ClientServerConnection.run(ClientServerConnection.java:115)\njava.lang.Thread.run(Thread.java:750)","Submission Time":1710846020293,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.hadoop.fs.idbfs.impl":"com.databricks.io.idbfs.IdbfsFileSystem","spark.databricks.session.share":"false","spark.databricks.repo.gitProvider":"gitHub","spark.hadoop.hive.server2.session.check.interval":"60000","spark.databricks.tahoe.logStore.class":"com.databricks.tahoe.store.DelegatingLogStore","spark.driver.port":"44085","spark.databricks.managedCatalog.clientClassName":"com.databricks.managedcatalog.ManagedCatalogClientImpl","spark.databricks.clusterUsageTags.sparkMasterUrlType":"*********(redacted)","spark.hadoop.fs.cpfs-s3n.impl":"*********(redacted)","spark.databricks.clusterUsageTags.sparkEnvVarContainsSingleQuotes":"false","spark.databricks.clusterUsageTags.clusterCreator":"JobLauncher","spark.databricks.mlflow.autologging.enabled":"true","spark.databricks.clusterUsageTags.enableSqlAclsOnly":"false","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2":"0","spark.sql.sources.default":"delta","spark.databricks.tahoe.logStore.azure.class":"com.databricks.tahoe.store.AzureLogStore","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED --add-opens=java.management/sun.management=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.task.reaper.killTimeout":"60s","spark.hadoop.fs.fcfs-s3.impl":"*********(redacted)","spark.job.interruptOnCancel":"true","spark.hadoop.fs.s3a.max.total.tasks":"1000","spark.databricks.clusterUsageTags.userProvidedRemoteVolumeType":"azure_disk_volume_type: PREMIUM_LRS\n","spark.home":"/databricks/spark","spark.hadoop.fs.s3n.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.databricks.metrics.filesystem_io_metrics":"true","spark.hadoop.fs.stage.impl.disable.cache":"true","spark.hadoop.spark.sql.parquet.output.committer.class":"org.apache.spark.sql.parquet.DirectParquetOutputCommitter","spark.databricks.clusterUsageTags.clusterAvailability":"ON_DEMAND_AZURE","spark.databricks.io.directoryCommit.enableLogicalDelete":"false","spark.app.startTime":"1710845951397","spark.executor.tempDirectory":"/local_disk0/tmp","spark.hadoop.fs.s3a.connection.maximum":"200","spark.databricks.credential.scope.fs.adls.gen2.tokenProviderClassName":"*********(redacted)","spark.databricks.clusterUsageTags.driverInstanceId":"79a81908d2ff43548410866dcc44e341","spark.databricks.autotune.maintenance.client.classname":"com.databricks.maintenanceautocompute.MACClientImpl","spark.databricks.clusterUsageTags.userProvidedSparkVersion":"*********(redacted)","spark.hadoop.fs.gs.impl.disable.cache":"true","spark.databricks.sparkContextId":"7286199472653344301","spark.databricks.workerNodeTypeId":"Standard_DS3_v2","spark.hadoop.databricks.s3.create.deleteUnnecessaryFakeDirectories":"false","spark.databricks.clusterUsageTags.workerEnvironmentId":"workerenv-984752964297111","spark.hadoop.mapreduce.fileoutputcommitter.algorithm.version":"2","spark.databricks.clusterUsageTags.clusterId":"0319-105822-dwdvii6m","spark.databricks.privateLinkEnabled":"false","spark.databricks.service.client.type":"python","spark.databricks.clusterUsageTags.runtimeEngine":"PHOTON","spark.job.description":"spark.table('hive_metastore.sternp.flights').fi...","spark.databricks.clusterUsageTags.clusterWorkers":"0","spark.app.id":"local-1710845960024","spark.r.sql.derby.temp.dir":"/tmp/Rtmp4Hkc3N","spark.databricks.clusterUsageTags.enableCredentialPassthrough":"false","spark.extraListeners":"com.databricks.backend.daemon.driver.DBCEventLoggingListener","spark.databricks.passthrough.glue.credentialsProviderFactoryClassName":"*********(redacted)","spark.databricks.cloudfetch.requestDownloadUrlsWithHeaders":"*********(redacted)","spark.databricks.clusterUsageTags.clusterMetastoreAccessType":"RDS_DIRECT","spark.hadoop.parquet.page.verify-checksum.enabled":"true","spark.databricks.repo.relativePath":"DatabricksPerfProfiler/Tests/SituationCreators/DataSkipping","spark.databricks.job.runId":"1","spark.connect.extensions.command.classes":"io.delta.connect.DeltaCommandPlugin","spark.databricks.clusterUsageTags.driverContainerPrivateIp":"10.139.64.122","spark.driver.tempDirectory":"/local_disk0/tmp","spark.hadoop.fs.wasbs.impl.disable.cache":"true","spark.repl.class.outputDir":"/local_disk0/tmp/repl/spark-7286199472653344301-1115d1ed-53f6-4b9c-b9db-824b82339854","spark.shuffle.service.enabled":"true","spark.speculation":"false","spark.eventLog.enabled":"false","spark.hadoop.spark.databricks.metrics.filesystem_metrics":"true","spark.hadoop.fs.fcfs-s3n.impl":"*********(redacted)","spark.databricks.clusterUsageTags.enableJdbcAutoStart":"true","spark.sql.hive.metastore.jars":"/databricks/databricks-hive/*","spark.hadoop.fs.cpfs-s3.impl":"*********(redacted)","spark.databricks.clusterUsageTags.attribute_tag_budget":"","spark.databricks.clusterUsageTags.userId":"*********(redacted)","spark.databricks.dataLineage.enabled":"true","spark.hadoop.spark.sql.sources.outputCommitterClass":"com.databricks.backend.daemon.data.client.MapReduceDirectOutputCommitter","spark.databricks.clusterUsageTags.clusterTargetWorkers":"0","spark.hadoop.spark.hadoop.aws.glue.cache.db.size":"1000","spark.hadoop.fs.adl.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.sql.hive.convertCTAS":"true","spark.databricks.passthrough.oauth.refresher.impl":"*********(redacted)","spark.databricks.secret.envVar.keys.toRedact":"*********(redacted)","spark.databricks.clusterUsageTags.containerType":"LXC","spark.databricks.unityCatalog.enabled":"true","spark.ui.prometheus.enabled":"true","spark.worker.cleanup.enabled":"false","spark.sql.hive.convertMetastoreParquet":"true","spark.databricks.unityCatalog.volumes.enabled":"true","spark.hadoop.fs.stage.impl":"com.databricks.backend.daemon.driver.managedcatalog.PersonalStagingFileSystem","spark.hadoop.fs.s3.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.databricks.clusterUsageTags.enableJobsAutostart":"true","spark.hadoop.fs.s3n.impl.disable.cache":"true","spark.hadoop.fs.adl.impl.disable.cache":"true","spark.databricks.cloudfetch.hasRegionSupport":"true","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2S3":"0","spark.hadoop.fs.s3a.fast.upload.active.blocks":"32","spark.hadoop.fs.s3.impl.disable.cache":"true","spark.databricks.sql.configMapperClass":"com.databricks.dbsql.config.SqlConfigMapperBridge","spark.hadoop.databricks.s3commit.client.sslTrustAll":"false","spark.databricks.clusterUsageTags.attribute_tag_dust_maintainer":"","spark.databricks.clusterUsageTags.instanceWorkerEnvNetworkType":"default","spark.databricks.replId":"ReplId-3cb19-91ec5-bc30b-d","spark.databricks.clusterUsageTags.clusterSpotBidMaxPrice":"-1.0","spark.databricks.clusterUsageTags.userProvidedRemoteVolumeCount":"0","spark.r.backendConnectionTimeout":"604800","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2File":"0","spark.databricks.unityCatalog.queryFederation.enabled":"true","spark.driver.maxResultSize":"4g","spark.hadoop.parquet.memory.pool.ratio":"0.5","spark.databricks.clusterUsageTags.driverNodeType":"Standard_DS3_v2","spark.sql.catalogImplementation":"hive","spark.databricks.clusterUsageTags.clusterGeneration":"0","spark.databricks.repo.gitReferenceType":"branch","spark.databricks.wsfs.workspacePrivatePreview":"true","spark.databricks.clusterUsageTags.isSingleUserCluster":"true","user":"peter.stern@databricks.com","spark.databricks.passthrough.adls.tokenProviderClassName":"*********(redacted)","spark.databricks.acl.scim.client":"com.databricks.spark.sql.acl.client.DriverToWebappScimClient","spark.databricks.unityCatalog.credentialManager.apiTokenProviderClassName":"*********(redacted)","spark.databricks.clusterUsageTags.isServicePrincipalCluster":"false","spark.sql.warehouse.dir":"dbfs:/user/hive/warehouse","spark.logConf":"true","spark.hadoop.parquet.block.size.row.check.min":"10","spark.databricks.service.dbutils.repl.backend":"com.databricks.dbconnect.ReplDBUtils","spark.databricks.enablePublicDbfsFuse":"false","spark.hadoop.fs.abfss.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.hadoop.fs.wasb.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.databricks.clusterUsageTags.cloudProvider":"Azure","spark.hadoop.hive.server2.thrift.http.port":"10000","spark.databricks.clusterUsageTags.clusterLogDeliveryEnabled":"false","spark.shuffle.manager":"SORT","spark.hadoop.hive.server2.keystore.password":"*********(redacted)","spark.databricks.acl.provider":"com.databricks.sql.acl.ReflectionBackedAclProvider","spark.databricks.clusterUsageTags.enableElasticDisk":"true","spark.hadoop.parquet.abfs.readahead.optimization.enabled":"true","spark.hadoop.spark.hadoop.aws.glue.cache.table.ttl-mins":"30","spark.databricks.repo.gitReference":"master","orgId":"984752964297111","spark.databricks.eventLog.listenerClassName":"com.databricks.backend.daemon.driver.DBCEventLoggingListener","spark.databricks.clusterUsageTags.clusterStateMessage":"Starting Spark","spark.databricks.clusterUsageTags.sparkVersion":"13.3.x-photon-scala2.12","spark.databricks.clusterUsageTags.hailEnabled":"false","spark.databricks.unityCatalog.legacy.enableCrossScopeCredCache":"true","spark.sql.streaming.checkpointFileManagerClass":"com.databricks.spark.sql.streaming.DatabricksCheckpointFileManager","spark.databricks.clusterUsageTags.numPerGlobalInitScriptsV2":"2","spark.databricks.clusterUsageTags.userProvidedRemoteVolumeSizeGb":"0","spark.hadoop.fs.wasbs.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.hadoop.fs.file.impl":"com.databricks.backend.daemon.driver.WorkspaceLocalFileSystem","spark.hadoop.hive.warehouse.subdir.inherit.perms":"false","spark.databricks.unityCatalog.volumes.fuse.server.enabled":"true","spark.speculation.multiplier":"3","spark.databricks.clusterUsageTags.clusterPythonVersion":"3","spark.databricks.clusterUsageTags.ngrokNpipEnabled":"false","spark.databricks.unityCatalog.credentialScope.enabled":"*********(redacted)","spark.hadoop.hive.server2.thrift.http.cookie.auth.enabled":"false","spark.databricks.job.type":"notebook","spark.databricks.pipelines.analysisId":"DLTAnalysisID-59f00-11ec6-b0f35-f","spark.storage.memoryFraction":"0.5","spark.r.numRBackendThreads":"1","spark.databricks.inherited.credentials.keys.spark.databricks.api.token":"*********(redacted)","spark.databricks.unityCatalog.enforce.permissions":"false","spark.hadoop.hive.server2.idle.operation.timeout":"7200000","spark.hadoop.hive.server2.transport.mode":"http","spark.hadoop.spark.hadoop.aws.glue.cache.db.ttl-mins":"30","spark.databricks.notebook.path":"/Repos/peter.stern@databricks.com/DB_Projects/DatabricksPerfProfiler/Tests/SituationCreators/DataSkipping","spark.databricks.tahoe.logStore.aws.class":"com.databricks.tahoe.store.MultiClusterLogStore","spark.hadoop.fs.s3a.fast.upload.default":"true","spark.databricks.driver.preferredMavenCentralMirrorUrl":"*********(redacted)","spark.master":"local[*, 4]","spark.databricks.clusterUsageTags.sparkEnvVarContainsNewline":"false","spark.databricks.execution.rootSqlExecutionId":"0","spark.files.fetchFailure.unRegisterOutputOnHost":"true","spark.hadoop.fs.s3a.retry.throttle.interval":"500ms","spark.sql.allowMultipleContexts":"false","spark.databricks.sql.initial.catalog.name":"hive_metastore","spark.databricks.clusterUsageTags.privateLinkEnabled":"false","spark.hadoop.fs.s3a.fast.upload":"true","spark.databricks.repo.gitUrl":"*********(redacted)","spark.databricks.secret.sparkConf.keys.toRedact":"*********(redacted)","NFS_REPL_TEMP_DIR":"/local_disk0/.ephemeral_nfs/repl_tmp_data/ReplId-3cb19-91ec5-bc30b-d","spark.executor.memory":"1821m","spark.hadoop.fs.azure.user.agent.prefix":"*********(redacted)","spark.executor.id":"driver","spark.worker.aioaLazyConfig.iamReadinessCheckClientClass":"com.databricks.backend.daemon.driver.NephosIamRoleCheckClient","spark.hadoop.fs.s3a.retry.interval":"250ms","spark.rpc.message.maxSize":"256","spark.databricks.token":"*********(redacted)","spark.databricks.clusterUsageTags.clusterLogDestination":"","spark.scheduler.listenerbus.eventqueue.capacity":"20000","spark.hadoop.databricks.loki.fileSystemCache.enabled":"true","spark.databricks.env":"databricks-python-repl-ipykernel","spark.hadoop.parquet.page.size.check.estimate":"false","spark.databricks.repo.gitCommit":"ea79fadf0fe93e0a8df00470c2687afb78e53fde","spark.hadoop.hive.server2.keystore.path":"/databricks/keys/jetty-ssl-driver-keystore.jks","spark.streaming.driver.writeAheadLog.closeFileAfterWrite":"true","spark.databricks.wsfsPublicPreview":"true","spark.rdd.compress":"true","spark.hadoop.mapred.output.committer.class":"com.databricks.backend.daemon.data.client.DirectOutputCommitter","spark.storage.blockManagerTimeoutIntervalMs":"300000","spark.databricks.driverNodeTypeId":"Standard_DS3_v2","spark.hadoop.fs.azure.skip.metrics":"true","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2Workspace":"0","spark.hadoop.hive.hmshandler.retry.attempts":"10","spark.databricks.eventLog.dir":"eventlogs","spark.hadoop.fs.fcfs-wasb.impl":"*********(redacted)","spark.hadoop.fs.gs.outputstream.upload.chunk.size":"16777216","spark.hadoop.spark.driverproxy.customHeadersToProperties":"*********(redacted)","spark.databricks.automl.serviceEnabled":"true","spark.databricks.clusterUsageTags.sparkEnvVarContainsDoubleQuotes":"false","spark.databricks.credential.scope.fs.gs.auth.access.tokenProviderClassName":"*********(redacted)","spark.akka.frameSize":"256","spark.databricks.passthrough.s3a.tokenProviderClassName":"*********(redacted)","spark.databricks.delta.multiClusterWrites.enabled":"true","spark.hadoop.fs.fcfs-s3n.impl.disable.cache":"true","spark.databricks.clusterUsageTags.attribute_tag_dust_execution_env":"","spark.hadoop.fs.AbstractFileSystem.gs.impl":"shaded.databricks.com.google.cloud.hadoop.fs.gcs.GoogleHadoopFS","spark.databricks.clusterUsageTags.sparkImageLabel":"release__13.3.x-snapshot-photon-scala2.12__databricks-universe__13.3.12__ca78acd__818fc34__jenkins__8ed39b5__format-3","spark.serializer.objectStreamReset":"100","spark.hadoop.fs.abfs.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.databricks.clusterUsageTags.sparkEnvVarContainsEscape":"false","spark.sparkr.use.daemon":"false","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2Abfss":"0","spark.databricks.clusterUsageTags.clusterFirstOnDemand":"1","spark.files.useFetchCache":"false","spark.sql.hive.metastore.version":"0.13.0","spark.databricks.clusterUsageTags.driverPublicDns":"20.57.65.98","spark.databricks.clusterUsageTags.clusterNumCustomTags":"1","spark.databricks.clusterUsageTags.clusterName":"job-274603979781452-run-23538773048979-Job_cluster","spark.sql.hive.metastore.sharedPrefixes":"org.mariadb.jdbc,com.mysql.jdbc,org.postgresql,com.microsoft.sqlserver,microsoft.sql.DateTimeOffset,microsoft.sql.Types,com.databricks,com.codahale,com.fasterxml.jackson,shaded.databricks","spark.databricks.clusterUsageTags.clusterNumSshKeys":"0","spark.hadoop.fs.s3a.attempts.maximum":"10","spark.databricks.clusterUsageTags.orgId":"984752964297111","spark.memory.offHeap.enabled":"true","spark.databricks.redactor":"com.databricks.spark.util.DatabricksSparkLogRedactorProxy","spark.hadoop.fs.s3a.block.size":"67108864","spark.hadoop.hive.server2.enable.doAs":"false","spark.databricks.clusterUsageTags.sparkEnvVarContainsDollarSign":"false","spark.databricks.clusterUsageTags.clusterResourceClass":"SingleNode","spark.hadoop.hive.server2.idle.session.timeout":"900000","spark.hadoop.fs.abfs.impl.disable.cache":"true","spark.hadoop.fs.fcfs-abfss.impl.disable.cache":"true","spark.databricks.clusterUsageTags.autoTerminationMinutes":"0","spark.databricks.clusterUsageTags.attribute_tag_dust_suite":"","spark.databricks.passthrough.glue.executorServiceFactoryClassName":"*********(redacted)","spark.databricks.clusterUsageTags.enableDfAcls":"false","spark.hadoop.parquet.block.size.row.check.max":"10","spark.databricks.clusterUsageTags.driverInstancePrivateIp":"10.139.0.128","spark.databricks.clusterSource":"JOB","spark.hadoop.fs.cpfs-abfss.impl":"*********(redacted)","spark.hadoop.fs.s3a.connection.timeout":"50000","spark.hadoop.fs.cpfs-adl.impl.disable.cache":"true","spark.hadoop.fs.fcfs-abfs.impl.disable.cache":"true","spark.databricks.clusterUsageTags.region":"eastus2","spark.ui.port":"40001","spark.sql.parquet.compression.codec":"snappy","spark.databricks.workspaceUrl":"*********(redacted)","spark.hadoop.fs.abfss.impl.disable.cache":"true","spark.hadoop.parquet.filter.columnindex.enabled":"false","spark.sql.execution.id":"0","spark.databricks.passthrough.adls.gen2.tokenProviderClassName":"*********(redacted)","spark.hadoop.hive.hmshandler.retry.interval":"2000","spark.hadoop.fs.cpfs-abfss.impl.disable.cache":"true","spark.hadoop.fs.mlflowdbfs.impl":"com.databricks.mlflowdbfs.MlflowdbfsFileSystem","spark.databricks.acl.client":"com.databricks.spark.sql.acl.client.SparkSqlAclClient","spark.databricks.clusterUsageTags.dataPlaneRegion":"eastus2","spark.databricks.clusterUsageTags.clusterOwnerUserId":"5246238868874017","spark.streaming.driver.writeAheadLog.allowBatching":"true","spark.databricks.repo.gitStatus":"unknown","spark.databricks.clusterUsageTags.enableLocalDiskEncryption":"false","spark.hadoop.fs.azure.authorization.caching.enable":"false","spark.databricks.credential.scope.fs.s3a.tokenProviderClassName":"*********(redacted)","spark.hadoop.hive.server2.use.SSL":"true","spark.hadoop.fs.s3a.threads.max":"136","spark.repl.class.uri":"spark://10.139.64.122:44085/classes","spark.databricks.overrideDefaultCommitProtocol":"org.apache.spark.sql.execution.datasources.SQLHadoopMapReduceCommitProtocol","spark.databricks.optimizer.optimizeLimit.maxLimit":"10001","spark.driver.host":"10.139.64.122","spark.driver.allowMultipleContexts":"false","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2Gcs":"0","spark.databricks.driverNfs.enabled":"true","spark.hadoop.parquet.page.metadata.validation.enabled":"true","spark.hadoop.fs.fcfs-abfs.impl":"*********(redacted)","spark.hadoop.fs.s3a.multipart.size":"10485760","spark.databricks.delta.logStore.crossCloud.fatal":"true","spark.task.reaper.enabled":"true","spark.hadoop.fs.fcfs-s3a.impl":"*********(redacted)","spark.databricks.clusterUsageTags.clusterNodeType":"Standard_DS3_v2","spark.databricks.cloudProvider":"Azure","spark.databricks.clusterUsageTags.instanceWorkerEnvId":"workerenv-984752964297111","spark.databricks.inherited.credentials.keys.spark.databricks.uc.api.token":"*********(redacted)","spark.databricks.sessionUUID":"797146ac-c7f5-4ff2-a506-c99ef0f4235e","spark.databricks.cluster.profile":"singleNode","spark.shuffle.memoryFraction":"0.2","spark.databricks.clusterUsageTags.clusterScalingType":"fixed_size","spark.hadoop.fs.fcfs-s3.impl.disable.cache":"true","spark.hadoop.fs.dbfsartifacts.impl":"com.databricks.backend.daemon.data.client.DBFSV1","spark.databricks.credential.redactor":"*********(redacted)","spark.databricks.clusterUsageTags.isDpCpPrivateLinkEnabled":"false","spark.app.name":"Databricks Shell","spark.databricks.clusterUsageTags.clusterSku":"STANDARD_SKU","spark.hadoop.fs.azure.cache.invalidator.type":"com.databricks.encryption.utils.CacheInvalidatorImpl","spark.metrics.conf":"/databricks/spark/conf/metrics.properties","spark.databricks.workload.name":"JobRun","spark.sql.streaming.stopTimeout":"15s","spark.hadoop.fs.s3a.assumed.role.credentials.provider":"*********(redacted)","spark.delta.sharing.profile.provider.class":"*********(redacted)","spark.hadoop.spark.databricks.io.parquet.verifyChecksumOnWrite.enabled":"false","spark.files.overwrite":"true","spark.databricks.tahoe.logStore.gcp.class":"com.databricks.tahoe.store.GCPLogStore","spark.databricks.credential.scope.fs.impl":"*********(redacted)","spark.hadoop.spark.databricks.io.parquet.verifyChecksumOnWrite.throwsException":"false","spark.databricks.passthrough.s3a.threadPoolExecutor.factory.class":"com.databricks.backend.daemon.driver.aws.S3APassthroughThreadPoolExecutorFactory","spark.hadoop.fs.s3a.retry.limit":"6","spark.databricks.preemption.enabled":"true","spark.hadoop.fs.gs.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.hadoop.fs.dbfs.impl":"com.databricks.backend.daemon.data.client.DbfsHadoop3","spark.databricks.clusterUsageTags.enableGlueCatalogCredentialPassthrough":"*********(redacted)","spark.shuffle.reduceLocality.enabled":"false","spark.databricks.repl.enableClassFileCleanup":"true","spark.hadoop.fs.s3a.multipart.threshold":"104857600","spark.hadoop.fs.fcfs-abfss.impl":"*********(redacted)","spark.sparklyr-backend.threads":"1","spark.hadoop.fs.fcfs-wasbs.impl.disable.cache":"true","spark.databricks.clusterUsageTags.ignoreTerminationEventInAlerting":"false","spark.hadoop.databricks.fs.perfMetrics.enable":"true","spark.databricks.eventLog.enabled":"true","spark.databricks.clusterUsageTags.managedResourceGroup":"databricks-rg-field-eng-east-fg2bkkcjf6sio","spark.databricks.isShieldWorkspace":"false","spark.hadoop.spark.hadoop.aws.glue.cache.table.size":"1000","spark.databricks.api.url":"https://eastus2.azuredatabricks.net","spark.databricks.inherited.spark.databricks.api.url":"*********(redacted)","spark.hadoop.fs.fcfs-wasbs.impl":"*********(redacted)","spark.databricks.clusterUsageTags.clusterPinned":"false","spark.speculation.quantile":"0.9","spark.databricks.job.id":"120914686532015","spark.hadoop.fs.cpfs-s3a.impl":"*********(redacted)","spark.hadoop.fs.cpfs-adl.impl":"*********(redacted)","userId":"5246238868874017","spark.hadoop.fs.wasb.impl.disable.cache":"true","spark.sql.legacy.createHiveTableByDefault":"false","spark.scheduler.mode":"FAIR","spark.shuffle.service.port":"4048","spark.databricks.qpl.queryId":"a2d5be24-f79f-47e0-ab03-85d764a1f013","spark.databricks.clusterUsageTags.isIMv2Enabled":"false","spark.hadoop.fs.fcfs-wasb.impl.disable.cache":"true","spark.hadoop.databricks.s3.verifyBucketExists.enabled":"false","spark.databricks.driverNfs.pathSuffix":".ephemeral_nfs","spark.sql.sources.commitProtocolClass":"com.databricks.sql.transaction.directory.DirectoryAtomicCommitProtocol","spark.hadoop.fs.s3a.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.databricks.driverNfs.clusterWidePythonLibsEnabled":"true","spark.connect.extensions.relation.classes":"io.delta.connect.DeltaRelationPlugin","spark.scheduler.pool":"4373445070598975677","spark.hadoop.databricks.loki.fileStatusCache.enabled":"true","spark.databricks.unityCatalog.credentialManager.tokenRefreshEnabled":"*********(redacted)","spark.memory.offHeap.size":"5728370688","spark.databricks.clusterUsageTags.azureSubscriptionId":"3f2e4d32-8e8d-46d6-82bc-5bb8d962328b","spark.databricks.clusterUsageTags.clusterNoDriverDaemon":"false","spark.databricks.clusterUsageTags.clusterState":"Pending","spark.sql.parquet.cacheMetadata":"true","spark.databricks.clusterUsageTags.clusterSizeType":"VM_CONTAINER","spark.databricks.clusterUsageTags.effectiveSparkVersion":"13.3.x-photon-scala2.12","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2Dbfs":"0","spark.databricks.clusterUsageTags.driverContainerId":"bd692b0bef384c12a995d531971b051d","spark.worker.aioaLazyConfig.dbfsReadinessCheckClientClass":"com.databricks.backend.daemon.driver.NephosDbfsReadinessCheckClient","spark.databricks.clusterUsageTags.clusterUnityCatalogMode":"*********(redacted)","spark.databricks.clusterUsageTags.clusterAllTags":"[{\"key\":\"ResourceClass\",\"value\":\"SingleNode\"},{\"key\":\"Vendor\",\"value\":\"Databricks\"},{\"key\":\"Creator\",\"value\":\"peter.stern@databricks.com\"},{\"key\":\"ClusterName\",\"value\":\"job-274603979781452-run-23538773048979-Job_cluster\"},{\"key\":\"ClusterId\",\"value\":\"0319-105822-dwdvii6m\"},{\"key\":\"JobId\",\"value\":\"274603979781452\"},{\"key\":\"RunName\",\"value\":\"GenerateDataSkippingLog\"},{\"key\":\"owner\",\"value\":\"kyle@databricks.com\"},{\"key\":\"DatabricksEnvironment\",\"value\":\"workerenv-984752964297111\"}]","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2Volumes":"0","spark.hadoop.parquet.page.write-checksum.enabled":"true","spark.plugins":"org.apache.spark.sql.connect.SparkConnectPlugin","spark.cleaner.referenceTracking.blocking":"false","spark.hadoop.databricks.dbfs.client.version":"v2","spark.hadoop.fs.fcfs-s3a.impl.disable.cache":"true","spark.databricks.clusterUsageTags.attribute_tag_service":"","spark.databricks.cloudfetch.requesterClassName":"*********(redacted)","spark.databricks.clusterUsageTags.clusterOwnerOrgId":"984752964297111","spark.jobGroup.id":"4373445070598975677_4922646936881899313_job-120914686532015-run-1-action-3037558833761539","spark.databricks.workload.id":"984752964297111-120914686532015-1","spark.databricks.service.dbutils.server.backend":"com.databricks.dbconnect.SparkServerDBUtils","spark.hadoop.fs.s3a.impl.disable.cache":"true","spark.databricks.clusterUsageTags.sparkEnvVarContainsBacktick":"false","spark.databricks.credential.aws.secretKey.redactor":"*********(redacted)"}}
{"Event":"SparkListenerTaskStart","Stage ID":0,"Stage Attempt ID":0,"Task Info":{"Task ID":0,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1710846020782,"Executor ID":"driver","Host":"10.139.64.122","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":0,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":0,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1710846020782,"Executor ID":"driver","Host":"10.139.64.122","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1710846023376,"Failed":false,"Killed":false,"Accumulables":[{"ID":2,"Name":"duration","Update":"1546","Value":"1546","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":6,"Name":"stage duration","Update":"1523","Value":"1523","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":8,"Name":"peak memory usage","Update":"214757990","Value":"214757990","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":9,"Name":"peak untracked memory usage","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":12,"Name":"cumulative time","Update":"1523438152","Value":"1523438152","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":13,"Name":"exclusive time","Update":"116047","Value":"116047","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":15,"Name":"tasks total","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":37,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":38,"Name":"number of output batches","Update":"2","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":39,"Name":"cumulative time","Update":"1523322105","Value":"1523322105","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":40,"Name":"exclusive time","Update":"1435868","Value":"1435868","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":42,"Name":"tasks total","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":43,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":44,"Name":"number of output batches","Update":"2","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":45,"Name":"cumulative time","Update":"1521886237","Value":"1521886237","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":46,"Name":"exclusive time","Update":"1521886237","Value":"1521886237","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":48,"Name":"tasks total","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":49,"Name":"cache hits size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":50,"Name":"cache hits size (uncompressed)","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":51,"Name":"cache misses size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":52,"Name":"cache misses size (uncompressed)","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":53,"Name":"cache true misses size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":54,"Name":"cache true misses size (uncompressed)","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":55,"Name":"cache rescheduled misses size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":56,"Name":"cache rescheduled misses size (uncompressed)","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":57,"Name":"cache writes size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":58,"Name":"cache writes size (uncompressed)","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":59,"Name":"cache writes stored compressed size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":60,"Name":"cache writes stored uncompressed size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":61,"Name":"executor time CPU - cache operations","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":62,"Name":"size of row groups before filtering","Update":"63449406","Value":"63449406","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":63,"Name":"row groups in files to read total","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":64,"Name":"row groups read actual","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":67,"Name":"executor time IO wait","Update":"1306393323","Value":"1306393323","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":68,"Name":"executor time IO wait - footers","Update":"124739377","Value":"124739377","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":69,"Name":"executor time IO wait - full files + column data","Update":"1181653946","Value":"1181653946","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":70,"Name":"executor time IO wait - Aether metadata","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":71,"Name":"executor time CPU","Update":"215492914","Value":"215492914","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":72,"Name":"executor time CPU - other","Update":"138016511","Value":"138016511","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":73,"Name":"executor time CPU - decoding footers","Update":"495807","Value":"495807","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":74,"Name":"executor time CPU - decoding columns","Update":"8252458","Value":"8252458","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":75,"Name":"executor time CPU - decompressing pages","Update":"65506972","Value":"65506972","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":76,"Name":"executor time CPU - decoding deletion vectors","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":77,"Name":"cloud storage requests to fetch parquet footer","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":78,"Name":"rows scanned","Update":"3985552","Value":"3985552","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":79,"Name":"data filters - rows skipped","Update":"3985551","Value":"3985551","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":80,"Name":"data filters - batches skipped","Update":"359","Value":"359","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":83,"Name":"row groups using lazy materialization","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":84,"Name":"executor time CPU - applying data filters","Update":"3221166","Value":"3221166","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":85,"Name":"columns with filters","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":87,"Name":"executor time CPU - applying dictionary filters","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":92,"Name":"peak memory usage","Update":"80537918","Value":"80537918","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":93,"Name":"peak reader threads utilized","Update":"4000","Value":"4000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":94,"Name":"size of data read with io requests","Update":"63454537","Value":"63454537","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":99,"Name":"number of non-local (rescheduled) scan tasks","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":120,"Name":"repeated reads estimated low size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":121,"Name":"repeated reads estimated high size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":122,"Name":"cloud storage request size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":123,"Name":"cloud storage response size","Update":"66553186","Value":"66553186","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":124,"Name":"cloud storage request count","Update":"25","Value":"25","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":125,"Name":"cloud storage request duration","Update":"1715","Value":"1715","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":126,"Name":"cloud storage retry count","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":127,"Name":"cloud storage retry duration","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":137,"Name":"time spent reading deletion vectors","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":138,"Name":"executor time IO wait - deletion vectors","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":148,"Name":"unified cache serve bytes for ParquetColumnChunk","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":149,"Name":"unified cache serve bytes for ParquetFooter","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":150,"Name":"unified cache serve bytes for Range","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":151,"Name":"unified cache read bytes for ParquetColumnChunk","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":152,"Name":"unified cache read bytes for ParquetFooter","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":153,"Name":"unified cache read bytes for Range","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":154,"Name":"unified cache write bytes for ParquetColumnChunk","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":155,"Name":"unified cache write bytes for ParquetFooter","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":156,"Name":"unified cache write bytes for Range","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":157,"Name":"unified cache populate time for ParquetColumnChunk","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":158,"Name":"unified cache populate time for ParquetFooter","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":159,"Name":"unified cache populate time for Range","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":163,"Name":"internal.metrics.executorDeserializeTime","Update":301,"Value":301,"Internal":true,"Count Failed Values":true},{"ID":164,"Name":"internal.metrics.executorDeserializeCpuTime","Update":271625000,"Value":271625000,"Internal":true,"Count Failed Values":true},{"ID":165,"Name":"internal.metrics.executorRunTime","Update":2180,"Value":2180,"Internal":true,"Count Failed Values":true},{"ID":166,"Name":"internal.metrics.executorCpuTime","Update":745657400,"Value":745657400,"Internal":true,"Count Failed Values":true},{"ID":167,"Name":"internal.metrics.resultSize","Update":7386,"Value":7386,"Internal":true,"Count Failed Values":true},{"ID":168,"Name":"internal.metrics.jvmGCTime","Update":44,"Value":44,"Internal":true,"Count Failed Values":true},{"ID":169,"Name":"internal.metrics.resultSerializationTime","Update":6,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":196,"Name":"internal.metrics.input.bytesRead","Update":63454537,"Value":63454537,"Internal":true,"Count Failed Values":true},{"ID":197,"Name":"internal.metrics.input.recordsRead","Update":3985552,"Value":3985552,"Internal":true,"Count Failed Values":true},{"ID":204,"Name":"internal.metrics.io.requestBytesCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":205,"Name":"internal.metrics.io.responseBytesCount","Update":66553186,"Value":66553186,"Internal":true,"Count Failed Values":true},{"ID":206,"Name":"internal.metrics.io.requestCount","Update":25,"Value":25,"Internal":true,"Count Failed Values":true},{"ID":207,"Name":"internal.metrics.io.requestMsDuration","Update":1715,"Value":1715,"Internal":true,"Count Failed Values":true},{"ID":208,"Name":"internal.metrics.io.retryCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":209,"Name":"internal.metrics.io.retryDelayMsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":212,"Name":"internal.metrics.trackedOffHeapMemorySize","Update":215020134,"Value":215020134,"Internal":true,"Count Failed Values":true},{"ID":213,"Name":"internal.metrics.photonBufferPoolMemorySize","Update":5332736,"Value":5332736,"Internal":true,"Count Failed Values":true},{"ID":214,"Name":"internal.metrics.photonizedTaskTimeNs","Update":1523438152,"Value":1523438152,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":670017736,"JVMOffHeapMemory":458868176,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":167213695,"OnHeapStorageMemory":178831,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":178831,"OffHeapUnifiedMemory":167213695,"DirectPoolMemory":726475,"MappedPoolMemory":0,"NettyDirectMemory":12582912,"JvmDirectMemory":726475,"SparkDirectMemoryOverLimit":262144,"TotalOffHeapMemory":180785226,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":15,"MinorGCTime":859,"MajorGCCount":6,"MajorGCTime":1603,"TotalGCTime":2462},"Task Metrics":{"Executor Deserialize Time":301,"Executor Deserialize CPU Time":271625000,"Executor Run Time":2180,"Executor CPU Time":745657400,"Peak Execution Memory":0,"Result Size":7386,"JVM GC Time":44,"Result Serialization Time":6,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":63454537,"Records Read":3985552},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":0,"Stage Attempt ID":0,"Stage Name":"save at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":3,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"spark_plan_40\",\"name\":\"WholeStageCodegen\"}","Callsite":"save at NativeMethodAccessorImpl.java:0","Parent IDs":[2],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":2,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"spark_plan_34\",\"name\":\"PhotonResultStage\"}","Callsite":"mapPartitionsWithIndexInternal at PhotonExec.scala:405","Parent IDs":[1],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":0,"Name":"PhotonFileScanRDD","Scope":"{\"id\":\"spark_plan_34\",\"name\":\"PhotonResultStage\"}","Callsite":"RDD at PhotonFileScanRDD.scala:44","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":1,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"spark_plan_34\",\"name\":\"PhotonResultStage\"}","Callsite":"mapPartitionsWithIndexInternal at photonPhysicalOperators.scala:5158","Parent IDs":[0],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:258)\nsun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:397)\npy4j.Gateway.invoke(Gateway.java:306)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:195)\npy4j.ClientServerConnection.run(ClientServerConnection.java:115)\njava.lang.Thread.run(Thread.java:750)","Submission Time":1710846020293,"Completion Time":1710846023397,"Accumulables":[{"ID":2,"Name":"duration","Value":"1546","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":6,"Name":"stage duration","Value":"1523","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":8,"Name":"peak memory usage","Value":"214757990","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":9,"Name":"peak untracked memory usage","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":12,"Name":"cumulative time","Value":"1523438152","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":13,"Name":"exclusive time","Value":"116047","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":15,"Name":"tasks total","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":37,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":38,"Name":"number of output batches","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":39,"Name":"cumulative time","Value":"1523322105","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":40,"Name":"exclusive time","Value":"1435868","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":42,"Name":"tasks total","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":43,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":44,"Name":"number of output batches","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":45,"Name":"cumulative time","Value":"1521886237","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":46,"Name":"exclusive time","Value":"1521886237","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":48,"Name":"tasks total","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":49,"Name":"cache hits size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":50,"Name":"cache hits size (uncompressed)","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":51,"Name":"cache misses size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":52,"Name":"cache misses size (uncompressed)","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":53,"Name":"cache true misses size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":54,"Name":"cache true misses size (uncompressed)","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":55,"Name":"cache rescheduled misses size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":56,"Name":"cache rescheduled misses size (uncompressed)","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":57,"Name":"cache writes size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":58,"Name":"cache writes size (uncompressed)","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":59,"Name":"cache writes stored compressed size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":60,"Name":"cache writes stored uncompressed size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":61,"Name":"executor time CPU - cache operations","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":62,"Name":"size of row groups before filtering","Value":"63449406","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":63,"Name":"row groups in files to read total","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":64,"Name":"row groups read actual","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":67,"Name":"executor time IO wait","Value":"1306393323","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":68,"Name":"executor time IO wait - footers","Value":"124739377","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":69,"Name":"executor time IO wait - full files + column data","Value":"1181653946","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":70,"Name":"executor time IO wait - Aether metadata","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":71,"Name":"executor time CPU","Value":"215492914","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":72,"Name":"executor time CPU - other","Value":"138016511","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":73,"Name":"executor time CPU - decoding footers","Value":"495807","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":74,"Name":"executor time CPU - decoding columns","Value":"8252458","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":75,"Name":"executor time CPU - decompressing pages","Value":"65506972","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":76,"Name":"executor time CPU - decoding deletion vectors","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":77,"Name":"cloud storage requests to fetch parquet footer","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":78,"Name":"rows scanned","Value":"3985552","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":79,"Name":"data filters - rows skipped","Value":"3985551","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":80,"Name":"data filters - batches skipped","Value":"359","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":83,"Name":"row groups using lazy materialization","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":84,"Name":"executor time CPU - applying data filters","Value":"3221166","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":85,"Name":"columns with filters","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":87,"Name":"executor time CPU - applying dictionary filters","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":92,"Name":"peak memory usage","Value":"80537918","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":93,"Name":"peak reader threads utilized","Value":"4000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":94,"Name":"size of data read with io requests","Value":"63454537","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":99,"Name":"number of non-local (rescheduled) scan tasks","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":120,"Name":"repeated reads estimated low size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":121,"Name":"repeated reads estimated high size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":122,"Name":"cloud storage request size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":123,"Name":"cloud storage response size","Value":"66553186","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":124,"Name":"cloud storage request count","Value":"25","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":125,"Name":"cloud storage request duration","Value":"1715","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":126,"Name":"cloud storage retry count","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":127,"Name":"cloud storage retry duration","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":137,"Name":"time spent reading deletion vectors","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":138,"Name":"executor time IO wait - deletion vectors","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":148,"Name":"unified cache serve bytes for ParquetColumnChunk","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":149,"Name":"unified cache serve bytes for ParquetFooter","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":150,"Name":"unified cache serve bytes for Range","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":151,"Name":"unified cache read bytes for ParquetColumnChunk","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":152,"Name":"unified cache read bytes for ParquetFooter","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":153,"Name":"unified cache read bytes for Range","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":154,"Name":"unified cache write bytes for ParquetColumnChunk","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":155,"Name":"unified cache write bytes for ParquetFooter","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":156,"Name":"unified cache write bytes for Range","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":157,"Name":"unified cache populate time for ParquetColumnChunk","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":158,"Name":"unified cache populate time for ParquetFooter","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":159,"Name":"unified cache populate time for Range","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":163,"Name":"internal.metrics.executorDeserializeTime","Value":301,"Internal":true,"Count Failed Values":true},{"ID":164,"Name":"internal.metrics.executorDeserializeCpuTime","Value":271625000,"Internal":true,"Count Failed Values":true},{"ID":165,"Name":"internal.metrics.executorRunTime","Value":2180,"Internal":true,"Count Failed Values":true},{"ID":166,"Name":"internal.metrics.executorCpuTime","Value":745657400,"Internal":true,"Count Failed Values":true},{"ID":167,"Name":"internal.metrics.resultSize","Value":7386,"Internal":true,"Count Failed Values":true},{"ID":168,"Name":"internal.metrics.jvmGCTime","Value":44,"Internal":true,"Count Failed Values":true},{"ID":169,"Name":"internal.metrics.resultSerializationTime","Value":6,"Internal":true,"Count Failed Values":true},{"ID":196,"Name":"internal.metrics.input.bytesRead","Value":63454537,"Internal":true,"Count Failed Values":true},{"ID":197,"Name":"internal.metrics.input.recordsRead","Value":3985552,"Internal":true,"Count Failed Values":true},{"ID":204,"Name":"internal.metrics.io.requestBytesCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":205,"Name":"internal.metrics.io.responseBytesCount","Value":66553186,"Internal":true,"Count Failed Values":true},{"ID":206,"Name":"internal.metrics.io.requestCount","Value":25,"Internal":true,"Count Failed Values":true},{"ID":207,"Name":"internal.metrics.io.requestMsDuration","Value":1715,"Internal":true,"Count Failed Values":true},{"ID":208,"Name":"internal.metrics.io.retryCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":209,"Name":"internal.metrics.io.retryDelayMsDuration","Value":0,"Internal":true,"Count Failed Values":true},{"ID":212,"Name":"internal.metrics.trackedOffHeapMemorySize","Value":215020134,"Internal":true,"Count Failed Values":true},{"ID":213,"Name":"internal.metrics.photonBufferPoolMemorySize","Value":5332736,"Internal":true,"Count Failed Values":true},{"ID":214,"Name":"internal.metrics.photonizedTaskTimeNs","Value":1523438152,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":0,"Completion Time":1710846023416,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":0,"time":1710846023469,"errorMessage":""}
