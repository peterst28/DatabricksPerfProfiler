{"Event":"DBCEventLoggingListenerMetadata","Spark Version":"3.4.1","Timestamp":1707214818647,"Rollover Number":1,"SparkContext Id":913116444072558510}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":2,"rootExecutionId":2,"description":"select * from hive_metastore.sternp.invoice","details":"org.apache.spark.sql.Dataset.collectResult(Dataset.scala:3618)\ncom.databricks.backend.daemon.driver.OutputAggregator$.withOutputAggregation0(OutputAggregator.scala:267)\ncom.databricks.backend.daemon.driver.OutputAggregator$.withOutputAggregation(OutputAggregator.scala:101)\ncom.databricks.backend.daemon.driver.DriverLocal.executeSql(DriverLocal.scala:358)\ncom.databricks.backend.daemon.driver.JupyterDriverLocal.repl(JupyterDriverLocal.scala:709)\ncom.databricks.backend.daemon.driver.DriverLocal.$anonfun$execute$33(DriverLocal.scala:997)\ncom.databricks.unity.UCSEphemeralState$Handle.runWith(UCSEphemeralState.scala:41)\ncom.databricks.unity.HandleImpl.runWith(UCSHandle.scala:99)\ncom.databricks.backend.daemon.driver.DriverLocal.$anonfun$execute$22(DriverLocal.scala:980)\ncom.databricks.logging.UsageLogging.$anonfun$withAttributionContext$1(UsageLogging.scala:426)\nscala.util.DynamicVariable.withValue(DynamicVariable.scala:62)\ncom.databricks.logging.AttributionContext$.withValue(AttributionContext.scala:196)\ncom.databricks.logging.UsageLogging.withAttributionContext(UsageLogging.scala:424)\ncom.databricks.logging.UsageLogging.withAttributionContext$(UsageLogging.scala:418)\ncom.databricks.backend.daemon.driver.DriverLocal.withAttributionContext(DriverLocal.scala:69)\ncom.databricks.logging.UsageLogging.withAttributionTags(UsageLogging.scala:470)\ncom.databricks.logging.UsageLogging.withAttributionTags$(UsageLogging.scala:455)\ncom.databricks.backend.daemon.driver.DriverLocal.withAttributionTags(DriverLocal.scala:69)\ncom.databricks.backend.daemon.driver.DriverLocal.execute(DriverLocal.scala:935)\ncom.databricks.backend.daemon.driver.DriverWrapper.$anonfun$tryExecutingCommand$1(DriverWrapper.scala:798)","physicalPlanDescription":"== Physical Plan ==\nCollectLimit (4)\n+- ColumnarToRow (3)\n   +- PhotonResultStage (2)\n      +- PhotonScan parquet hive_metastore.sternp.invoice (1)\n\n\n(1) PhotonScan parquet hive_metastore.sternp.invoice\nOutput [9]: [InvoiceNo#159, StockCode#160, Description#161, Quantity#162, InvoiceDate#163, UnitPrice#164, CustomerID#165, Country#166, TotalValue#167]\nLocation: PreparedDeltaFileIndex [dbfs:/home/peter.stern@databricks.com/stock]\nReadSchema: struct<InvoiceNo:string,StockCode:string,Description:string,Quantity:int,InvoiceDate:string,UnitPrice:double,CustomerID:int,Country:string,TotalValue:double>\n\n(2) PhotonResultStage\nInput [9]: [InvoiceNo#159, StockCode#160, Description#161, Quantity#162, InvoiceDate#163, UnitPrice#164, CustomerID#165, Country#166, TotalValue#167]\n\n(3) ColumnarToRow\nInput [9]: [InvoiceNo#159, StockCode#160, Description#161, Quantity#162, InvoiceDate#163, UnitPrice#164, CustomerID#165, Country#166, TotalValue#167]\n\n(4) CollectLimit\nInput [9]: [InvoiceNo#159, StockCode#160, Description#161, Quantity#162, InvoiceDate#163, UnitPrice#164, CustomerID#165, Country#166, TotalValue#167]\nArguments: 1001\n\n\n== Photon Explanation ==\nPhoton does not fully support the query because:\n\t\tUnsupported node: CollectLimit 1001.\n\nReference node:\n\tCollectLimit 1001\n","sparkPlanInfo":{"nodeName":"CollectLimit","simpleString":"CollectLimit 1001","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"PhotonResultStage","simpleString":"PhotonResultStage","children":[{"nodeName":"PhotonScan parquet hive_metastore.sternp.invoice","simpleString":"PhotonScan parquet hive_metastore.sternp.invoice[InvoiceNo#159,StockCode#160,Description#161,Quantity#162,InvoiceDate#163,UnitPrice#164,CustomerID#165,Country#166,TotalValue#167] DataFilters: [], DictionaryFilters: [], Format: parquet, Location: PreparedDeltaFileIndex(1 paths)[dbfs:/home/peter.stern@databricks.com/stock], PartitionFilters: [], ReadSchema: struct<InvoiceNo:string,StockCode:string,Description:string,Quantity:int,InvoiceDate:string,UnitP..., RequiredDataFilters: []","children":[],"metadata":{"Location":"PreparedDeltaFileIndex(1 paths)[dbfs:/home/peter.stern@databricks.com/stock]","ReadSchema":"struct<InvoiceNo:string,StockCode:string,Description:string,Quantity:int,InvoiceDate:string,UnitPrice:double,CustomerID:int,Country:string,TotalValue:double>","Format":"parquet","RequiredDataFilters":"[]","DictionaryFilters":"[]","PartitionFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"driver time - sorting files by size","accumulatorId":317,"metricType":"timing","experimental":false},{"name":"unified cache hits count for ParquetFooter","accumulatorId":344,"metricType":"sum","experimental":false},{"name":"unified cache miss count for ParquetFooter","accumulatorId":347,"metricType":"sum","experimental":false},{"name":"unified cache write bytes for ParquetColumnChunk","accumulatorId":358,"metricType":"size","experimental":false},{"name":"row groups in files to read total","accumulatorId":268,"metricType":"sum","experimental":false},{"name":"cache writes size (uncompressed)","accumulatorId":263,"metricType":"size","experimental":true},{"name":"dictionary filtering - num row groups evaluated","accumulatorId":294,"metricType":"sum","experimental":true},{"name":"data filters - row groups filtered","accumulatorId":286,"metricType":"sum","experimental":false},{"name":"cloud storage response size","accumulatorId":327,"metricType":"size","experimental":false},{"name":"columns with filters","accumulatorId":290,"metricType":"sum","experimental":true},{"name":"files read","accumulatorId":305,"metricType":"sum","experimental":false},{"name":"preferred locations algorithm version","accumulatorId":320,"metricType":"maximum","experimental":false},{"name":"executor time IO wait - file statuses","accumulatorId":300,"metricType":"timing","experimental":false},{"name":"scanned columns","accumulatorId":313,"metricType":"count","experimental":false},{"name":"size of a row of all columns in the relation (estimated)","accumulatorId":314,"metricType":"size","experimental":false},{"name":"unified cache coalesce count for ParquetColumnChunk","accumulatorId":349,"metricType":"sum","experimental":false},{"name":"number of deletion vectors read from memory cache","accumulatorId":333,"metricType":"count","experimental":false},{"name":"number of output batches","accumulatorId":249,"metricType":"sum","experimental":false},{"name":"size of row groups before filtering","accumulatorId":267,"metricType":"size","experimental":false},{"name":"cloud storage retry duration","accumulatorId":331,"metricType":"timing","experimental":false},{"name":"rows scanned","accumulatorId":283,"metricType":"sum","experimental":false},{"name":"unified cache write bytes for Range","accumulatorId":360,"metricType":"size","experimental":false},{"name":"size of deletion vectors read from disk cache","accumulatorId":340,"metricType":"count","experimental":false},{"name":"cache true misses size (uncompressed)","accumulatorId":259,"metricType":"size","experimental":true},{"name":"unified cache hits count for ParquetColumnChunk","accumulatorId":343,"metricType":"sum","experimental":false},{"name":"columns in the relation","accumulatorId":312,"metricType":"count","experimental":false},{"name":"number of deletion vector rows read from disk cache","accumulatorId":337,"metricType":"count","experimental":false},{"name":"data filters - batches skipped","accumulatorId":285,"metricType":"sum","experimental":false},{"name":"repeated reads estimated high size","accumulatorId":325,"metricType":"size","experimental":false},{"name":"unified cache serve bytes for Range","accumulatorId":354,"metricType":"size","experimental":false},{"name":"number of deletion vectors read from disk cache","accumulatorId":334,"metricType":"count","experimental":false},{"name":"files pruned","accumulatorId":318,"metricType":"sum","experimental":false},{"name":"size of a row of scanned columns (estimated)","accumulatorId":315,"metricType":"size","experimental":false},{"name":"max partition size chosen","accumulatorId":322,"metricType":"size","experimental":false},{"name":"files missing","accumulatorId":301,"metricType":"sum","experimental":false},{"name":"number of deletion vectors read","accumulatorId":332,"metricType":"count","experimental":false},{"name":"number of non-local (rescheduled) scan tasks","accumulatorId":304,"metricType":"sum","experimental":true},{"name":"cache rescheduled misses size","accumulatorId":260,"metricType":"size","experimental":true},{"name":"rows skipped via stats filtering","accumulatorId":270,"metricType":"sum","experimental":false},{"name":"cloud storage request size","accumulatorId":326,"metricType":"size","experimental":false},{"name":"driver time - list and filter partitions","accumulatorId":306,"metricType":"timing","experimental":false},{"name":"size of the smallest file read","accumulatorId":308,"metricType":"size","experimental":false},{"name":"cache rescheduled misses size (uncompressed)","accumulatorId":261,"metricType":"size","experimental":true},{"name":"cache misses size","accumulatorId":256,"metricType":"size","experimental":false},{"name":"columns with filters - dictionary encoded","accumulatorId":291,"metricType":"sum","experimental":true},{"name":"number of local scan tasks","accumulatorId":303,"metricType":"sum","experimental":true},{"name":"size of data read with io requests","accumulatorId":299,"metricType":"size","experimental":true},{"name":"row groups read actual","accumulatorId":269,"metricType":"sum","experimental":false},{"name":"size of files read","accumulatorId":307,"metricType":"size","experimental":false},{"name":"cloud storage retry count","accumulatorId":330,"metricType":"count","experimental":false},{"name":"peak reader threads utilized","accumulatorId":298,"metricType":"average","experimental":false},{"name":"size of files pruned","accumulatorId":319,"metricType":"size","experimental":false},{"name":"cloud storage request count","accumulatorId":328,"metricType":"count","experimental":false},{"name":"cloud storage requests to fetch parquet footer","accumulatorId":282,"metricType":"count","experimental":false},{"name":"unified cache coalesce count for Range","accumulatorId":351,"metricType":"sum","experimental":false},{"name":"size of deletion vectors read","accumulatorId":338,"metricType":"count","experimental":false},{"name":"dictionary filtering - num row groups not evaluated - dictionary size","accumulatorId":295,"metricType":"sum","experimental":true},{"name":"number of deletion vector rows read from memory cache","accumulatorId":336,"metricType":"count","experimental":false},{"name":"unified cache miss count for Range","accumulatorId":348,"metricType":"sum","experimental":false},{"name":"tasks total","accumulatorId":253,"metricType":"sum","experimental":false},{"name":"dictionary filtering - num row groups eligible","accumulatorId":293,"metricType":"sum","experimental":true},{"name":"cache writes stored uncompressed size","accumulatorId":265,"metricType":"size","experimental":true},{"name":"cache hits size","accumulatorId":254,"metricType":"size","experimental":false},{"name":"data filters - rows skipped","accumulatorId":284,"metricType":"sum","experimental":false},{"name":"unified cache read bytes for ParquetColumnChunk","accumulatorId":355,"metricType":"size","experimental":false},{"name":"split size average distribution per node","accumulatorId":310,"metricType":"size","experimental":false},{"name":"number of deletion vector rows read","accumulatorId":335,"metricType":"count","experimental":false},{"name":"number of output rows","accumulatorId":248,"metricType":"sum","experimental":false},{"name":"unified cache read bytes for Range","accumulatorId":357,"metricType":"size","experimental":false},{"name":"the proration factor used","accumulatorId":321,"metricType":"sum","experimental":false},{"name":"unified cache hits count for Range","accumulatorId":345,"metricType":"sum","experimental":false},{"name":"unified cache coalesce count for ParquetFooter","accumulatorId":350,"metricType":"sum","experimental":false},{"name":"size of the largest file read","accumulatorId":309,"metricType":"size","experimental":false},{"name":"size of deletion vectors read from memory cache","accumulatorId":339,"metricType":"count","experimental":false},{"name":"cache hits size (uncompressed)","accumulatorId":255,"metricType":"size","experimental":true},{"name":"unified cache serve bytes for ParquetColumnChunk","accumulatorId":352,"metricType":"size","experimental":false},{"name":"max distance between the positions of scanned columns in the relation","accumulatorId":316,"metricType":"count","experimental":false},{"name":"repeated reads estimated low size","accumulatorId":324,"metricType":"size","experimental":false},{"name":"row groups skipped via stats filtering","accumulatorId":271,"metricType":"sum","experimental":false},{"name":"files corrupt","accumulatorId":302,"metricType":"sum","experimental":false},{"name":"cache true misses size","accumulatorId":258,"metricType":"size","experimental":true},{"name":"row groups skipped via lazy materialization","accumulatorId":287,"metricType":"sum","experimental":false},{"name":"cluster's current parallelism ","accumulatorId":323,"metricType":"sum","experimental":false},{"name":"split size relative skew","accumulatorId":311,"metricType":"size","experimental":false},{"name":"unified cache miss count for ParquetColumnChunk","accumulatorId":346,"metricType":"sum","experimental":false},{"name":"cache writes stored compressed size","accumulatorId":264,"metricType":"size","experimental":true},{"name":"cache writes size","accumulatorId":262,"metricType":"size","experimental":true},{"name":"cloud storage request duration","accumulatorId":329,"metricType":"timing","experimental":false},{"name":"num early close","accumulatorId":252,"metricType":"sum","experimental":false},{"name":"unified cache write bytes for ParquetFooter","accumulatorId":359,"metricType":"size","experimental":false},{"name":"cache misses size (uncompressed)","accumulatorId":257,"metricType":"size","experimental":true},{"name":"row groups skipped via dictionary filtering","accumulatorId":296,"metricType":"sum","experimental":false},{"name":"row groups using lazy materialization","accumulatorId":288,"metricType":"sum","experimental":false},{"name":"unified cache serve bytes for ParquetFooter","accumulatorId":353,"metricType":"size","experimental":false},{"name":"unified cache read bytes for ParquetFooter","accumulatorId":356,"metricType":"size","experimental":false},{"name":"peak memory usage","accumulatorId":297,"metricType":"size","experimental":false}],"explainId":null}],"metadata":{},"metrics":[{"name":"peak memory usage","accumulatorId":246,"metricType":"size","experimental":false},{"name":"stage duration","accumulatorId":244,"metricType":"timing","experimental":false},{"name":"peak untracked memory usage","accumulatorId":247,"metricType":"size","experimental":false},{"name":"stage description size bytes","accumulatorId":245,"metricType":"sum","experimental":false},{"name":"number of output rows","accumulatorId":243,"metricType":"sum","experimental":false}],"explainId":null}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":241,"metricType":"sum","experimental":false},{"name":"number of input batches","accumulatorId":242,"metricType":"sum","experimental":false}],"explainId":null}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":239,"metricType":"sum","experimental":false},{"name":"local merged chunks fetched","accumulatorId":232,"metricType":"sum","experimental":false},{"name":"remote merged bytes read","accumulatorId":233,"metricType":"size","experimental":false},{"name":"local merged blocks fetched","accumulatorId":230,"metricType":"sum","experimental":false},{"name":"corrupt merged block chunks","accumulatorId":227,"metricType":"sum","experimental":false},{"name":"remote merged reqs duration","accumulatorId":236,"metricType":"timing","experimental":false},{"name":"remote merged blocks fetched","accumulatorId":229,"metricType":"sum","experimental":false},{"name":"records read","accumulatorId":237,"metricType":"sum","experimental":false},{"name":"local bytes read","accumulatorId":225,"metricType":"size","experimental":false},{"name":"fetch wait time","accumulatorId":226,"metricType":"timing","experimental":false},{"name":"remote bytes read","accumulatorId":223,"metricType":"size","experimental":false},{"name":"merged fetch fallback count","accumulatorId":228,"metricType":"sum","experimental":false},{"name":"local blocks read","accumulatorId":222,"metricType":"sum","experimental":false},{"name":"remote merged chunks fetched","accumulatorId":231,"metricType":"sum","experimental":false},{"name":"remote blocks read","accumulatorId":221,"metricType":"sum","experimental":false},{"name":"local merged bytes read","accumulatorId":234,"metricType":"size","experimental":false},{"name":"remote reqs duration","accumulatorId":235,"metricType":"timing","experimental":false},{"name":"remote bytes read to disk","accumulatorId":224,"metricType":"size","experimental":false},{"name":"shuffle bytes written","accumulatorId":238,"metricType":"size","experimental":false}],"explainId":null},"time":1707214818629,"modifiedConfigs":{"spark.r.sql.derby.temp.dir":"/tmp/Rtmps8RA7r","spark.databricks.optimizer.optimizeLimit.maxLimit":"1001"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":2,"accumUpdates":[[322,0],[316,8],[312,9],[305,1],[317,0],[308,444512],[311,0],[315,124],[314,124],[310,0],[320,1],[321,0],[319,154019],[323,0],[318,1],[313,9],[309,444512],[306,1],[307,444512]]}
{"Event":"SparkListenerJobStart","Job ID":1,"Submission Time":1707214818659,"Stage Infos":[{"Stage ID":1,"Stage Attempt ID":0,"Stage Name":"collectResult at OutputAggregator.scala:267","Number of Tasks":1,"RDD Info":[{"RDD ID":7,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"spark_plan_31\",\"name\":\"ColumnarToRow\"}","Callsite":"collectResult at OutputAggregator.scala:267","Parent IDs":[6],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":4,"Name":"PhotonFileScanRDD","Scope":"{\"id\":\"spark_plan_29\",\"name\":\"PhotonResultStage\"}","Callsite":"RDD at PhotonFileScanRDD.scala:44","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":6,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"spark_plan_29\",\"name\":\"PhotonResultStage\"}","Callsite":"mapPartitionsWithIndexInternal at PhotonExec.scala:404","Parent IDs":[5],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":5,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"spark_plan_29\",\"name\":\"PhotonResultStage\"}","Callsite":"mapPartitionsWithIndexInternal at photonPhysicalOperators.scala:5130","Parent IDs":[4],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collectResult(Dataset.scala:3618)\ncom.databricks.backend.daemon.driver.OutputAggregator$.withOutputAggregation0(OutputAggregator.scala:267)\ncom.databricks.backend.daemon.driver.OutputAggregator$.withOutputAggregation(OutputAggregator.scala:101)\ncom.databricks.backend.daemon.driver.DriverLocal.executeSql(DriverLocal.scala:358)\ncom.databricks.backend.daemon.driver.JupyterDriverLocal.repl(JupyterDriverLocal.scala:709)\ncom.databricks.backend.daemon.driver.DriverLocal.$anonfun$execute$33(DriverLocal.scala:997)\ncom.databricks.unity.UCSEphemeralState$Handle.runWith(UCSEphemeralState.scala:41)\ncom.databricks.unity.HandleImpl.runWith(UCSHandle.scala:99)\ncom.databricks.backend.daemon.driver.DriverLocal.$anonfun$execute$22(DriverLocal.scala:980)\ncom.databricks.logging.UsageLogging.$anonfun$withAttributionContext$1(UsageLogging.scala:426)\nscala.util.DynamicVariable.withValue(DynamicVariable.scala:62)\ncom.databricks.logging.AttributionContext$.withValue(AttributionContext.scala:196)\ncom.databricks.logging.UsageLogging.withAttributionContext(UsageLogging.scala:424)\ncom.databricks.logging.UsageLogging.withAttributionContext$(UsageLogging.scala:418)\ncom.databricks.backend.daemon.driver.DriverLocal.withAttributionContext(DriverLocal.scala:69)\ncom.databricks.logging.UsageLogging.withAttributionTags(UsageLogging.scala:470)\ncom.databricks.logging.UsageLogging.withAttributionTags$(UsageLogging.scala:455)\ncom.databricks.backend.daemon.driver.DriverLocal.withAttributionTags(DriverLocal.scala:69)\ncom.databricks.backend.daemon.driver.DriverLocal.execute(DriverLocal.scala:935)\ncom.databricks.backend.daemon.driver.DriverWrapper.$anonfun$tryExecutingCommand$1(DriverWrapper.scala:798)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[1],"Properties":{"spark.hadoop.fs.idbfs.impl":"com.databricks.io.idbfs.IdbfsFileSystem","spark.databricks.session.share":"false","spark.databricks.repo.gitProvider":"gitHub","spark.hadoop.hive.server2.session.check.interval":"60000","spark.databricks.tahoe.logStore.class":"com.databricks.tahoe.store.DelegatingLogStore","spark.driver.port":"46181","spark.databricks.managedCatalog.clientClassName":"com.databricks.managedcatalog.ManagedCatalogClientImpl","spark.databricks.clusterUsageTags.sparkMasterUrlType":"*********(redacted)","spark.hadoop.fs.cpfs-s3n.impl":"*********(redacted)","spark.databricks.clusterUsageTags.sparkEnvVarContainsSingleQuotes":"false","spark.databricks.clusterUsageTags.clusterCreator":"JobLauncher","spark.databricks.mlflow.autologging.enabled":"true","spark.databricks.clusterUsageTags.enableSqlAclsOnly":"false","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2":"0","spark.sql.sources.default":"delta","spark.databricks.tahoe.logStore.azure.class":"com.databricks.tahoe.store.AzureLogStore","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED --add-opens=java.management/sun.management=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.task.reaper.killTimeout":"60s","spark.hadoop.fs.fcfs-s3.impl":"*********(redacted)","spark.job.interruptOnCancel":"true","spark.hadoop.fs.s3a.max.total.tasks":"1000","spark.databricks.clusterUsageTags.userProvidedRemoteVolumeType":"azure_disk_volume_type: PREMIUM_LRS\n","spark.home":"/databricks/spark","spark.hadoop.fs.s3n.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.databricks.metrics.filesystem_io_metrics":"true","spark.hadoop.fs.stage.impl.disable.cache":"true","spark.hadoop.spark.sql.parquet.output.committer.class":"org.apache.spark.sql.parquet.DirectParquetOutputCommitter","spark.databricks.clusterUsageTags.clusterAvailability":"ON_DEMAND_AZURE","spark.databricks.io.directoryCommit.enableLogicalDelete":"false","spark.app.startTime":"1707214706145","spark.executor.tempDirectory":"/local_disk0/tmp","spark.hadoop.fs.s3a.connection.maximum":"200","spark.databricks.credential.scope.fs.adls.gen2.tokenProviderClassName":"*********(redacted)","spark.databricks.clusterUsageTags.driverInstanceId":"c901da5cebed40f795dfe3c64a063784","spark.databricks.autotune.maintenance.client.classname":"com.databricks.maintenanceautocompute.MACClientImpl","spark.databricks.clusterUsageTags.userProvidedSparkVersion":"*********(redacted)","spark.hadoop.fs.gs.impl.disable.cache":"true","spark.databricks.sparkContextId":"913116444072558510","spark.databricks.workerNodeTypeId":"Standard_DS3_v2","spark.hadoop.databricks.s3.create.deleteUnnecessaryFakeDirectories":"false","spark.databricks.clusterUsageTags.workerEnvironmentId":"workerenv-984752964297111","spark.hadoop.mapreduce.fileoutputcommitter.algorithm.version":"2","spark.databricks.clusterUsageTags.clusterId":"0206-101459-jb5q9bwo","spark.databricks.privateLinkEnabled":"false","spark.databricks.clusterUsageTags.runtimeEngine":"PHOTON","spark.job.description":"select * from hive_metastore.sternp.invoice","spark.databricks.clusterUsageTags.clusterWorkers":"0","spark.app.id":"local-1707214713168","spark.r.sql.derby.temp.dir":"/tmp/Rtmps8RA7r","spark.databricks.clusterUsageTags.enableCredentialPassthrough":"false","spark.extraListeners":"com.databricks.backend.daemon.driver.DBCEventLoggingListener","spark.databricks.passthrough.glue.credentialsProviderFactoryClassName":"*********(redacted)","spark.databricks.cloudfetch.requestDownloadUrlsWithHeaders":"*********(redacted)","spark.databricks.clusterUsageTags.clusterMetastoreAccessType":"RDS_DIRECT","spark.hadoop.parquet.page.verify-checksum.enabled":"true","spark.databricks.repo.relativePath":"DatabricksPerfProfiler/Tests/SituationCreators/JobGaps","spark.databricks.job.runId":"1","spark.connect.extensions.command.classes":"io.delta.connect.DeltaCommandPlugin","spark.databricks.clusterUsageTags.driverContainerPrivateIp":"10.139.64.121","spark.driver.tempDirectory":"/local_disk0/tmp","spark.hadoop.fs.wasbs.impl.disable.cache":"true","spark.repl.class.outputDir":"/local_disk0/tmp/repl/spark-913116444072558510-0ae2d0a5-9048-4bad-a6bd-7da987800569","spark.shuffle.service.enabled":"true","spark.speculation":"false","spark.eventLog.enabled":"false","spark.hadoop.spark.databricks.metrics.filesystem_metrics":"true","spark.hadoop.fs.fcfs-s3n.impl":"*********(redacted)","spark.databricks.clusterUsageTags.enableJdbcAutoStart":"true","spark.sql.hive.metastore.jars":"/databricks/databricks-hive/*","spark.hadoop.fs.cpfs-s3.impl":"*********(redacted)","spark.databricks.clusterUsageTags.attribute_tag_budget":"","spark.databricks.clusterUsageTags.userId":"*********(redacted)","spark.databricks.dataLineage.enabled":"true","spark.hadoop.spark.sql.sources.outputCommitterClass":"com.databricks.backend.daemon.data.client.MapReduceDirectOutputCommitter","spark.databricks.clusterUsageTags.clusterTargetWorkers":"0","spark.hadoop.spark.hadoop.aws.glue.cache.db.size":"1000","spark.hadoop.fs.adl.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.sql.hive.convertCTAS":"true","spark.databricks.passthrough.oauth.refresher.impl":"*********(redacted)","spark.databricks.secret.envVar.keys.toRedact":"*********(redacted)","spark.databricks.clusterUsageTags.containerType":"LXC","spark.databricks.unityCatalog.enabled":"true","spark.ui.prometheus.enabled":"true","spark.worker.cleanup.enabled":"false","spark.sql.hive.convertMetastoreParquet":"true","spark.databricks.unityCatalog.volumes.enabled":"true","spark.hadoop.fs.stage.impl":"com.databricks.backend.daemon.driver.managedcatalog.PersonalStagingFileSystem","spark.hadoop.fs.s3.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.databricks.clusterUsageTags.enableJobsAutostart":"true","spark.hadoop.fs.s3n.impl.disable.cache":"true","spark.hadoop.fs.adl.impl.disable.cache":"true","spark.databricks.cloudfetch.hasRegionSupport":"true","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2S3":"0","spark.hadoop.fs.s3a.fast.upload.active.blocks":"32","spark.hadoop.fs.s3.impl.disable.cache":"true","spark.databricks.sql.configMapperClass":"com.databricks.dbsql.config.SqlConfigMapperBridge","spark.hadoop.databricks.s3commit.client.sslTrustAll":"false","spark.databricks.clusterUsageTags.attribute_tag_dust_maintainer":"","spark.databricks.clusterUsageTags.instanceWorkerEnvNetworkType":"default","spark.databricks.replId":"ReplId-7724e-0b6fd-1cf47-4","spark.databricks.clusterUsageTags.clusterSpotBidMaxPrice":"-1.0","spark.databricks.clusterUsageTags.userProvidedRemoteVolumeCount":"0","spark.r.backendConnectionTimeout":"604800","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2File":"0","spark.databricks.unityCatalog.queryFederation.enabled":"true","spark.driver.maxResultSize":"4g","spark.hadoop.parquet.memory.pool.ratio":"0.5","spark.databricks.clusterUsageTags.driverNodeType":"Standard_DS3_v2","spark.sql.catalogImplementation":"hive","spark.databricks.clusterUsageTags.clusterGeneration":"0","spark.databricks.repo.gitReferenceType":"branch","spark.databricks.wsfs.workspacePrivatePreview":"true","spark.databricks.clusterUsageTags.isSingleUserCluster":"true","user":"peter.stern@databricks.com","spark.databricks.passthrough.adls.tokenProviderClassName":"*********(redacted)","spark.databricks.acl.scim.client":"com.databricks.spark.sql.acl.client.DriverToWebappScimClient","spark.databricks.unityCatalog.credentialManager.apiTokenProviderClassName":"*********(redacted)","spark.databricks.clusterUsageTags.isServicePrincipalCluster":"false","spark.sql.warehouse.dir":"dbfs:/user/hive/warehouse","spark.logConf":"true","spark.hadoop.parquet.block.size.row.check.min":"10","spark.databricks.service.dbutils.repl.backend":"com.databricks.dbconnect.ReplDBUtils","spark.databricks.enablePublicDbfsFuse":"false","spark.hadoop.fs.abfss.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.hadoop.fs.wasb.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.databricks.clusterUsageTags.cloudProvider":"Azure","spark.hadoop.hive.server2.thrift.http.port":"10000","spark.databricks.clusterUsageTags.clusterLogDeliveryEnabled":"false","spark.shuffle.manager":"SORT","spark.hadoop.hive.server2.keystore.password":"*********(redacted)","spark.databricks.acl.provider":"com.databricks.sql.acl.ReflectionBackedAclProvider","spark.databricks.clusterUsageTags.enableElasticDisk":"true","spark.hadoop.parquet.abfs.readahead.optimization.enabled":"true","spark.hadoop.spark.hadoop.aws.glue.cache.table.ttl-mins":"30","spark.databricks.repo.gitReference":"master","orgId":"984752964297111","spark.databricks.eventLog.listenerClassName":"com.databricks.backend.daemon.driver.DBCEventLoggingListener","spark.databricks.clusterUsageTags.clusterStateMessage":"Starting Spark","spark.databricks.clusterUsageTags.sparkVersion":"13.3.x-photon-scala2.12","spark.databricks.clusterUsageTags.hailEnabled":"false","spark.databricks.unityCatalog.legacy.enableCrossScopeCredCache":"true","spark.sql.streaming.checkpointFileManagerClass":"com.databricks.spark.sql.streaming.DatabricksCheckpointFileManager","spark.databricks.clusterUsageTags.numPerGlobalInitScriptsV2":"1","spark.databricks.clusterUsageTags.userProvidedRemoteVolumeSizeGb":"0","spark.hadoop.fs.wasbs.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.hadoop.fs.file.impl":"com.databricks.backend.daemon.driver.WorkspaceLocalFileSystem","spark.hadoop.hive.warehouse.subdir.inherit.perms":"false","spark.databricks.unityCatalog.volumes.fuse.server.enabled":"true","spark.speculation.multiplier":"3","spark.databricks.clusterUsageTags.clusterPythonVersion":"3","spark.databricks.clusterUsageTags.ngrokNpipEnabled":"false","spark.databricks.unityCatalog.credentialScope.enabled":"*********(redacted)","spark.hadoop.hive.server2.thrift.http.cookie.auth.enabled":"false","spark.databricks.job.type":"notebook","spark.databricks.pipelines.analysisId":"DLTAnalysisID-4e7bf-6e0ef-21efb-6","spark.storage.memoryFraction":"0.5","spark.r.numRBackendThreads":"1","spark.databricks.inherited.credentials.keys.spark.databricks.api.token":"*********(redacted)","spark.databricks.unityCatalog.enforce.permissions":"false","spark.hadoop.hive.server2.idle.operation.timeout":"7200000","spark.hadoop.hive.server2.transport.mode":"http","spark.hadoop.spark.hadoop.aws.glue.cache.db.ttl-mins":"30","spark.databricks.notebook.path":"/Repos/peter.stern@databricks.com/DB_Projects/DatabricksPerfProfiler/Tests/SituationCreators/JobGaps","spark.databricks.tahoe.logStore.aws.class":"com.databricks.tahoe.store.MultiClusterLogStore","spark.hadoop.fs.s3a.fast.upload.default":"true","spark.databricks.driver.preferredMavenCentralMirrorUrl":"*********(redacted)","spark.master":"local[*, 4]","spark.databricks.clusterUsageTags.sparkEnvVarContainsNewline":"false","spark.databricks.execution.rootSqlExecutionId":"2","spark.files.fetchFailure.unRegisterOutputOnHost":"true","spark.hadoop.fs.s3a.retry.throttle.interval":"500ms","spark.sql.allowMultipleContexts":"false","spark.databricks.sql.initial.catalog.name":"hive_metastore","spark.databricks.clusterUsageTags.privateLinkEnabled":"false","spark.hadoop.fs.s3a.fast.upload":"true","spark.databricks.repo.gitUrl":"*********(redacted)","spark.databricks.secret.sparkConf.keys.toRedact":"*********(redacted)","NFS_REPL_TEMP_DIR":"/local_disk0/.ephemeral_nfs/repl_tmp_data/ReplId-7724e-0b6fd-1cf47-4","spark.executor.memory":"1821m","spark.hadoop.fs.azure.user.agent.prefix":"*********(redacted)","spark.executor.id":"driver","spark.worker.aioaLazyConfig.iamReadinessCheckClientClass":"com.databricks.backend.daemon.driver.NephosIamRoleCheckClient","spark.hadoop.fs.s3a.retry.interval":"250ms","spark.rpc.message.maxSize":"256","spark.databricks.token":"*********(redacted)","spark.databricks.clusterUsageTags.clusterLogDestination":"","spark.scheduler.listenerbus.eventqueue.capacity":"20000","spark.hadoop.databricks.loki.fileSystemCache.enabled":"true","spark.databricks.env":"databricks-python-repl-ipykernel","spark.hadoop.parquet.page.size.check.estimate":"false","spark.databricks.repo.gitCommit":"7d1a2355e0e01e85c28c622d3657969d1ff3c3f9","spark.hadoop.hive.server2.keystore.path":"/databricks/keys/jetty-ssl-driver-keystore.jks","spark.streaming.driver.writeAheadLog.closeFileAfterWrite":"true","spark.databricks.wsfsPublicPreview":"true","spark.rdd.compress":"true","spark.hadoop.mapred.output.committer.class":"com.databricks.backend.daemon.data.client.DirectOutputCommitter","spark.storage.blockManagerTimeoutIntervalMs":"300000","spark.databricks.driverNodeTypeId":"Standard_DS3_v2","spark.hadoop.fs.azure.skip.metrics":"true","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2Workspace":"0","spark.hadoop.hive.hmshandler.retry.attempts":"10","spark.databricks.eventLog.dir":"eventlogs","spark.hadoop.fs.fcfs-wasb.impl":"*********(redacted)","spark.hadoop.fs.gs.outputstream.upload.chunk.size":"16777216","spark.hadoop.spark.driverproxy.customHeadersToProperties":"*********(redacted)","spark.databricks.automl.serviceEnabled":"true","spark.databricks.clusterUsageTags.sparkEnvVarContainsDoubleQuotes":"false","spark.databricks.credential.scope.fs.gs.auth.access.tokenProviderClassName":"*********(redacted)","spark.akka.frameSize":"256","spark.databricks.passthrough.s3a.tokenProviderClassName":"*********(redacted)","spark.databricks.delta.multiClusterWrites.enabled":"true","spark.hadoop.fs.fcfs-s3n.impl.disable.cache":"true","spark.databricks.clusterUsageTags.attribute_tag_dust_execution_env":"","spark.hadoop.fs.AbstractFileSystem.gs.impl":"shaded.databricks.com.google.cloud.hadoop.fs.gcs.GoogleHadoopFS","spark.databricks.clusterUsageTags.sparkImageLabel":"release__13.3.x-snapshot-photon-scala2.12__databricks-universe__13.3.10__ed27682__10e0210__jenkins__a4ba380__format-3","spark.serializer.objectStreamReset":"100","spark.hadoop.fs.abfs.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.databricks.clusterUsageTags.sparkEnvVarContainsEscape":"false","spark.sparkr.use.daemon":"false","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2Abfss":"0","spark.databricks.clusterUsageTags.clusterFirstOnDemand":"1","spark.files.useFetchCache":"false","spark.sql.hive.metastore.version":"0.13.0","spark.databricks.clusterUsageTags.driverPublicDns":"172.177.245.27","spark.databricks.clusterUsageTags.clusterNumCustomTags":"1","spark.databricks.clusterUsageTags.clusterName":"job-417434245988825-run-1002788766523896-Job_cluster","spark.sql.hive.metastore.sharedPrefixes":"org.mariadb.jdbc,com.mysql.jdbc,org.postgresql,com.microsoft.sqlserver,microsoft.sql.DateTimeOffset,microsoft.sql.Types,com.databricks,com.codahale,com.fasterxml.jackson,shaded.databricks","spark.databricks.clusterUsageTags.clusterNumSshKeys":"0","spark.hadoop.fs.s3a.attempts.maximum":"10","spark.databricks.clusterUsageTags.orgId":"984752964297111","spark.memory.offHeap.enabled":"true","spark.databricks.redactor":"com.databricks.spark.util.DatabricksSparkLogRedactorProxy","spark.hadoop.fs.s3a.block.size":"67108864","spark.hadoop.hive.server2.enable.doAs":"false","spark.databricks.clusterUsageTags.sparkEnvVarContainsDollarSign":"false","spark.databricks.clusterUsageTags.clusterResourceClass":"SingleNode","spark.hadoop.hive.server2.idle.session.timeout":"900000","spark.hadoop.fs.abfs.impl.disable.cache":"true","spark.hadoop.fs.fcfs-abfss.impl.disable.cache":"true","spark.databricks.clusterUsageTags.autoTerminationMinutes":"0","spark.databricks.clusterUsageTags.attribute_tag_dust_suite":"","spark.databricks.passthrough.glue.executorServiceFactoryClassName":"*********(redacted)","spark.databricks.clusterUsageTags.enableDfAcls":"false","spark.hadoop.parquet.block.size.row.check.max":"10","spark.databricks.clusterUsageTags.driverInstancePrivateIp":"10.139.0.117","spark.databricks.clusterSource":"JOB","spark.hadoop.fs.cpfs-abfss.impl":"*********(redacted)","spark.hadoop.fs.s3a.connection.timeout":"50000","spark.hadoop.fs.cpfs-adl.impl.disable.cache":"true","spark.hadoop.fs.fcfs-abfs.impl.disable.cache":"true","spark.databricks.clusterUsageTags.region":"eastus2","spark.ui.port":"40001","spark.sql.parquet.compression.codec":"snappy","spark.databricks.workspaceUrl":"*********(redacted)","spark.hadoop.fs.abfss.impl.disable.cache":"true","spark.hadoop.parquet.filter.columnindex.enabled":"false","spark.sql.execution.id":"2","spark.databricks.passthrough.adls.gen2.tokenProviderClassName":"*********(redacted)","spark.hadoop.hive.hmshandler.retry.interval":"2000","spark.hadoop.fs.cpfs-abfss.impl.disable.cache":"true","spark.hadoop.fs.mlflowdbfs.impl":"com.databricks.mlflowdbfs.MlflowdbfsFileSystem","spark.databricks.acl.client":"com.databricks.spark.sql.acl.client.SparkSqlAclClient","spark.databricks.clusterUsageTags.dataPlaneRegion":"eastus2","spark.databricks.clusterUsageTags.clusterOwnerUserId":"5246238868874017","spark.streaming.driver.writeAheadLog.allowBatching":"true","spark.databricks.repo.gitStatus":"unknown","spark.databricks.clusterUsageTags.enableLocalDiskEncryption":"false","spark.hadoop.fs.azure.authorization.caching.enable":"false","spark.databricks.credential.scope.fs.s3a.tokenProviderClassName":"*********(redacted)","spark.hadoop.hive.server2.use.SSL":"true","spark.hadoop.fs.s3a.threads.max":"136","spark.repl.class.uri":"spark://10.139.64.121:46181/classes","spark.databricks.overrideDefaultCommitProtocol":"org.apache.spark.sql.execution.datasources.SQLHadoopMapReduceCommitProtocol","spark.databricks.unityCatalog.credentialManager.enableDriverExecutorSharedCredCache":"*********(redacted)","spark.databricks.optimizer.optimizeLimit.maxLimit":"1001","spark.driver.host":"10.139.64.121","spark.driver.allowMultipleContexts":"false","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2Gcs":"0","spark.databricks.driverNfs.enabled":"true","spark.hadoop.parquet.page.metadata.validation.enabled":"true","spark.hadoop.fs.fcfs-abfs.impl":"*********(redacted)","spark.hadoop.fs.s3a.multipart.size":"10485760","spark.databricks.delta.logStore.crossCloud.fatal":"true","spark.task.reaper.enabled":"true","spark.hadoop.fs.fcfs-s3a.impl":"*********(redacted)","spark.databricks.clusterUsageTags.clusterNodeType":"Standard_DS3_v2","spark.databricks.cloudProvider":"Azure","spark.databricks.clusterUsageTags.instanceWorkerEnvId":"workerenv-984752964297111","spark.databricks.inherited.credentials.keys.spark.databricks.uc.api.token":"*********(redacted)","spark.databricks.sessionUUID":"358920b6-4e24-4615-ac24-620b5ba9f34e","spark.databricks.cluster.profile":"singleNode","spark.shuffle.memoryFraction":"0.2","spark.databricks.clusterUsageTags.clusterScalingType":"fixed_size","spark.hadoop.fs.fcfs-s3.impl.disable.cache":"true","spark.hadoop.fs.dbfsartifacts.impl":"com.databricks.backend.daemon.data.client.DBFSV1","spark.databricks.credential.redactor":"*********(redacted)","spark.databricks.clusterUsageTags.isDpCpPrivateLinkEnabled":"false","spark.app.name":"Databricks Shell","spark.databricks.clusterUsageTags.clusterSku":"STANDARD_SKU","spark.hadoop.fs.azure.cache.invalidator.type":"com.databricks.encryption.utils.CacheInvalidatorImpl","spark.metrics.conf":"/databricks/spark/conf/metrics.properties","spark.databricks.workload.name":"JobRun","spark.sql.streaming.stopTimeout":"15s","spark.hadoop.fs.s3a.assumed.role.credentials.provider":"*********(redacted)","spark.delta.sharing.profile.provider.class":"*********(redacted)","spark.hadoop.spark.databricks.io.parquet.verifyChecksumOnWrite.enabled":"false","spark.files.overwrite":"true","spark.databricks.tahoe.logStore.gcp.class":"com.databricks.tahoe.store.GCPLogStore","spark.databricks.credential.scope.fs.impl":"*********(redacted)","spark.hadoop.spark.databricks.io.parquet.verifyChecksumOnWrite.throwsException":"false","spark.databricks.passthrough.s3a.threadPoolExecutor.factory.class":"com.databricks.backend.daemon.driver.aws.S3APassthroughThreadPoolExecutorFactory","spark.hadoop.fs.s3a.retry.limit":"6","spark.databricks.preemption.enabled":"true","spark.hadoop.fs.gs.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.hadoop.fs.dbfs.impl":"com.databricks.backend.daemon.data.client.DbfsHadoop3","spark.databricks.clusterUsageTags.enableGlueCatalogCredentialPassthrough":"*********(redacted)","spark.shuffle.reduceLocality.enabled":"false","spark.databricks.repl.enableClassFileCleanup":"true","spark.hadoop.fs.s3a.multipart.threshold":"104857600","spark.hadoop.fs.fcfs-abfss.impl":"*********(redacted)","spark.sparklyr-backend.threads":"1","spark.hadoop.fs.fcfs-wasbs.impl.disable.cache":"true","spark.databricks.clusterUsageTags.ignoreTerminationEventInAlerting":"false","spark.hadoop.databricks.fs.perfMetrics.enable":"true","spark.databricks.eventLog.enabled":"true","spark.databricks.clusterUsageTags.managedResourceGroup":"databricks-rg-field-eng-east-fg2bkkcjf6sio","spark.databricks.isShieldWorkspace":"false","spark.hadoop.spark.hadoop.aws.glue.cache.table.size":"1000","spark.databricks.api.url":"https://eastus2.azuredatabricks.net","spark.databricks.inherited.spark.databricks.api.url":"*********(redacted)","spark.hadoop.fs.fcfs-wasbs.impl":"*********(redacted)","spark.databricks.clusterUsageTags.clusterPinned":"false","spark.speculation.quantile":"0.9","spark.databricks.job.id":"386550799395403","spark.hadoop.fs.cpfs-s3a.impl":"*********(redacted)","spark.hadoop.fs.cpfs-adl.impl":"*********(redacted)","userId":"5246238868874017","spark.hadoop.fs.wasb.impl.disable.cache":"true","spark.sql.legacy.createHiveTableByDefault":"false","spark.scheduler.mode":"FAIR","spark.shuffle.service.port":"4048","spark.databricks.qpl.queryId":"8ca5c737-658d-46e9-9bdc-86914c80343f","spark.databricks.clusterUsageTags.isIMv2Enabled":"false","spark.hadoop.fs.fcfs-wasb.impl.disable.cache":"true","spark.hadoop.databricks.s3.verifyBucketExists.enabled":"false","spark.databricks.driverNfs.pathSuffix":".ephemeral_nfs","spark.sql.sources.commitProtocolClass":"com.databricks.sql.transaction.directory.DirectoryAtomicCommitProtocol","spark.hadoop.fs.s3a.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.databricks.driverNfs.clusterWidePythonLibsEnabled":"true","spark.connect.extensions.relation.classes":"io.delta.connect.DeltaRelationPlugin","spark.scheduler.pool":"8585233866210210932","spark.hadoop.databricks.loki.fileStatusCache.enabled":"true","spark.databricks.unityCatalog.credentialManager.tokenRefreshEnabled":"*********(redacted)","spark.memory.offHeap.size":"5728370688","spark.databricks.clusterUsageTags.azureSubscriptionId":"3f2e4d32-8e8d-46d6-82bc-5bb8d962328b","spark.databricks.clusterUsageTags.clusterNoDriverDaemon":"false","spark.databricks.clusterUsageTags.clusterState":"Pending","spark.sql.parquet.cacheMetadata":"true","spark.databricks.clusterUsageTags.clusterSizeType":"VM_CONTAINER","spark.databricks.clusterUsageTags.effectiveSparkVersion":"13.3.x-photon-scala2.12","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2Dbfs":"0","spark.databricks.clusterUsageTags.driverContainerId":"47f425102e6b4b56a5327e32d51081ac","spark.worker.aioaLazyConfig.dbfsReadinessCheckClientClass":"com.databricks.backend.daemon.driver.NephosDbfsReadinessCheckClient","spark.databricks.clusterUsageTags.clusterUnityCatalogMode":"*********(redacted)","spark.databricks.clusterUsageTags.clusterAllTags":"[{\"key\":\"ResourceClass\",\"value\":\"SingleNode\"},{\"key\":\"Vendor\",\"value\":\"Databricks\"},{\"key\":\"Creator\",\"value\":\"peter.stern@databricks.com\"},{\"key\":\"ClusterName\",\"value\":\"job-417434245988825-run-1002788766523896-Job_cluster\"},{\"key\":\"ClusterId\",\"value\":\"0206-101459-jb5q9bwo\"},{\"key\":\"JobId\",\"value\":\"417434245988825\"},{\"key\":\"RunName\",\"value\":\"New Job 2024-02-06 11:14:20\"},{\"key\":\"owner\",\"value\":\"kyle@databricks.com\"},{\"key\":\"DatabricksEnvironment\",\"value\":\"workerenv-984752964297111\"}]","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2Volumes":"0","spark.hadoop.parquet.page.write-checksum.enabled":"true","spark.plugins":"org.apache.spark.sql.connect.SparkConnectPlugin","spark.cleaner.referenceTracking.blocking":"false","spark.hadoop.databricks.dbfs.client.version":"v2","spark.hadoop.fs.fcfs-s3a.impl.disable.cache":"true","spark.databricks.clusterUsageTags.attribute_tag_service":"","spark.databricks.cloudfetch.requesterClassName":"*********(redacted)","spark.databricks.clusterUsageTags.clusterOwnerOrgId":"984752964297111","spark.jobGroup.id":"8585233866210210932_6880540950113853844_job-386550799395403-run-1-action-909443889508718","spark.databricks.workload.id":"984752964297111-386550799395403-1","spark.databricks.service.dbutils.server.backend":"com.databricks.dbconnect.SparkServerDBUtils","spark.hadoop.fs.s3a.impl.disable.cache":"true","spark.databricks.clusterUsageTags.sparkEnvVarContainsBacktick":"false","spark.databricks.credential.aws.secretKey.redactor":"*********(redacted)"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":1,"Stage Attempt ID":0,"Stage Name":"collectResult at OutputAggregator.scala:267","Number of Tasks":1,"RDD Info":[{"RDD ID":7,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"spark_plan_31\",\"name\":\"ColumnarToRow\"}","Callsite":"collectResult at OutputAggregator.scala:267","Parent IDs":[6],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":4,"Name":"PhotonFileScanRDD","Scope":"{\"id\":\"spark_plan_29\",\"name\":\"PhotonResultStage\"}","Callsite":"RDD at PhotonFileScanRDD.scala:44","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":6,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"spark_plan_29\",\"name\":\"PhotonResultStage\"}","Callsite":"mapPartitionsWithIndexInternal at PhotonExec.scala:404","Parent IDs":[5],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":5,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"spark_plan_29\",\"name\":\"PhotonResultStage\"}","Callsite":"mapPartitionsWithIndexInternal at photonPhysicalOperators.scala:5130","Parent IDs":[4],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collectResult(Dataset.scala:3618)\ncom.databricks.backend.daemon.driver.OutputAggregator$.withOutputAggregation0(OutputAggregator.scala:267)\ncom.databricks.backend.daemon.driver.OutputAggregator$.withOutputAggregation(OutputAggregator.scala:101)\ncom.databricks.backend.daemon.driver.DriverLocal.executeSql(DriverLocal.scala:358)\ncom.databricks.backend.daemon.driver.JupyterDriverLocal.repl(JupyterDriverLocal.scala:709)\ncom.databricks.backend.daemon.driver.DriverLocal.$anonfun$execute$33(DriverLocal.scala:997)\ncom.databricks.unity.UCSEphemeralState$Handle.runWith(UCSEphemeralState.scala:41)\ncom.databricks.unity.HandleImpl.runWith(UCSHandle.scala:99)\ncom.databricks.backend.daemon.driver.DriverLocal.$anonfun$execute$22(DriverLocal.scala:980)\ncom.databricks.logging.UsageLogging.$anonfun$withAttributionContext$1(UsageLogging.scala:426)\nscala.util.DynamicVariable.withValue(DynamicVariable.scala:62)\ncom.databricks.logging.AttributionContext$.withValue(AttributionContext.scala:196)\ncom.databricks.logging.UsageLogging.withAttributionContext(UsageLogging.scala:424)\ncom.databricks.logging.UsageLogging.withAttributionContext$(UsageLogging.scala:418)\ncom.databricks.backend.daemon.driver.DriverLocal.withAttributionContext(DriverLocal.scala:69)\ncom.databricks.logging.UsageLogging.withAttributionTags(UsageLogging.scala:470)\ncom.databricks.logging.UsageLogging.withAttributionTags$(UsageLogging.scala:455)\ncom.databricks.backend.daemon.driver.DriverLocal.withAttributionTags(DriverLocal.scala:69)\ncom.databricks.backend.daemon.driver.DriverLocal.execute(DriverLocal.scala:935)\ncom.databricks.backend.daemon.driver.DriverWrapper.$anonfun$tryExecutingCommand$1(DriverWrapper.scala:798)","Submission Time":1707214818662,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.hadoop.fs.idbfs.impl":"com.databricks.io.idbfs.IdbfsFileSystem","spark.databricks.session.share":"false","spark.databricks.repo.gitProvider":"gitHub","spark.hadoop.hive.server2.session.check.interval":"60000","spark.databricks.tahoe.logStore.class":"com.databricks.tahoe.store.DelegatingLogStore","spark.driver.port":"46181","spark.databricks.managedCatalog.clientClassName":"com.databricks.managedcatalog.ManagedCatalogClientImpl","spark.databricks.clusterUsageTags.sparkMasterUrlType":"*********(redacted)","spark.hadoop.fs.cpfs-s3n.impl":"*********(redacted)","spark.databricks.clusterUsageTags.sparkEnvVarContainsSingleQuotes":"false","spark.databricks.clusterUsageTags.clusterCreator":"JobLauncher","spark.databricks.mlflow.autologging.enabled":"true","spark.databricks.clusterUsageTags.enableSqlAclsOnly":"false","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2":"0","spark.sql.sources.default":"delta","spark.databricks.tahoe.logStore.azure.class":"com.databricks.tahoe.store.AzureLogStore","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED --add-opens=java.management/sun.management=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.task.reaper.killTimeout":"60s","spark.hadoop.fs.fcfs-s3.impl":"*********(redacted)","spark.job.interruptOnCancel":"true","spark.hadoop.fs.s3a.max.total.tasks":"1000","spark.databricks.clusterUsageTags.userProvidedRemoteVolumeType":"azure_disk_volume_type: PREMIUM_LRS\n","spark.home":"/databricks/spark","spark.hadoop.fs.s3n.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.databricks.metrics.filesystem_io_metrics":"true","spark.hadoop.fs.stage.impl.disable.cache":"true","spark.hadoop.spark.sql.parquet.output.committer.class":"org.apache.spark.sql.parquet.DirectParquetOutputCommitter","spark.databricks.clusterUsageTags.clusterAvailability":"ON_DEMAND_AZURE","spark.databricks.io.directoryCommit.enableLogicalDelete":"false","spark.app.startTime":"1707214706145","spark.executor.tempDirectory":"/local_disk0/tmp","spark.hadoop.fs.s3a.connection.maximum":"200","spark.databricks.credential.scope.fs.adls.gen2.tokenProviderClassName":"*********(redacted)","spark.databricks.clusterUsageTags.driverInstanceId":"c901da5cebed40f795dfe3c64a063784","spark.databricks.autotune.maintenance.client.classname":"com.databricks.maintenanceautocompute.MACClientImpl","spark.databricks.clusterUsageTags.userProvidedSparkVersion":"*********(redacted)","spark.hadoop.fs.gs.impl.disable.cache":"true","spark.databricks.sparkContextId":"913116444072558510","spark.databricks.workerNodeTypeId":"Standard_DS3_v2","spark.hadoop.databricks.s3.create.deleteUnnecessaryFakeDirectories":"false","spark.databricks.clusterUsageTags.workerEnvironmentId":"workerenv-984752964297111","spark.hadoop.mapreduce.fileoutputcommitter.algorithm.version":"2","spark.databricks.clusterUsageTags.clusterId":"0206-101459-jb5q9bwo","spark.databricks.privateLinkEnabled":"false","spark.databricks.clusterUsageTags.runtimeEngine":"PHOTON","spark.job.description":"select * from hive_metastore.sternp.invoice","spark.databricks.clusterUsageTags.clusterWorkers":"0","spark.app.id":"local-1707214713168","spark.r.sql.derby.temp.dir":"/tmp/Rtmps8RA7r","spark.databricks.clusterUsageTags.enableCredentialPassthrough":"false","spark.extraListeners":"com.databricks.backend.daemon.driver.DBCEventLoggingListener","spark.databricks.passthrough.glue.credentialsProviderFactoryClassName":"*********(redacted)","spark.databricks.cloudfetch.requestDownloadUrlsWithHeaders":"*********(redacted)","spark.databricks.clusterUsageTags.clusterMetastoreAccessType":"RDS_DIRECT","spark.hadoop.parquet.page.verify-checksum.enabled":"true","spark.databricks.repo.relativePath":"DatabricksPerfProfiler/Tests/SituationCreators/JobGaps","spark.databricks.job.runId":"1","spark.connect.extensions.command.classes":"io.delta.connect.DeltaCommandPlugin","spark.databricks.clusterUsageTags.driverContainerPrivateIp":"10.139.64.121","spark.driver.tempDirectory":"/local_disk0/tmp","spark.hadoop.fs.wasbs.impl.disable.cache":"true","spark.repl.class.outputDir":"/local_disk0/tmp/repl/spark-913116444072558510-0ae2d0a5-9048-4bad-a6bd-7da987800569","spark.shuffle.service.enabled":"true","spark.speculation":"false","spark.eventLog.enabled":"false","spark.hadoop.spark.databricks.metrics.filesystem_metrics":"true","spark.hadoop.fs.fcfs-s3n.impl":"*********(redacted)","spark.databricks.clusterUsageTags.enableJdbcAutoStart":"true","spark.sql.hive.metastore.jars":"/databricks/databricks-hive/*","spark.hadoop.fs.cpfs-s3.impl":"*********(redacted)","spark.databricks.clusterUsageTags.attribute_tag_budget":"","spark.databricks.clusterUsageTags.userId":"*********(redacted)","spark.databricks.dataLineage.enabled":"true","spark.hadoop.spark.sql.sources.outputCommitterClass":"com.databricks.backend.daemon.data.client.MapReduceDirectOutputCommitter","spark.databricks.clusterUsageTags.clusterTargetWorkers":"0","spark.hadoop.spark.hadoop.aws.glue.cache.db.size":"1000","spark.hadoop.fs.adl.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.sql.hive.convertCTAS":"true","spark.databricks.passthrough.oauth.refresher.impl":"*********(redacted)","spark.databricks.secret.envVar.keys.toRedact":"*********(redacted)","spark.databricks.clusterUsageTags.containerType":"LXC","spark.databricks.unityCatalog.enabled":"true","spark.ui.prometheus.enabled":"true","spark.worker.cleanup.enabled":"false","spark.sql.hive.convertMetastoreParquet":"true","spark.databricks.unityCatalog.volumes.enabled":"true","spark.hadoop.fs.stage.impl":"com.databricks.backend.daemon.driver.managedcatalog.PersonalStagingFileSystem","spark.hadoop.fs.s3.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.databricks.clusterUsageTags.enableJobsAutostart":"true","spark.hadoop.fs.s3n.impl.disable.cache":"true","spark.hadoop.fs.adl.impl.disable.cache":"true","spark.databricks.cloudfetch.hasRegionSupport":"true","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2S3":"0","spark.hadoop.fs.s3a.fast.upload.active.blocks":"32","spark.hadoop.fs.s3.impl.disable.cache":"true","spark.databricks.sql.configMapperClass":"com.databricks.dbsql.config.SqlConfigMapperBridge","spark.hadoop.databricks.s3commit.client.sslTrustAll":"false","spark.databricks.clusterUsageTags.attribute_tag_dust_maintainer":"","spark.databricks.clusterUsageTags.instanceWorkerEnvNetworkType":"default","spark.databricks.replId":"ReplId-7724e-0b6fd-1cf47-4","spark.databricks.clusterUsageTags.clusterSpotBidMaxPrice":"-1.0","spark.databricks.clusterUsageTags.userProvidedRemoteVolumeCount":"0","spark.r.backendConnectionTimeout":"604800","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2File":"0","spark.databricks.unityCatalog.queryFederation.enabled":"true","spark.driver.maxResultSize":"4g","spark.hadoop.parquet.memory.pool.ratio":"0.5","spark.databricks.clusterUsageTags.driverNodeType":"Standard_DS3_v2","spark.sql.catalogImplementation":"hive","spark.databricks.clusterUsageTags.clusterGeneration":"0","spark.databricks.repo.gitReferenceType":"branch","spark.databricks.wsfs.workspacePrivatePreview":"true","spark.databricks.clusterUsageTags.isSingleUserCluster":"true","user":"peter.stern@databricks.com","spark.databricks.passthrough.adls.tokenProviderClassName":"*********(redacted)","spark.databricks.acl.scim.client":"com.databricks.spark.sql.acl.client.DriverToWebappScimClient","spark.databricks.unityCatalog.credentialManager.apiTokenProviderClassName":"*********(redacted)","spark.databricks.clusterUsageTags.isServicePrincipalCluster":"false","spark.sql.warehouse.dir":"dbfs:/user/hive/warehouse","spark.logConf":"true","spark.hadoop.parquet.block.size.row.check.min":"10","spark.databricks.service.dbutils.repl.backend":"com.databricks.dbconnect.ReplDBUtils","spark.databricks.enablePublicDbfsFuse":"false","spark.hadoop.fs.abfss.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.hadoop.fs.wasb.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.databricks.clusterUsageTags.cloudProvider":"Azure","spark.hadoop.hive.server2.thrift.http.port":"10000","spark.databricks.clusterUsageTags.clusterLogDeliveryEnabled":"false","spark.shuffle.manager":"SORT","spark.hadoop.hive.server2.keystore.password":"*********(redacted)","spark.databricks.acl.provider":"com.databricks.sql.acl.ReflectionBackedAclProvider","spark.databricks.clusterUsageTags.enableElasticDisk":"true","spark.hadoop.parquet.abfs.readahead.optimization.enabled":"true","spark.hadoop.spark.hadoop.aws.glue.cache.table.ttl-mins":"30","spark.databricks.repo.gitReference":"master","orgId":"984752964297111","spark.databricks.eventLog.listenerClassName":"com.databricks.backend.daemon.driver.DBCEventLoggingListener","spark.databricks.clusterUsageTags.clusterStateMessage":"Starting Spark","spark.databricks.clusterUsageTags.sparkVersion":"13.3.x-photon-scala2.12","spark.databricks.clusterUsageTags.hailEnabled":"false","spark.databricks.unityCatalog.legacy.enableCrossScopeCredCache":"true","spark.sql.streaming.checkpointFileManagerClass":"com.databricks.spark.sql.streaming.DatabricksCheckpointFileManager","spark.databricks.clusterUsageTags.numPerGlobalInitScriptsV2":"1","spark.databricks.clusterUsageTags.userProvidedRemoteVolumeSizeGb":"0","spark.hadoop.fs.wasbs.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.hadoop.fs.file.impl":"com.databricks.backend.daemon.driver.WorkspaceLocalFileSystem","spark.hadoop.hive.warehouse.subdir.inherit.perms":"false","spark.databricks.unityCatalog.volumes.fuse.server.enabled":"true","spark.speculation.multiplier":"3","spark.databricks.clusterUsageTags.clusterPythonVersion":"3","spark.databricks.clusterUsageTags.ngrokNpipEnabled":"false","spark.databricks.unityCatalog.credentialScope.enabled":"*********(redacted)","spark.hadoop.hive.server2.thrift.http.cookie.auth.enabled":"false","spark.databricks.job.type":"notebook","spark.databricks.pipelines.analysisId":"DLTAnalysisID-4e7bf-6e0ef-21efb-6","spark.storage.memoryFraction":"0.5","spark.r.numRBackendThreads":"1","spark.databricks.inherited.credentials.keys.spark.databricks.api.token":"*********(redacted)","spark.databricks.unityCatalog.enforce.permissions":"false","spark.hadoop.hive.server2.idle.operation.timeout":"7200000","spark.hadoop.hive.server2.transport.mode":"http","spark.hadoop.spark.hadoop.aws.glue.cache.db.ttl-mins":"30","spark.databricks.notebook.path":"/Repos/peter.stern@databricks.com/DB_Projects/DatabricksPerfProfiler/Tests/SituationCreators/JobGaps","spark.databricks.tahoe.logStore.aws.class":"com.databricks.tahoe.store.MultiClusterLogStore","spark.hadoop.fs.s3a.fast.upload.default":"true","spark.databricks.driver.preferredMavenCentralMirrorUrl":"*********(redacted)","spark.master":"local[*, 4]","spark.databricks.clusterUsageTags.sparkEnvVarContainsNewline":"false","spark.databricks.execution.rootSqlExecutionId":"2","spark.files.fetchFailure.unRegisterOutputOnHost":"true","spark.hadoop.fs.s3a.retry.throttle.interval":"500ms","spark.sql.allowMultipleContexts":"false","spark.databricks.sql.initial.catalog.name":"hive_metastore","spark.databricks.clusterUsageTags.privateLinkEnabled":"false","spark.hadoop.fs.s3a.fast.upload":"true","spark.databricks.repo.gitUrl":"*********(redacted)","spark.databricks.secret.sparkConf.keys.toRedact":"*********(redacted)","NFS_REPL_TEMP_DIR":"/local_disk0/.ephemeral_nfs/repl_tmp_data/ReplId-7724e-0b6fd-1cf47-4","spark.executor.memory":"1821m","spark.hadoop.fs.azure.user.agent.prefix":"*********(redacted)","spark.executor.id":"driver","spark.worker.aioaLazyConfig.iamReadinessCheckClientClass":"com.databricks.backend.daemon.driver.NephosIamRoleCheckClient","spark.hadoop.fs.s3a.retry.interval":"250ms","spark.rpc.message.maxSize":"256","spark.databricks.token":"*********(redacted)","spark.databricks.clusterUsageTags.clusterLogDestination":"","spark.scheduler.listenerbus.eventqueue.capacity":"20000","spark.hadoop.databricks.loki.fileSystemCache.enabled":"true","spark.databricks.env":"databricks-python-repl-ipykernel","spark.hadoop.parquet.page.size.check.estimate":"false","spark.databricks.repo.gitCommit":"7d1a2355e0e01e85c28c622d3657969d1ff3c3f9","spark.hadoop.hive.server2.keystore.path":"/databricks/keys/jetty-ssl-driver-keystore.jks","spark.streaming.driver.writeAheadLog.closeFileAfterWrite":"true","spark.databricks.wsfsPublicPreview":"true","spark.rdd.compress":"true","spark.hadoop.mapred.output.committer.class":"com.databricks.backend.daemon.data.client.DirectOutputCommitter","spark.storage.blockManagerTimeoutIntervalMs":"300000","spark.databricks.driverNodeTypeId":"Standard_DS3_v2","spark.hadoop.fs.azure.skip.metrics":"true","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2Workspace":"0","spark.hadoop.hive.hmshandler.retry.attempts":"10","spark.databricks.eventLog.dir":"eventlogs","spark.hadoop.fs.fcfs-wasb.impl":"*********(redacted)","spark.hadoop.fs.gs.outputstream.upload.chunk.size":"16777216","spark.hadoop.spark.driverproxy.customHeadersToProperties":"*********(redacted)","spark.databricks.automl.serviceEnabled":"true","spark.databricks.clusterUsageTags.sparkEnvVarContainsDoubleQuotes":"false","spark.databricks.credential.scope.fs.gs.auth.access.tokenProviderClassName":"*********(redacted)","spark.akka.frameSize":"256","spark.databricks.passthrough.s3a.tokenProviderClassName":"*********(redacted)","spark.databricks.delta.multiClusterWrites.enabled":"true","spark.hadoop.fs.fcfs-s3n.impl.disable.cache":"true","spark.databricks.clusterUsageTags.attribute_tag_dust_execution_env":"","spark.hadoop.fs.AbstractFileSystem.gs.impl":"shaded.databricks.com.google.cloud.hadoop.fs.gcs.GoogleHadoopFS","spark.databricks.clusterUsageTags.sparkImageLabel":"release__13.3.x-snapshot-photon-scala2.12__databricks-universe__13.3.10__ed27682__10e0210__jenkins__a4ba380__format-3","spark.serializer.objectStreamReset":"100","spark.hadoop.fs.abfs.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.databricks.clusterUsageTags.sparkEnvVarContainsEscape":"false","spark.sparkr.use.daemon":"false","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2Abfss":"0","spark.databricks.clusterUsageTags.clusterFirstOnDemand":"1","spark.files.useFetchCache":"false","spark.sql.hive.metastore.version":"0.13.0","spark.databricks.clusterUsageTags.driverPublicDns":"172.177.245.27","spark.databricks.clusterUsageTags.clusterNumCustomTags":"1","spark.databricks.clusterUsageTags.clusterName":"job-417434245988825-run-1002788766523896-Job_cluster","spark.sql.hive.metastore.sharedPrefixes":"org.mariadb.jdbc,com.mysql.jdbc,org.postgresql,com.microsoft.sqlserver,microsoft.sql.DateTimeOffset,microsoft.sql.Types,com.databricks,com.codahale,com.fasterxml.jackson,shaded.databricks","spark.databricks.clusterUsageTags.clusterNumSshKeys":"0","spark.hadoop.fs.s3a.attempts.maximum":"10","spark.databricks.clusterUsageTags.orgId":"984752964297111","spark.memory.offHeap.enabled":"true","spark.databricks.redactor":"com.databricks.spark.util.DatabricksSparkLogRedactorProxy","spark.hadoop.fs.s3a.block.size":"67108864","spark.hadoop.hive.server2.enable.doAs":"false","spark.databricks.clusterUsageTags.sparkEnvVarContainsDollarSign":"false","spark.databricks.clusterUsageTags.clusterResourceClass":"SingleNode","spark.hadoop.hive.server2.idle.session.timeout":"900000","spark.hadoop.fs.abfs.impl.disable.cache":"true","spark.hadoop.fs.fcfs-abfss.impl.disable.cache":"true","spark.databricks.clusterUsageTags.autoTerminationMinutes":"0","spark.databricks.clusterUsageTags.attribute_tag_dust_suite":"","spark.databricks.passthrough.glue.executorServiceFactoryClassName":"*********(redacted)","spark.databricks.clusterUsageTags.enableDfAcls":"false","spark.hadoop.parquet.block.size.row.check.max":"10","spark.databricks.clusterUsageTags.driverInstancePrivateIp":"10.139.0.117","spark.databricks.clusterSource":"JOB","spark.hadoop.fs.cpfs-abfss.impl":"*********(redacted)","spark.hadoop.fs.s3a.connection.timeout":"50000","spark.hadoop.fs.cpfs-adl.impl.disable.cache":"true","spark.hadoop.fs.fcfs-abfs.impl.disable.cache":"true","spark.databricks.clusterUsageTags.region":"eastus2","spark.ui.port":"40001","spark.sql.parquet.compression.codec":"snappy","spark.databricks.workspaceUrl":"*********(redacted)","spark.hadoop.fs.abfss.impl.disable.cache":"true","spark.hadoop.parquet.filter.columnindex.enabled":"false","spark.sql.execution.id":"2","spark.databricks.passthrough.adls.gen2.tokenProviderClassName":"*********(redacted)","spark.hadoop.hive.hmshandler.retry.interval":"2000","spark.hadoop.fs.cpfs-abfss.impl.disable.cache":"true","spark.hadoop.fs.mlflowdbfs.impl":"com.databricks.mlflowdbfs.MlflowdbfsFileSystem","spark.databricks.acl.client":"com.databricks.spark.sql.acl.client.SparkSqlAclClient","spark.databricks.clusterUsageTags.dataPlaneRegion":"eastus2","spark.databricks.clusterUsageTags.clusterOwnerUserId":"5246238868874017","spark.streaming.driver.writeAheadLog.allowBatching":"true","spark.databricks.repo.gitStatus":"unknown","spark.databricks.clusterUsageTags.enableLocalDiskEncryption":"false","spark.hadoop.fs.azure.authorization.caching.enable":"false","spark.databricks.credential.scope.fs.s3a.tokenProviderClassName":"*********(redacted)","spark.hadoop.hive.server2.use.SSL":"true","spark.hadoop.fs.s3a.threads.max":"136","spark.repl.class.uri":"spark://10.139.64.121:46181/classes","spark.databricks.overrideDefaultCommitProtocol":"org.apache.spark.sql.execution.datasources.SQLHadoopMapReduceCommitProtocol","spark.databricks.unityCatalog.credentialManager.enableDriverExecutorSharedCredCache":"*********(redacted)","spark.databricks.optimizer.optimizeLimit.maxLimit":"1001","spark.driver.host":"10.139.64.121","spark.driver.allowMultipleContexts":"false","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2Gcs":"0","spark.databricks.driverNfs.enabled":"true","spark.hadoop.parquet.page.metadata.validation.enabled":"true","spark.hadoop.fs.fcfs-abfs.impl":"*********(redacted)","spark.hadoop.fs.s3a.multipart.size":"10485760","spark.databricks.delta.logStore.crossCloud.fatal":"true","spark.task.reaper.enabled":"true","spark.hadoop.fs.fcfs-s3a.impl":"*********(redacted)","spark.databricks.clusterUsageTags.clusterNodeType":"Standard_DS3_v2","spark.databricks.cloudProvider":"Azure","spark.databricks.clusterUsageTags.instanceWorkerEnvId":"workerenv-984752964297111","spark.databricks.inherited.credentials.keys.spark.databricks.uc.api.token":"*********(redacted)","spark.databricks.sessionUUID":"358920b6-4e24-4615-ac24-620b5ba9f34e","spark.databricks.cluster.profile":"singleNode","spark.shuffle.memoryFraction":"0.2","spark.databricks.clusterUsageTags.clusterScalingType":"fixed_size","spark.hadoop.fs.fcfs-s3.impl.disable.cache":"true","spark.hadoop.fs.dbfsartifacts.impl":"com.databricks.backend.daemon.data.client.DBFSV1","spark.databricks.credential.redactor":"*********(redacted)","spark.databricks.clusterUsageTags.isDpCpPrivateLinkEnabled":"false","spark.app.name":"Databricks Shell","spark.databricks.clusterUsageTags.clusterSku":"STANDARD_SKU","spark.hadoop.fs.azure.cache.invalidator.type":"com.databricks.encryption.utils.CacheInvalidatorImpl","spark.metrics.conf":"/databricks/spark/conf/metrics.properties","spark.databricks.workload.name":"JobRun","spark.sql.streaming.stopTimeout":"15s","spark.hadoop.fs.s3a.assumed.role.credentials.provider":"*********(redacted)","spark.delta.sharing.profile.provider.class":"*********(redacted)","spark.hadoop.spark.databricks.io.parquet.verifyChecksumOnWrite.enabled":"false","spark.files.overwrite":"true","spark.databricks.tahoe.logStore.gcp.class":"com.databricks.tahoe.store.GCPLogStore","spark.databricks.credential.scope.fs.impl":"*********(redacted)","spark.hadoop.spark.databricks.io.parquet.verifyChecksumOnWrite.throwsException":"false","spark.databricks.passthrough.s3a.threadPoolExecutor.factory.class":"com.databricks.backend.daemon.driver.aws.S3APassthroughThreadPoolExecutorFactory","spark.hadoop.fs.s3a.retry.limit":"6","spark.databricks.preemption.enabled":"true","spark.hadoop.fs.gs.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.hadoop.fs.dbfs.impl":"com.databricks.backend.daemon.data.client.DbfsHadoop3","spark.databricks.clusterUsageTags.enableGlueCatalogCredentialPassthrough":"*********(redacted)","spark.shuffle.reduceLocality.enabled":"false","spark.databricks.repl.enableClassFileCleanup":"true","spark.hadoop.fs.s3a.multipart.threshold":"104857600","spark.hadoop.fs.fcfs-abfss.impl":"*********(redacted)","spark.sparklyr-backend.threads":"1","spark.hadoop.fs.fcfs-wasbs.impl.disable.cache":"true","spark.databricks.clusterUsageTags.ignoreTerminationEventInAlerting":"false","spark.hadoop.databricks.fs.perfMetrics.enable":"true","spark.databricks.eventLog.enabled":"true","spark.databricks.clusterUsageTags.managedResourceGroup":"databricks-rg-field-eng-east-fg2bkkcjf6sio","spark.databricks.isShieldWorkspace":"false","spark.hadoop.spark.hadoop.aws.glue.cache.table.size":"1000","spark.databricks.api.url":"https://eastus2.azuredatabricks.net","spark.databricks.inherited.spark.databricks.api.url":"*********(redacted)","spark.hadoop.fs.fcfs-wasbs.impl":"*********(redacted)","spark.databricks.clusterUsageTags.clusterPinned":"false","spark.speculation.quantile":"0.9","spark.databricks.job.id":"386550799395403","spark.hadoop.fs.cpfs-s3a.impl":"*********(redacted)","spark.hadoop.fs.cpfs-adl.impl":"*********(redacted)","userId":"5246238868874017","spark.hadoop.fs.wasb.impl.disable.cache":"true","spark.sql.legacy.createHiveTableByDefault":"false","spark.scheduler.mode":"FAIR","spark.shuffle.service.port":"4048","spark.databricks.qpl.queryId":"8ca5c737-658d-46e9-9bdc-86914c80343f","spark.databricks.clusterUsageTags.isIMv2Enabled":"false","spark.hadoop.fs.fcfs-wasb.impl.disable.cache":"true","spark.hadoop.databricks.s3.verifyBucketExists.enabled":"false","spark.databricks.driverNfs.pathSuffix":".ephemeral_nfs","spark.sql.sources.commitProtocolClass":"com.databricks.sql.transaction.directory.DirectoryAtomicCommitProtocol","spark.hadoop.fs.s3a.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.databricks.driverNfs.clusterWidePythonLibsEnabled":"true","spark.connect.extensions.relation.classes":"io.delta.connect.DeltaRelationPlugin","spark.scheduler.pool":"8585233866210210932","spark.hadoop.databricks.loki.fileStatusCache.enabled":"true","spark.databricks.unityCatalog.credentialManager.tokenRefreshEnabled":"*********(redacted)","spark.memory.offHeap.size":"5728370688","spark.databricks.clusterUsageTags.azureSubscriptionId":"3f2e4d32-8e8d-46d6-82bc-5bb8d962328b","spark.databricks.clusterUsageTags.clusterNoDriverDaemon":"false","spark.databricks.clusterUsageTags.clusterState":"Pending","spark.sql.parquet.cacheMetadata":"true","spark.databricks.clusterUsageTags.clusterSizeType":"VM_CONTAINER","spark.databricks.clusterUsageTags.effectiveSparkVersion":"13.3.x-photon-scala2.12","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2Dbfs":"0","spark.databricks.clusterUsageTags.driverContainerId":"47f425102e6b4b56a5327e32d51081ac","spark.worker.aioaLazyConfig.dbfsReadinessCheckClientClass":"com.databricks.backend.daemon.driver.NephosDbfsReadinessCheckClient","spark.databricks.clusterUsageTags.clusterUnityCatalogMode":"*********(redacted)","spark.databricks.clusterUsageTags.clusterAllTags":"[{\"key\":\"ResourceClass\",\"value\":\"SingleNode\"},{\"key\":\"Vendor\",\"value\":\"Databricks\"},{\"key\":\"Creator\",\"value\":\"peter.stern@databricks.com\"},{\"key\":\"ClusterName\",\"value\":\"job-417434245988825-run-1002788766523896-Job_cluster\"},{\"key\":\"ClusterId\",\"value\":\"0206-101459-jb5q9bwo\"},{\"key\":\"JobId\",\"value\":\"417434245988825\"},{\"key\":\"RunName\",\"value\":\"New Job 2024-02-06 11:14:20\"},{\"key\":\"owner\",\"value\":\"kyle@databricks.com\"},{\"key\":\"DatabricksEnvironment\",\"value\":\"workerenv-984752964297111\"}]","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2Volumes":"0","spark.hadoop.parquet.page.write-checksum.enabled":"true","spark.plugins":"org.apache.spark.sql.connect.SparkConnectPlugin","spark.cleaner.referenceTracking.blocking":"false","spark.hadoop.databricks.dbfs.client.version":"v2","spark.hadoop.fs.fcfs-s3a.impl.disable.cache":"true","spark.databricks.clusterUsageTags.attribute_tag_service":"","spark.databricks.cloudfetch.requesterClassName":"*********(redacted)","spark.databricks.clusterUsageTags.clusterOwnerOrgId":"984752964297111","spark.jobGroup.id":"8585233866210210932_6880540950113853844_job-386550799395403-run-1-action-909443889508718","spark.databricks.workload.id":"984752964297111-386550799395403-1","spark.databricks.service.dbutils.server.backend":"com.databricks.dbconnect.SparkServerDBUtils","spark.hadoop.fs.s3a.impl.disable.cache":"true","spark.databricks.clusterUsageTags.sparkEnvVarContainsBacktick":"false","spark.databricks.credential.aws.secretKey.redactor":"*********(redacted)"}}
{"Event":"SparkListenerTaskStart","Stage ID":1,"Stage Attempt ID":0,"Task Info":{"Task ID":1,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707214818760,"Executor ID":"driver","Host":"10.139.64.121","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":1,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":1,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1707214818760,"Executor ID":"driver","Host":"10.139.64.121","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1707214818913,"Failed":false,"Killed":false,"Accumulables":[{"ID":241,"Name":"number of output rows","Update":"4096","Value":"4096","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":242,"Name":"number of input batches","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":244,"Name":"stage duration","Update":"88","Value":"88","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"peak memory usage","Update":"151731084","Value":"151731084","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":247,"Name":"peak untracked memory usage","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":248,"Name":"number of output rows","Update":"4096","Value":"4096","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":249,"Name":"number of output batches","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":250,"Name":"cumulative time","Update":"88551379","Value":"88551379","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":251,"Name":"exclusive time","Update":"88551379","Value":"88551379","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":252,"Name":"num early close","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":253,"Name":"tasks total","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":254,"Name":"cache hits size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":255,"Name":"cache hits size (uncompressed)","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":256,"Name":"cache misses size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":257,"Name":"cache misses size (uncompressed)","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":258,"Name":"cache true misses size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":259,"Name":"cache true misses size (uncompressed)","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":260,"Name":"cache rescheduled misses size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":261,"Name":"cache rescheduled misses size (uncompressed)","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":262,"Name":"cache writes size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":263,"Name":"cache writes size (uncompressed)","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":264,"Name":"cache writes stored compressed size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"cache writes stored uncompressed size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"executor time CPU - cache operations","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"size of row groups before filtering","Update":"442588","Value":"442588","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"row groups in files to read total","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"row groups read actual","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":272,"Name":"executor time IO wait","Update":"83846949","Value":"83846949","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":273,"Name":"executor time IO wait - footers","Update":"83364646","Value":"83364646","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"executor time IO wait - full files + column data","Update":"482303","Value":"482303","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"executor time IO wait - Aether metadata","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"executor time CPU","Update":"4704430","Value":"4704430","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"executor time CPU - other","Update":"1994312","Value":"1994312","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":278,"Name":"executor time CPU - decoding footers","Update":"177401","Value":"177401","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":279,"Name":"executor time CPU - decoding columns","Update":"907406","Value":"907406","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":280,"Name":"executor time CPU - decompressing pages","Update":"1625311","Value":"1625311","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":281,"Name":"executor time CPU - decoding deletion vectors","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":282,"Name":"cloud storage requests to fetch parquet footer","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":283,"Name":"rows scanned","Update":"4096","Value":"4096","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":289,"Name":"executor time CPU - applying data filters","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":292,"Name":"executor time CPU - applying dictionary filters","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":297,"Name":"peak memory usage","Update":"17512668","Value":"17512668","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":298,"Name":"peak reader threads utilized","Update":"1000","Value":"1000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":299,"Name":"size of data read with io requests","Update":"444508","Value":"444508","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":304,"Name":"number of non-local (rescheduled) scan tasks","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":324,"Name":"repeated reads estimated low size","Update":"444508","Value":"444508","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":325,"Name":"repeated reads estimated high size","Update":"444508","Value":"444508","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":326,"Name":"cloud storage request size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":327,"Name":"cloud storage response size","Update":"444512","Value":"444512","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":328,"Name":"cloud storage request count","Update":"3","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":329,"Name":"cloud storage request duration","Update":"76","Value":"76","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":330,"Name":"cloud storage retry count","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":331,"Name":"cloud storage retry duration","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":341,"Name":"time spent reading deletion vectors","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":342,"Name":"executor time IO wait - deletion vectors","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":352,"Name":"unified cache serve bytes for ParquetColumnChunk","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":353,"Name":"unified cache serve bytes for ParquetFooter","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":354,"Name":"unified cache serve bytes for Range","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":355,"Name":"unified cache read bytes for ParquetColumnChunk","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":356,"Name":"unified cache read bytes for ParquetFooter","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":357,"Name":"unified cache read bytes for Range","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":358,"Name":"unified cache write bytes for ParquetColumnChunk","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":359,"Name":"unified cache write bytes for ParquetFooter","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":360,"Name":"unified cache write bytes for Range","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":361,"Name":"unified cache populate time for ParquetColumnChunk","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":362,"Name":"unified cache populate time for ParquetFooter","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":363,"Name":"unified cache populate time for Range","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":366,"Name":"internal.metrics.executorDeserializeTime","Update":21,"Value":21,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.executorDeserializeCpuTime","Update":19304600,"Value":19304600,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.executorRunTime","Update":121,"Value":121,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.executorCpuTime","Update":35409100,"Value":35409100,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.resultSize","Update":56655,"Value":56655,"Internal":true,"Count Failed Values":true},{"ID":399,"Name":"internal.metrics.input.bytesRead","Update":444508,"Value":444508,"Internal":true,"Count Failed Values":true},{"ID":400,"Name":"internal.metrics.input.recordsRead","Update":4096,"Value":4096,"Internal":true,"Count Failed Values":true},{"ID":407,"Name":"internal.metrics.io.requestBytesCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":408,"Name":"internal.metrics.io.responseBytesCount","Update":444512,"Value":444512,"Internal":true,"Count Failed Values":true},{"ID":409,"Name":"internal.metrics.io.requestCount","Update":3,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":410,"Name":"internal.metrics.io.requestMsDuration","Update":76,"Value":76,"Internal":true,"Count Failed Values":true},{"ID":411,"Name":"internal.metrics.io.retryCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":412,"Name":"internal.metrics.io.retryDelayMsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":415,"Name":"internal.metrics.trackedOffHeapMemorySize","Update":152175596,"Value":152175596,"Internal":true,"Count Failed Values":true},{"ID":416,"Name":"internal.metrics.photonBufferPoolMemorySize","Update":2576864,"Value":2576864,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"NettyDirectMemory":0,"JvmDirectMemory":0,"SparkDirectMemoryOverLimit":0,"TotalOffHeapMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":21,"Executor Deserialize CPU Time":19304600,"Executor Run Time":121,"Executor CPU Time":35409100,"Peak Execution Memory":0,"Result Size":56655,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":444508,"Records Read":4096},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":1,"Stage Attempt ID":0,"Stage Name":"collectResult at OutputAggregator.scala:267","Number of Tasks":1,"RDD Info":[{"RDD ID":7,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"spark_plan_31\",\"name\":\"ColumnarToRow\"}","Callsite":"collectResult at OutputAggregator.scala:267","Parent IDs":[6],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":4,"Name":"PhotonFileScanRDD","Scope":"{\"id\":\"spark_plan_29\",\"name\":\"PhotonResultStage\"}","Callsite":"RDD at PhotonFileScanRDD.scala:44","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":6,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"spark_plan_29\",\"name\":\"PhotonResultStage\"}","Callsite":"mapPartitionsWithIndexInternal at PhotonExec.scala:404","Parent IDs":[5],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":5,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"spark_plan_29\",\"name\":\"PhotonResultStage\"}","Callsite":"mapPartitionsWithIndexInternal at photonPhysicalOperators.scala:5130","Parent IDs":[4],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.collectResult(Dataset.scala:3618)\ncom.databricks.backend.daemon.driver.OutputAggregator$.withOutputAggregation0(OutputAggregator.scala:267)\ncom.databricks.backend.daemon.driver.OutputAggregator$.withOutputAggregation(OutputAggregator.scala:101)\ncom.databricks.backend.daemon.driver.DriverLocal.executeSql(DriverLocal.scala:358)\ncom.databricks.backend.daemon.driver.JupyterDriverLocal.repl(JupyterDriverLocal.scala:709)\ncom.databricks.backend.daemon.driver.DriverLocal.$anonfun$execute$33(DriverLocal.scala:997)\ncom.databricks.unity.UCSEphemeralState$Handle.runWith(UCSEphemeralState.scala:41)\ncom.databricks.unity.HandleImpl.runWith(UCSHandle.scala:99)\ncom.databricks.backend.daemon.driver.DriverLocal.$anonfun$execute$22(DriverLocal.scala:980)\ncom.databricks.logging.UsageLogging.$anonfun$withAttributionContext$1(UsageLogging.scala:426)\nscala.util.DynamicVariable.withValue(DynamicVariable.scala:62)\ncom.databricks.logging.AttributionContext$.withValue(AttributionContext.scala:196)\ncom.databricks.logging.UsageLogging.withAttributionContext(UsageLogging.scala:424)\ncom.databricks.logging.UsageLogging.withAttributionContext$(UsageLogging.scala:418)\ncom.databricks.backend.daemon.driver.DriverLocal.withAttributionContext(DriverLocal.scala:69)\ncom.databricks.logging.UsageLogging.withAttributionTags(UsageLogging.scala:470)\ncom.databricks.logging.UsageLogging.withAttributionTags$(UsageLogging.scala:455)\ncom.databricks.backend.daemon.driver.DriverLocal.withAttributionTags(DriverLocal.scala:69)\ncom.databricks.backend.daemon.driver.DriverLocal.execute(DriverLocal.scala:935)\ncom.databricks.backend.daemon.driver.DriverWrapper.$anonfun$tryExecutingCommand$1(DriverWrapper.scala:798)","Submission Time":1707214818662,"Completion Time":1707214818915,"Accumulables":[{"ID":241,"Name":"number of output rows","Value":"4096","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":242,"Name":"number of input batches","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":244,"Name":"stage duration","Value":"88","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"peak memory usage","Value":"151731084","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":247,"Name":"peak untracked memory usage","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":248,"Name":"number of output rows","Value":"4096","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":249,"Name":"number of output batches","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":250,"Name":"cumulative time","Value":"88551379","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":251,"Name":"exclusive time","Value":"88551379","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":252,"Name":"num early close","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":253,"Name":"tasks total","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":254,"Name":"cache hits size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":255,"Name":"cache hits size (uncompressed)","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":256,"Name":"cache misses size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":257,"Name":"cache misses size (uncompressed)","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":258,"Name":"cache true misses size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":259,"Name":"cache true misses size (uncompressed)","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":260,"Name":"cache rescheduled misses size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":261,"Name":"cache rescheduled misses size (uncompressed)","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":262,"Name":"cache writes size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":263,"Name":"cache writes size (uncompressed)","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":264,"Name":"cache writes stored compressed size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"cache writes stored uncompressed size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"executor time CPU - cache operations","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"size of row groups before filtering","Value":"442588","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"row groups in files to read total","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"row groups read actual","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":272,"Name":"executor time IO wait","Value":"83846949","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":273,"Name":"executor time IO wait - footers","Value":"83364646","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"executor time IO wait - full files + column data","Value":"482303","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"executor time IO wait - Aether metadata","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"executor time CPU","Value":"4704430","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"executor time CPU - other","Value":"1994312","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":278,"Name":"executor time CPU - decoding footers","Value":"177401","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":279,"Name":"executor time CPU - decoding columns","Value":"907406","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":280,"Name":"executor time CPU - decompressing pages","Value":"1625311","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":281,"Name":"executor time CPU - decoding deletion vectors","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":282,"Name":"cloud storage requests to fetch parquet footer","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":283,"Name":"rows scanned","Value":"4096","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":289,"Name":"executor time CPU - applying data filters","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":292,"Name":"executor time CPU - applying dictionary filters","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":297,"Name":"peak memory usage","Value":"17512668","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":298,"Name":"peak reader threads utilized","Value":"1000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":299,"Name":"size of data read with io requests","Value":"444508","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":304,"Name":"number of non-local (rescheduled) scan tasks","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":324,"Name":"repeated reads estimated low size","Value":"444508","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":325,"Name":"repeated reads estimated high size","Value":"444508","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":326,"Name":"cloud storage request size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":327,"Name":"cloud storage response size","Value":"444512","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":328,"Name":"cloud storage request count","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":329,"Name":"cloud storage request duration","Value":"76","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":330,"Name":"cloud storage retry count","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":331,"Name":"cloud storage retry duration","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":341,"Name":"time spent reading deletion vectors","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":342,"Name":"executor time IO wait - deletion vectors","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":352,"Name":"unified cache serve bytes for ParquetColumnChunk","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":353,"Name":"unified cache serve bytes for ParquetFooter","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":354,"Name":"unified cache serve bytes for Range","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":355,"Name":"unified cache read bytes for ParquetColumnChunk","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":356,"Name":"unified cache read bytes for ParquetFooter","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":357,"Name":"unified cache read bytes for Range","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":358,"Name":"unified cache write bytes for ParquetColumnChunk","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":359,"Name":"unified cache write bytes for ParquetFooter","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":360,"Name":"unified cache write bytes for Range","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":361,"Name":"unified cache populate time for ParquetColumnChunk","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":362,"Name":"unified cache populate time for ParquetFooter","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":363,"Name":"unified cache populate time for Range","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":366,"Name":"internal.metrics.executorDeserializeTime","Value":21,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.executorDeserializeCpuTime","Value":19304600,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.executorRunTime","Value":121,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.executorCpuTime","Value":35409100,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.resultSize","Value":56655,"Internal":true,"Count Failed Values":true},{"ID":399,"Name":"internal.metrics.input.bytesRead","Value":444508,"Internal":true,"Count Failed Values":true},{"ID":400,"Name":"internal.metrics.input.recordsRead","Value":4096,"Internal":true,"Count Failed Values":true},{"ID":407,"Name":"internal.metrics.io.requestBytesCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":408,"Name":"internal.metrics.io.responseBytesCount","Value":444512,"Internal":true,"Count Failed Values":true},{"ID":409,"Name":"internal.metrics.io.requestCount","Value":3,"Internal":true,"Count Failed Values":true},{"ID":410,"Name":"internal.metrics.io.requestMsDuration","Value":76,"Internal":true,"Count Failed Values":true},{"ID":411,"Name":"internal.metrics.io.retryCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":412,"Name":"internal.metrics.io.retryDelayMsDuration","Value":0,"Internal":true,"Count Failed Values":true},{"ID":415,"Name":"internal.metrics.trackedOffHeapMemorySize","Value":152175596,"Internal":true,"Count Failed Values":true},{"ID":416,"Name":"internal.metrics.photonBufferPoolMemorySize","Value":2576864,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":1,"Completion Time":1707214818915,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":2,"time":1707214818937,"errorMessage":""}
