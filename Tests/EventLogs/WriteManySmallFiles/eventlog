{"Event":"DBCEventLoggingListenerMetadata","Spark Version":"3.4.1","Timestamp":1710766590896,"Rollover Number":1,"SparkContext Id":7457485797975121240}
{"Event":"SparkListenerTaskGettingResult","Task Info":{"Task ID":2,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1710765944938,"Executor ID":"driver","Host":"10.139.64.109","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":1710766590888,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":2,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":2,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1710765944938,"Executor ID":"driver","Host":"10.139.64.109","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":1710766590888,"Finish Time":1710766591213,"Failed":false,"Killed":false,"Accumulables":[{"ID":2,"Name":"cloud storage request size","Update":"12551868","Value":"12551868","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":3,"Name":"cloud storage response size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":4,"Name":"cloud storage request count","Update":"10000","Value":"10000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":5,"Name":"cloud storage request duration","Update":"689089","Value":"689089","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":6,"Name":"cloud storage retry count","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":7,"Name":"cloud storage retry duration","Update":"14","Value":"14","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":12,"Name":"task commit time","Update":"83719","Value":"83719","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":259,"Name":"stage duration","Update":"560804","Value":"560804","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":261,"Name":"peak memory usage","Update":"211016082","Value":"211016082","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":262,"Name":"peak untracked memory usage","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":263,"Name":"number of output rows","Update":"2000","Value":"2000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":264,"Name":"number of output batches","Update":"2000","Value":"2000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"cumulative time","Update":"560804941073","Value":"560804941073","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"exclusive time","Update":"560713161576","Value":"560713161576","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"tasks total","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"files written","Update":"2000","Value":"2000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":270,"Name":"row groups","Update":"2001000","Value":"2001000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":271,"Name":"page count","Update":"62031000","Value":"62031000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":272,"Name":"file size","Update":"12551868","Value":"12551868","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":273,"Name":"scalar fields in parquet schema","Update":"31","Value":"31","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"executor time CPU - compression","Update":"593669178612","Value":"593669178612","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"executor time CPU - page encoding","Update":"2530107223490","Value":"2530107223490","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"executor time CPU - compute parquet statistics","Update":"10443764969","Value":"10443764969","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"peak memory usage","Update":"43218944","Value":"43218944","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":278,"Name":"file size - compressed data pages","Update":"843591068","Value":"843591068","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":279,"Name":"file size - compressed dictionary pages","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":280,"Name":"file size - metadata","Update":"9411042136","Value":"9411042136","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":281,"Name":"column chunks - plain encoding","Update":"62031000","Value":"62031000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":285,"Name":"number of output rows","Update":"2000","Value":"2000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":286,"Name":"number of output batches","Update":"2000","Value":"2000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":287,"Name":"cumulative time","Update":"91779497","Value":"91779497","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":288,"Name":"exclusive time","Update":"81352299","Value":"81352299","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":290,"Name":"tasks total","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":291,"Name":"time in hash build","Update":"66874","Value":"66874","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":292,"Name":"time in produce","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":293,"Name":"hashed relation size","Update":"33572450","Value":"33572450","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":294,"Name":"peak memory usage","Update":"33572450","Value":"33572450","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":296,"Name":"Time spent in resizing hash table","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":297,"Name":"num hash lookups","Update":"2000","Value":"2000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":298,"Name":"avg hash probes per row","Update":"1000","Value":"1000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":299,"Name":"avg hash probe steps per batch","Update":"1000","Value":"1000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":302,"Name":"num bytes spilled to disk due to memory pressure","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":303,"Name":"num uncompressed bytes spilled","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":305,"Name":"num spill partitions created","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":306,"Name":"number of output rows","Update":"2000","Value":"2000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":307,"Name":"number of output batches","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":308,"Name":"cumulative time","Update":"10427198","Value":"10427198","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":309,"Name":"exclusive time","Update":"2778","Value":"2778","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":311,"Name":"tasks total","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":312,"Name":"number of output rows","Update":"2000","Value":"2000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"number of output batches","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":314,"Name":"cumulative time","Update":"10424420","Value":"10424420","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":315,"Name":"exclusive time","Update":"10424420","Value":"10424420","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":316,"Name":"num early close","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":317,"Name":"tasks total","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":318,"Name":"num bytes read","Update":"41235","Value":"41235","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":319,"Name":"num uncompressed bytes read","Update":"531602","Value":"531602","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":320,"Name":"time taken to decompress data","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":322,"Name":"local blocks read","Update":"2","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":325,"Name":"local bytes read","Update":"50959","Value":"50959","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":326,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":364,"Name":"internal.metrics.executorDeserializeTime","Update":109,"Value":109,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.executorDeserializeCpuTime","Update":106191000,"Value":106191000,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.executorRunTime","Update":645658,"Value":645658,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.executorCpuTime","Update":29443057100,"Value":29443057100,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.resultSize","Update":3826979,"Value":3826979,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.jvmGCTime","Update":780,"Value":780,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.resultSerializationTime","Update":49,"Value":49,"Internal":true,"Count Failed Values":true},{"ID":377,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":378,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":2,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":379,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":380,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":381,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":50959,"Value":50959,"Internal":true,"Count Failed Values":true},{"ID":382,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":383,"Name":"internal.metrics.shuffle.read.recordsRead","Update":2000,"Value":2000,"Internal":true,"Count Failed Values":true},{"ID":384,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":385,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":386,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":387,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":388,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":389,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":390,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":391,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":392,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":393,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":402,"Name":"internal.metrics.output.bytesWritten","Update":12551868,"Value":12551868,"Internal":true,"Count Failed Values":true},{"ID":403,"Name":"internal.metrics.output.recordsWritten","Update":2000,"Value":2000,"Internal":true,"Count Failed Values":true},{"ID":405,"Name":"internal.metrics.io.requestBytesCount","Update":12551868,"Value":12551868,"Internal":true,"Count Failed Values":true},{"ID":406,"Name":"internal.metrics.io.responseBytesCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":407,"Name":"internal.metrics.io.requestCount","Update":10000,"Value":10000,"Internal":true,"Count Failed Values":true},{"ID":408,"Name":"internal.metrics.io.requestMsDuration","Update":689089,"Value":689089,"Internal":true,"Count Failed Values":true},{"ID":409,"Name":"internal.metrics.io.retryCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":410,"Name":"internal.metrics.io.retryDelayMsDuration","Update":14,"Value":14,"Internal":true,"Count Failed Values":true},{"ID":413,"Name":"internal.metrics.trackedOffHeapMemorySize","Update":211016082,"Value":211016082,"Internal":true,"Count Failed Values":true},{"ID":414,"Name":"internal.metrics.photonBufferPoolMemorySize","Update":8276000,"Value":8276000,"Internal":true,"Count Failed Values":true},{"ID":415,"Name":"internal.metrics.photonizedTaskTimeNs","Update":649,"Value":649,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":2339382416,"JVMOffHeapMemory":527334928,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":174021010,"OnHeapStorageMemory":178831,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":178831,"OffHeapUnifiedMemory":174021010,"DirectPoolMemory":1270977,"MappedPoolMemory":0,"NettyDirectMemory":12582912,"JvmDirectMemory":1270977,"SparkDirectMemoryOverLimit":262144,"TotalOffHeapMemory":61932363,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":27,"MinorGCTime":1722,"MajorGCCount":6,"MajorGCTime":1932,"TotalGCTime":3654},"Task Metrics":{"Executor Deserialize Time":109,"Executor Deserialize CPU Time":106191000,"Executor Run Time":645658,"Executor CPU Time":29443057100,"Peak Execution Memory":0,"Result Size":3826979,"JVM GC Time":780,"Result Serialization Time":49,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":2,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":50959,"Total Records Read":2000,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":12551868,"Records Written":2000},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":2,"Stage Attempt ID":0,"Stage Name":"write at WriteIntoDeltaCommand.scala:114","Number of Tasks":1,"RDD Info":[{"RDD ID":7,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"spark_plan_185\",\"name\":\"PhotonWriteStage\"}","Callsite":"mapPartitionsWithIndexInternal at PhotonExec.scala:405","Parent IDs":[6],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":5,"Name":"ShuffledBlockRDD","Scope":"{\"id\":\"spark_plan_185\",\"name\":\"PhotonWriteStage\"}","Callsite":"RDD at ShuffledBlockRDD.scala:75","Parent IDs":[4],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":6,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"spark_plan_185\",\"name\":\"PhotonWriteStage\"}","Callsite":"mapPartitionsInternal at photonPhysicalOperators.scala:2291","Parent IDs":[5],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[1],"Details":"org.apache.spark.sql.execution.datasources.FileFormatWriter$.write(FileFormatWriter.scala:117)\ncom.databricks.sql.transaction.tahoe.commands.WriteIntoDeltaCommand.run(WriteIntoDeltaCommand.scala:114)\norg.apache.spark.sql.execution.command.DataWritingCommandExec.$anonfun$sideEffectResult$3(commands.scala:132)\ncom.databricks.spark.util.FrameProfiler$.record(FrameProfiler.scala:94)\norg.apache.spark.sql.execution.command.DataWritingCommandExec.sideEffectResult$lzycompute(commands.scala:130)\norg.apache.spark.sql.execution.command.DataWritingCommandExec.sideEffectResult(commands.scala:129)\norg.apache.spark.sql.execution.command.DataWritingCommandExec.$anonfun$doExecute$4(commands.scala:156)\ncom.databricks.spark.util.FrameProfiler$.record(FrameProfiler.scala:94)\norg.apache.spark.sql.execution.command.DataWritingCommandExec.doExecute(commands.scala:156)\norg.apache.spark.sql.execution.SparkPlan.$anonfun$execute$2(SparkPlan.scala:289)\ncom.databricks.spark.util.FrameProfiler$.record(FrameProfiler.scala:94)\norg.apache.spark.sql.execution.SparkPlan.$anonfun$execute$1(SparkPlan.scala:289)\norg.apache.spark.sql.execution.SparkPlan$.org$apache$spark$sql$execution$SparkPlan$$withExecuteQueryLogging(SparkPlan.scala:122)\norg.apache.spark.sql.execution.SparkPlan.$anonfun$executeQuery$1(SparkPlan.scala:347)\norg.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:165)\norg.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:343)\norg.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:284)\norg.apache.spark.sql.execution.adaptive.AdaptiveSparkPlanExec.$anonfun$doExecute$1(AdaptiveSparkPlanExec.scala:772)\norg.apache.spark.sql.execution.adaptive.ResultQueryStageExec.$anonfun$doMaterialize$1(QueryStageExec.scala:530)\norg.apache.spark.sql.SparkSession.withActive(SparkSession.scala:1138)","Submission Time":1710765944499,"Completion Time":1710766591215,"Accumulables":[{"ID":2,"Name":"cloud storage request size","Value":"12551868","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":3,"Name":"cloud storage response size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":4,"Name":"cloud storage request count","Value":"10000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":5,"Name":"cloud storage request duration","Value":"689089","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":6,"Name":"cloud storage retry count","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":7,"Name":"cloud storage retry duration","Value":"14","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":12,"Name":"task commit time","Value":"83719","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":259,"Name":"stage duration","Value":"560804","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":261,"Name":"peak memory usage","Value":"211016082","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":262,"Name":"peak untracked memory usage","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":263,"Name":"number of output rows","Value":"2000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":264,"Name":"number of output batches","Value":"2000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"cumulative time","Value":"560804941073","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"exclusive time","Value":"560713161576","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"tasks total","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"files written","Value":"2000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":270,"Name":"row groups","Value":"2001000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":271,"Name":"page count","Value":"62031000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":272,"Name":"file size","Value":"12551868","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":273,"Name":"scalar fields in parquet schema","Value":"31","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":274,"Name":"executor time CPU - compression","Value":"593669178612","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":275,"Name":"executor time CPU - page encoding","Value":"2530107223490","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"executor time CPU - compute parquet statistics","Value":"10443764969","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":277,"Name":"peak memory usage","Value":"43218944","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":278,"Name":"file size - compressed data pages","Value":"843591068","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":279,"Name":"file size - compressed dictionary pages","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":280,"Name":"file size - metadata","Value":"9411042136","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":281,"Name":"column chunks - plain encoding","Value":"62031000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":285,"Name":"number of output rows","Value":"2000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":286,"Name":"number of output batches","Value":"2000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":287,"Name":"cumulative time","Value":"91779497","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":288,"Name":"exclusive time","Value":"81352299","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":290,"Name":"tasks total","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":291,"Name":"time in hash build","Value":"66874","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":292,"Name":"time in produce","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":293,"Name":"hashed relation size","Value":"33572450","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":294,"Name":"peak memory usage","Value":"33572450","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":296,"Name":"Time spent in resizing hash table","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":297,"Name":"num hash lookups","Value":"2000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":298,"Name":"avg hash probes per row","Value":"1000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":299,"Name":"avg hash probe steps per batch","Value":"1000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":302,"Name":"num bytes spilled to disk due to memory pressure","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":303,"Name":"num uncompressed bytes spilled","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":305,"Name":"num spill partitions created","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":306,"Name":"number of output rows","Value":"2000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":307,"Name":"number of output batches","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":308,"Name":"cumulative time","Value":"10427198","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":309,"Name":"exclusive time","Value":"2778","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":311,"Name":"tasks total","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":312,"Name":"number of output rows","Value":"2000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":313,"Name":"number of output batches","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":314,"Name":"cumulative time","Value":"10424420","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":315,"Name":"exclusive time","Value":"10424420","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":316,"Name":"num early close","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":317,"Name":"tasks total","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":318,"Name":"num bytes read","Value":"41235","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":319,"Name":"num uncompressed bytes read","Value":"531602","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":320,"Name":"time taken to decompress data","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":322,"Name":"local blocks read","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":325,"Name":"local bytes read","Value":"50959","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":326,"Name":"fetch wait time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":364,"Name":"internal.metrics.executorDeserializeTime","Value":109,"Internal":true,"Count Failed Values":true},{"ID":365,"Name":"internal.metrics.executorDeserializeCpuTime","Value":106191000,"Internal":true,"Count Failed Values":true},{"ID":366,"Name":"internal.metrics.executorRunTime","Value":645658,"Internal":true,"Count Failed Values":true},{"ID":367,"Name":"internal.metrics.executorCpuTime","Value":29443057100,"Internal":true,"Count Failed Values":true},{"ID":368,"Name":"internal.metrics.resultSize","Value":3826979,"Internal":true,"Count Failed Values":true},{"ID":369,"Name":"internal.metrics.jvmGCTime","Value":780,"Internal":true,"Count Failed Values":true},{"ID":370,"Name":"internal.metrics.resultSerializationTime","Value":49,"Internal":true,"Count Failed Values":true},{"ID":377,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":378,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Value":2,"Internal":true,"Count Failed Values":true},{"ID":379,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":380,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Value":0,"Internal":true,"Count Failed Values":true},{"ID":381,"Name":"internal.metrics.shuffle.read.localBytesRead","Value":50959,"Internal":true,"Count Failed Values":true},{"ID":382,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Value":0,"Internal":true,"Count Failed Values":true},{"ID":383,"Name":"internal.metrics.shuffle.read.recordsRead","Value":2000,"Internal":true,"Count Failed Values":true},{"ID":384,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Value":0,"Internal":true,"Count Failed Values":true},{"ID":385,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":386,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":387,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":388,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":389,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":390,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":391,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":392,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Value":0,"Internal":true,"Count Failed Values":true},{"ID":393,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Value":0,"Internal":true,"Count Failed Values":true},{"ID":402,"Name":"internal.metrics.output.bytesWritten","Value":12551868,"Internal":true,"Count Failed Values":true},{"ID":403,"Name":"internal.metrics.output.recordsWritten","Value":2000,"Internal":true,"Count Failed Values":true},{"ID":405,"Name":"internal.metrics.io.requestBytesCount","Value":12551868,"Internal":true,"Count Failed Values":true},{"ID":406,"Name":"internal.metrics.io.responseBytesCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":407,"Name":"internal.metrics.io.requestCount","Value":10000,"Internal":true,"Count Failed Values":true},{"ID":408,"Name":"internal.metrics.io.requestMsDuration","Value":689089,"Internal":true,"Count Failed Values":true},{"ID":409,"Name":"internal.metrics.io.retryCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":410,"Name":"internal.metrics.io.retryDelayMsDuration","Value":14,"Internal":true,"Count Failed Values":true},{"ID":413,"Name":"internal.metrics.trackedOffHeapMemorySize","Value":211016082,"Internal":true,"Count Failed Values":true},{"ID":414,"Name":"internal.metrics.photonBufferPoolMemorySize","Value":8276000,"Internal":true,"Count Failed Values":true},{"ID":415,"Name":"internal.metrics.photonizedTaskTimeNs","Value":649,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":1,"Completion Time":1710766591235,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":2,"accumUpdates":[[8,2000],[13,286],[10,2000],[11,2000],[9,12551868]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":2,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (25)\n+- == Final Plan ==\n   ResultQueryStage (13), Statistics(sizeInBytes=929.7 KiB, ColumnStat: N/A, isRuntime=true)\n   +- Execute WriteIntoDeltaCommand (12)\n      +- PhotonWriteStage (11)\n         +- PhotonParquetWriter (10)\n            +- PhotonClustering (9)\n               +- PhotonGlobalLimit (8)\n                  +- PhotonShuffleExchangeSource (7)\n                     +- ShuffleQueryStage (6), Statistics(sizeInBytes=520.1 KiB, rowCount=2.01E+3, ColumnStat: N/A, isRuntime=true)\n                        +- PhotonShuffleMapStage (5)\n                           +- PhotonShuffleExchangeSink (4)\n                              +- PhotonLocalLimit (3)\n                                 +- PhotonProject (2)\n                                    +- PhotonScan parquet hive_metastore.sternp.flights (1)\n+- == Initial Plan ==\n   Execute WriteIntoDeltaCommand (24)\n   +- PhotonWriteStage (23)\n      +- PhotonParquetWriter (22)\n         +- PhotonClustering (21)\n            +- PhotonGlobalLimit (20)\n               +- PhotonShuffleExchangeSource (19)\n                  +- PhotonShuffleMapStage (18)\n                     +- PhotonShuffleExchangeSink (17)\n                        +- PhotonLocalLimit (16)\n                           +- PhotonProject (15)\n                              +- PhotonScan parquet hive_metastore.sternp.flights (14)\n\n\n(1) PhotonScan parquet hive_metastore.sternp.flights\nOutput [32]: [Month#45, DayofMonth#46, DayOfWeek#47, DepTime#48, CRSDepTime#49, ArrTime#50, CRSArrTime#51, UniqueCarrier#52, FlightNum#53, TailNum#54, ActualElapsedTime#55, CRSElapsedTime#56, AirTime#57, ArrDelay#58, DepDelay#59, Origin#60, Dest#61, Distance#62, TaxiIn#63, TaxiOut#64, Cancelled#65, CancellationCode#66, Diverted#67, CarrierDelay#68, WeatherDelay#69, NASDelay#70, SecurityDelay#71, LateAircraftDelay#72, IsArrDelayed#73, IsDepDelayed#74, id#75L, Year#44]\nLocation: PreparedDeltaFileIndex [dbfs:/home/peter.stern@databricks.com/flights]\nReadSchema: struct<Month:int,DayofMonth:int,DayOfWeek:int,DepTime:string,CRSDepTime:int,ArrTime:string,CRSArrTime:int,UniqueCarrier:string,FlightNum:int,TailNum:string,ActualElapsedTime:string,CRSElapsedTime:int,AirTime:string,ArrDelay:string,DepDelay:string,Origin:string,Dest:string,Distance:string,TaxiIn:string,TaxiOut:string,Cancelled:int,CancellationCode:string,Diverted:int,CarrierDelay:string,WeatherDelay:string,NASDelay:string,SecurityDelay:string,LateAircraftDelay:string,IsArrDelayed:string,IsDepDelayed:string,id:bigint>\n\n(2) PhotonProject\nInput [32]: [Month#45, DayofMonth#46, DayOfWeek#47, DepTime#48, CRSDepTime#49, ArrTime#50, CRSArrTime#51, UniqueCarrier#52, FlightNum#53, TailNum#54, ActualElapsedTime#55, CRSElapsedTime#56, AirTime#57, ArrDelay#58, DepDelay#59, Origin#60, Dest#61, Distance#62, TaxiIn#63, TaxiOut#64, Cancelled#65, CancellationCode#66, Diverted#67, CarrierDelay#68, WeatherDelay#69, NASDelay#70, SecurityDelay#71, LateAircraftDelay#72, IsArrDelayed#73, IsDepDelayed#74, id#75L, Year#44]\nArguments: [Year#44, Month#45, DayofMonth#46, DayOfWeek#47, DepTime#48, CRSDepTime#49, ArrTime#50, CRSArrTime#51, UniqueCarrier#52, FlightNum#53, TailNum#54, ActualElapsedTime#55, CRSElapsedTime#56, AirTime#57, ArrDelay#58, DepDelay#59, Origin#60, Dest#61, Distance#62, TaxiIn#63, TaxiOut#64, Cancelled#65, CancellationCode#66, Diverted#67, ... 8 more fields]\n\n(3) PhotonLocalLimit\nInput [32]: [Year#44, Month#45, DayofMonth#46, DayOfWeek#47, DepTime#48, CRSDepTime#49, ArrTime#50, CRSArrTime#51, UniqueCarrier#52, FlightNum#53, TailNum#54, ActualElapsedTime#55, CRSElapsedTime#56, AirTime#57, ArrDelay#58, DepDelay#59, Origin#60, Dest#61, Distance#62, TaxiIn#63, TaxiOut#64, Cancelled#65, CancellationCode#66, Diverted#67, CarrierDelay#68, WeatherDelay#69, NASDelay#70, SecurityDelay#71, LateAircraftDelay#72, IsArrDelayed#73, IsDepDelayed#74, id#75L]\nArguments: 2000\n\n(4) PhotonShuffleExchangeSink\nInput [32]: [Year#44, Month#45, DayofMonth#46, DayOfWeek#47, DepTime#48, CRSDepTime#49, ArrTime#50, CRSArrTime#51, UniqueCarrier#52, FlightNum#53, TailNum#54, ActualElapsedTime#55, CRSElapsedTime#56, AirTime#57, ArrDelay#58, DepDelay#59, Origin#60, Dest#61, Distance#62, TaxiIn#63, TaxiOut#64, Cancelled#65, CancellationCode#66, Diverted#67, CarrierDelay#68, WeatherDelay#69, NASDelay#70, SecurityDelay#71, LateAircraftDelay#72, IsArrDelayed#73, IsDepDelayed#74, id#75L]\nArguments: SinglePartition\n\n(5) PhotonShuffleMapStage\nInput [32]: [Year#44, Month#45, DayofMonth#46, DayOfWeek#47, DepTime#48, CRSDepTime#49, ArrTime#50, CRSArrTime#51, UniqueCarrier#52, FlightNum#53, TailNum#54, ActualElapsedTime#55, CRSElapsedTime#56, AirTime#57, ArrDelay#58, DepDelay#59, Origin#60, Dest#61, Distance#62, TaxiIn#63, TaxiOut#64, Cancelled#65, CancellationCode#66, Diverted#67, CarrierDelay#68, WeatherDelay#69, NASDelay#70, SecurityDelay#71, LateAircraftDelay#72, IsArrDelayed#73, IsDepDelayed#74, id#75L]\nArguments: ENSURE_REQUIREMENTS, [id=#146]\n\n(6) ShuffleQueryStage\nOutput [32]: [Year#44, Month#45, DayofMonth#46, DayOfWeek#47, DepTime#48, CRSDepTime#49, ArrTime#50, CRSArrTime#51, UniqueCarrier#52, FlightNum#53, TailNum#54, ActualElapsedTime#55, CRSElapsedTime#56, AirTime#57, ArrDelay#58, DepDelay#59, Origin#60, Dest#61, Distance#62, TaxiIn#63, TaxiOut#64, Cancelled#65, CancellationCode#66, Diverted#67, CarrierDelay#68, WeatherDelay#69, NASDelay#70, SecurityDelay#71, LateAircraftDelay#72, IsArrDelayed#73, IsDepDelayed#74, id#75L]\nArguments: 0, Statistics(sizeInBytes=520.1 KiB, rowCount=2.01E+3, ColumnStat: N/A, isRuntime=true)\n\n(7) PhotonShuffleExchangeSource\nInput [32]: [Year#44, Month#45, DayofMonth#46, DayOfWeek#47, DepTime#48, CRSDepTime#49, ArrTime#50, CRSArrTime#51, UniqueCarrier#52, FlightNum#53, TailNum#54, ActualElapsedTime#55, CRSElapsedTime#56, AirTime#57, ArrDelay#58, DepDelay#59, Origin#60, Dest#61, Distance#62, TaxiIn#63, TaxiOut#64, Cancelled#65, CancellationCode#66, Diverted#67, CarrierDelay#68, WeatherDelay#69, NASDelay#70, SecurityDelay#71, LateAircraftDelay#72, IsArrDelayed#73, IsDepDelayed#74, id#75L]\n\n(8) PhotonGlobalLimit\nInput [32]: [Year#44, Month#45, DayofMonth#46, DayOfWeek#47, DepTime#48, CRSDepTime#49, ArrTime#50, CRSArrTime#51, UniqueCarrier#52, FlightNum#53, TailNum#54, ActualElapsedTime#55, CRSElapsedTime#56, AirTime#57, ArrDelay#58, DepDelay#59, Origin#60, Dest#61, Distance#62, TaxiIn#63, TaxiOut#64, Cancelled#65, CancellationCode#66, Diverted#67, CarrierDelay#68, WeatherDelay#69, NASDelay#70, SecurityDelay#71, LateAircraftDelay#72, IsArrDelayed#73, IsDepDelayed#74, id#75L]\nArguments: 2000\n\n(9) PhotonClustering\nInput [32]: [Year#44, Month#45, DayofMonth#46, DayOfWeek#47, DepTime#48, CRSDepTime#49, ArrTime#50, CRSArrTime#51, UniqueCarrier#52, FlightNum#53, TailNum#54, ActualElapsedTime#55, CRSElapsedTime#56, AirTime#57, ArrDelay#58, DepDelay#59, Origin#60, Dest#61, Distance#62, TaxiIn#63, TaxiOut#64, Cancelled#65, CancellationCode#66, Diverted#67, CarrierDelay#68, WeatherDelay#69, NASDelay#70, SecurityDelay#71, LateAircraftDelay#72, IsArrDelayed#73, IsDepDelayed#74, id#75L]\nArguments: [id#75L]\n\n(10) PhotonParquetWriter\nInput [32]: [Year#44, Month#45, DayofMonth#46, DayOfWeek#47, DepTime#48, CRSDepTime#49, ArrTime#50, CRSArrTime#51, UniqueCarrier#52, FlightNum#53, TailNum#54, ActualElapsedTime#55, CRSElapsedTime#56, AirTime#57, ArrDelay#58, DepDelay#59, Origin#60, Dest#61, Distance#62, TaxiIn#63, TaxiOut#64, Cancelled#65, CancellationCode#66, Diverted#67, CarrierDelay#68, WeatherDelay#69, NASDelay#70, SecurityDelay#71, LateAircraftDelay#72, IsArrDelayed#73, IsDepDelayed#74, id#75L]\nArguments: [id#75L], [Year#44, Month#45, DayofMonth#46, DayOfWeek#47, DepTime#48, CRSDepTime#49, ArrTime#50, CRSArrTime#51, UniqueCarrier#52, FlightNum#53, TailNum#54, ActualElapsedTime#55, CRSElapsedTime#56, AirTime#57, ArrDelay#58, DepDelay#59, Origin#60, Dest#61, Distance#62, TaxiIn#63, TaxiOut#64, Cancelled#65, CancellationCode#66, Diverted#67, ... 7 more fields]\n\n(11) PhotonWriteStage\nInput: []\n\n(12) Execute WriteIntoDeltaCommand\nInput: []\nArguments: OutputSpec(abfss://unity@unitydemo.dfs.core.windows.net/b86c6879-8c55-4e70-a585-18d16a4fa6e9/tables/d26fe8fd-400d-44de-9e31-2570167afb80,Map(),List(Year#44, Month#45, DayofMonth#46, DayOfWeek#47, DepTime#48, CRSDepTime#49, ArrTime#50, CRSArrTime#51, UniqueCarrier#52, FlightNum#53, TailNum#54, ActualElapsedTime#55, CRSElapsedTime#56, AirTime#57, ArrDelay#58, DepDelay#59, Origin#60, Dest#61, Distance#62, TaxiIn#63, TaxiOut#64, Cancelled#65, CancellationCode#66, Diverted#67, CarrierDelay#68, WeatherDelay#69, NASDelay#70, SecurityDelay#71, LateAircraftDelay#72, IsArrDelayed#73, IsDepDelayed#74, id#75L))\n\n(13) ResultQueryStage\nOutput: []\nArguments: 1, Statistics(sizeInBytes=929.7 KiB, ColumnStat: N/A, isRuntime=true)\n\n(14) PhotonScan parquet hive_metastore.sternp.flights\nOutput [32]: [Month#45, DayofMonth#46, DayOfWeek#47, DepTime#48, CRSDepTime#49, ArrTime#50, CRSArrTime#51, UniqueCarrier#52, FlightNum#53, TailNum#54, ActualElapsedTime#55, CRSElapsedTime#56, AirTime#57, ArrDelay#58, DepDelay#59, Origin#60, Dest#61, Distance#62, TaxiIn#63, TaxiOut#64, Cancelled#65, CancellationCode#66, Diverted#67, CarrierDelay#68, WeatherDelay#69, NASDelay#70, SecurityDelay#71, LateAircraftDelay#72, IsArrDelayed#73, IsDepDelayed#74, id#75L, Year#44]\nLocation: PreparedDeltaFileIndex [dbfs:/home/peter.stern@databricks.com/flights]\nReadSchema: struct<Month:int,DayofMonth:int,DayOfWeek:int,DepTime:string,CRSDepTime:int,ArrTime:string,CRSArrTime:int,UniqueCarrier:string,FlightNum:int,TailNum:string,ActualElapsedTime:string,CRSElapsedTime:int,AirTime:string,ArrDelay:string,DepDelay:string,Origin:string,Dest:string,Distance:string,TaxiIn:string,TaxiOut:string,Cancelled:int,CancellationCode:string,Diverted:int,CarrierDelay:string,WeatherDelay:string,NASDelay:string,SecurityDelay:string,LateAircraftDelay:string,IsArrDelayed:string,IsDepDelayed:string,id:bigint>\n\n(15) PhotonProject\nInput [32]: [Month#45, DayofMonth#46, DayOfWeek#47, DepTime#48, CRSDepTime#49, ArrTime#50, CRSArrTime#51, UniqueCarrier#52, FlightNum#53, TailNum#54, ActualElapsedTime#55, CRSElapsedTime#56, AirTime#57, ArrDelay#58, DepDelay#59, Origin#60, Dest#61, Distance#62, TaxiIn#63, TaxiOut#64, Cancelled#65, CancellationCode#66, Diverted#67, CarrierDelay#68, WeatherDelay#69, NASDelay#70, SecurityDelay#71, LateAircraftDelay#72, IsArrDelayed#73, IsDepDelayed#74, id#75L, Year#44]\nArguments: [Year#44, Month#45, DayofMonth#46, DayOfWeek#47, DepTime#48, CRSDepTime#49, ArrTime#50, CRSArrTime#51, UniqueCarrier#52, FlightNum#53, TailNum#54, ActualElapsedTime#55, CRSElapsedTime#56, AirTime#57, ArrDelay#58, DepDelay#59, Origin#60, Dest#61, Distance#62, TaxiIn#63, TaxiOut#64, Cancelled#65, CancellationCode#66, Diverted#67, ... 8 more fields]\n\n(16) PhotonLocalLimit\nInput [32]: [Year#44, Month#45, DayofMonth#46, DayOfWeek#47, DepTime#48, CRSDepTime#49, ArrTime#50, CRSArrTime#51, UniqueCarrier#52, FlightNum#53, TailNum#54, ActualElapsedTime#55, CRSElapsedTime#56, AirTime#57, ArrDelay#58, DepDelay#59, Origin#60, Dest#61, Distance#62, TaxiIn#63, TaxiOut#64, Cancelled#65, CancellationCode#66, Diverted#67, CarrierDelay#68, WeatherDelay#69, NASDelay#70, SecurityDelay#71, LateAircraftDelay#72, IsArrDelayed#73, IsDepDelayed#74, id#75L]\nArguments: 2000\n\n(17) PhotonShuffleExchangeSink\nInput [32]: [Year#44, Month#45, DayofMonth#46, DayOfWeek#47, DepTime#48, CRSDepTime#49, ArrTime#50, CRSArrTime#51, UniqueCarrier#52, FlightNum#53, TailNum#54, ActualElapsedTime#55, CRSElapsedTime#56, AirTime#57, ArrDelay#58, DepDelay#59, Origin#60, Dest#61, Distance#62, TaxiIn#63, TaxiOut#64, Cancelled#65, CancellationCode#66, Diverted#67, CarrierDelay#68, WeatherDelay#69, NASDelay#70, SecurityDelay#71, LateAircraftDelay#72, IsArrDelayed#73, IsDepDelayed#74, id#75L]\nArguments: SinglePartition\n\n(18) PhotonShuffleMapStage\nInput [32]: [Year#44, Month#45, DayofMonth#46, DayOfWeek#47, DepTime#48, CRSDepTime#49, ArrTime#50, CRSArrTime#51, UniqueCarrier#52, FlightNum#53, TailNum#54, ActualElapsedTime#55, CRSElapsedTime#56, AirTime#57, ArrDelay#58, DepDelay#59, Origin#60, Dest#61, Distance#62, TaxiIn#63, TaxiOut#64, Cancelled#65, CancellationCode#66, Diverted#67, CarrierDelay#68, WeatherDelay#69, NASDelay#70, SecurityDelay#71, LateAircraftDelay#72, IsArrDelayed#73, IsDepDelayed#74, id#75L]\nArguments: ENSURE_REQUIREMENTS, [id=#119]\n\n(19) PhotonShuffleExchangeSource\nInput [32]: [Year#44, Month#45, DayofMonth#46, DayOfWeek#47, DepTime#48, CRSDepTime#49, ArrTime#50, CRSArrTime#51, UniqueCarrier#52, FlightNum#53, TailNum#54, ActualElapsedTime#55, CRSElapsedTime#56, AirTime#57, ArrDelay#58, DepDelay#59, Origin#60, Dest#61, Distance#62, TaxiIn#63, TaxiOut#64, Cancelled#65, CancellationCode#66, Diverted#67, CarrierDelay#68, WeatherDelay#69, NASDelay#70, SecurityDelay#71, LateAircraftDelay#72, IsArrDelayed#73, IsDepDelayed#74, id#75L]\n\n(20) PhotonGlobalLimit\nInput [32]: [Year#44, Month#45, DayofMonth#46, DayOfWeek#47, DepTime#48, CRSDepTime#49, ArrTime#50, CRSArrTime#51, UniqueCarrier#52, FlightNum#53, TailNum#54, ActualElapsedTime#55, CRSElapsedTime#56, AirTime#57, ArrDelay#58, DepDelay#59, Origin#60, Dest#61, Distance#62, TaxiIn#63, TaxiOut#64, Cancelled#65, CancellationCode#66, Diverted#67, CarrierDelay#68, WeatherDelay#69, NASDelay#70, SecurityDelay#71, LateAircraftDelay#72, IsArrDelayed#73, IsDepDelayed#74, id#75L]\nArguments: 2000\n\n(21) PhotonClustering\nInput [32]: [Year#44, Month#45, DayofMonth#46, DayOfWeek#47, DepTime#48, CRSDepTime#49, ArrTime#50, CRSArrTime#51, UniqueCarrier#52, FlightNum#53, TailNum#54, ActualElapsedTime#55, CRSElapsedTime#56, AirTime#57, ArrDelay#58, DepDelay#59, Origin#60, Dest#61, Distance#62, TaxiIn#63, TaxiOut#64, Cancelled#65, CancellationCode#66, Diverted#67, CarrierDelay#68, WeatherDelay#69, NASDelay#70, SecurityDelay#71, LateAircraftDelay#72, IsArrDelayed#73, IsDepDelayed#74, id#75L]\nArguments: [id#75L]\n\n(22) PhotonParquetWriter\nInput [32]: [Year#44, Month#45, DayofMonth#46, DayOfWeek#47, DepTime#48, CRSDepTime#49, ArrTime#50, CRSArrTime#51, UniqueCarrier#52, FlightNum#53, TailNum#54, ActualElapsedTime#55, CRSElapsedTime#56, AirTime#57, ArrDelay#58, DepDelay#59, Origin#60, Dest#61, Distance#62, TaxiIn#63, TaxiOut#64, Cancelled#65, CancellationCode#66, Diverted#67, CarrierDelay#68, WeatherDelay#69, NASDelay#70, SecurityDelay#71, LateAircraftDelay#72, IsArrDelayed#73, IsDepDelayed#74, id#75L]\nArguments: [id#75L], [Year#44, Month#45, DayofMonth#46, DayOfWeek#47, DepTime#48, CRSDepTime#49, ArrTime#50, CRSArrTime#51, UniqueCarrier#52, FlightNum#53, TailNum#54, ActualElapsedTime#55, CRSElapsedTime#56, AirTime#57, ArrDelay#58, DepDelay#59, Origin#60, Dest#61, Distance#62, TaxiIn#63, TaxiOut#64, Cancelled#65, CancellationCode#66, Diverted#67, ... 7 more fields]\n\n(23) PhotonWriteStage\nInput: []\n\n(24) Execute WriteIntoDeltaCommand\nInput: []\nArguments: OutputSpec(abfss://unity@unitydemo.dfs.core.windows.net/b86c6879-8c55-4e70-a585-18d16a4fa6e9/tables/d26fe8fd-400d-44de-9e31-2570167afb80,Map(),List(Year#44, Month#45, DayofMonth#46, DayOfWeek#47, DepTime#48, CRSDepTime#49, ArrTime#50, CRSArrTime#51, UniqueCarrier#52, FlightNum#53, TailNum#54, ActualElapsedTime#55, CRSElapsedTime#56, AirTime#57, ArrDelay#58, DepDelay#59, Origin#60, Dest#61, Distance#62, TaxiIn#63, TaxiOut#64, Cancelled#65, CancellationCode#66, Diverted#67, CarrierDelay#68, WeatherDelay#69, NASDelay#70, SecurityDelay#71, LateAircraftDelay#72, IsArrDelayed#73, IsDepDelayed#74, id#75L))\n\n(25) AdaptiveSparkPlan\nOutput: []\nArguments: isFinalPlan=true\n\n\n== Photon Explanation ==\nThe query is fully supported by Photon.","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"ResultQueryStage","simpleString":"ResultQueryStage 1, Statistics(sizeInBytes=929.7 KiB, ColumnStat: N/A, isRuntime=true)","children":[{"nodeName":"Execute WriteIntoDeltaCommand","simpleString":"Execute WriteIntoDeltaCommand OutputSpec(abfss://unity@unitydemo.dfs.core.windows.net/b86c6879-8c55-4e70-a585-18d16a4fa6e9/tables/d26fe8fd-400d-44de-9e31-2570167afb80,Map(),List(Year#44, Month#45, DayofMonth#46, DayOfWeek#47, DepTime#48, CRSDepTime#49, ArrTime#50, CRSArrTime#51, UniqueCarrier#52, FlightNum#53, TailNum#54, ActualElapsedTime#55, CRSElapsedTime#56, AirTime#57, ArrDelay#58, DepDelay#59, Origin#60, Dest#61, Distance#62, TaxiIn#63, TaxiOut#64, Cancelled#65, CancellationCode#66, Diverted#67, CarrierDelay#68, WeatherDelay#69, NASDelay#70, SecurityDelay#71, LateAircraftDelay#72, IsArrDelayed#73, IsDepDelayed#74, id#75L))","children":[{"nodeName":"PhotonWriteStage","simpleString":"PhotonWriteStage","children":[{"nodeName":"PhotonParquetWriter","simpleString":"PhotonParquetWriter [id#75L], [Year#44, Month#45, DayofMonth#46, DayOfWeek#47, DepTime#48, CRSDepTime#49, ArrTime#50, CRSArrTime#51, UniqueCarrier#52, FlightNum#53, TailNum#54, ActualElapsedTime#55, CRSElapsedTime#56, AirTime#57, ArrDelay#58, DepDelay#59, Origin#60, Dest#61, Distance#62, TaxiIn#63, TaxiOut#64, Cancelled#65, CancellationCode#66, Diverted#67, ... 7 more fields]","children":[{"nodeName":"PhotonClustering","simpleString":"PhotonClustering [id#75L]","children":[{"nodeName":"PhotonGlobalLimit","simpleString":"PhotonGlobalLimit 2000","children":[{"nodeName":"PhotonShuffleExchangeSource","simpleString":"PhotonShuffleExchangeSource","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0, Statistics(sizeInBytes=520.1 KiB, rowCount=2.01E+3, ColumnStat: N/A, isRuntime=true)","children":[{"nodeName":"PhotonShuffleMapStage","simpleString":"PhotonShuffleMapStage","children":[{"nodeName":"PhotonShuffleExchangeSink","simpleString":"PhotonShuffleExchangeSink SinglePartition","children":[{"nodeName":"PhotonLocalLimit","simpleString":"PhotonLocalLimit 2000","children":[{"nodeName":"PhotonProject","simpleString":"PhotonProject [Year#44, Month#45, DayofMonth#46, DayOfWeek#47, DepTime#48, CRSDepTime#49, ArrTime#50, CRSArrTime#51, UniqueCarrier#52, FlightNum#53, TailNum#54, ActualElapsedTime#55, CRSElapsedTime#56, AirTime#57, ArrDelay#58, DepDelay#59, Origin#60, Dest#61, Distance#62, TaxiIn#63, TaxiOut#64, Cancelled#65, CancellationCode#66, Diverted#67, ... 8 more fields]","children":[{"nodeName":"PhotonScan parquet hive_metastore.sternp.flights","simpleString":"PhotonScan parquet hive_metastore.sternp.flights[Month#45,DayofMonth#46,DayOfWeek#47,DepTime#48,CRSDepTime#49,ArrTime#50,CRSArrTime#51,UniqueCarrier#52,FlightNum#53,TailNum#54,ActualElapsedTime#55,CRSElapsedTime#56,AirTime#57,ArrDelay#58,DepDelay#59,Origin#60,Dest#61,Distance#62,TaxiIn#63,TaxiOut#64,Cancelled#65,CancellationCode#66,Diverted#67,CarrierDelay#68,... 8 more fields] DataFilters: [], DictionaryFilters: [], Format: parquet, Location: PreparedDeltaFileIndex(1 paths)[dbfs:/home/peter.stern@databricks.com/flights], PartitionFilters: [], ReadSchema: struct<Month:int,DayofMonth:int,DayOfWeek:int,DepTime:string,CRSDepTime:int,ArrTime:string,CRSArr..., RequiredDataFilters: []","children":[],"metadata":{"Location":"PreparedDeltaFileIndex(1 paths)[dbfs:/home/peter.stern@databricks.com/flights]","ReadSchema":"struct<Month:int,DayofMonth:int,DayOfWeek:int,DepTime:string,CRSDepTime:int,ArrTime:string,CRSArrTime:int,UniqueCarrier:string,FlightNum:int,TailNum:string,ActualElapsedTime:string,CRSElapsedTime:int,AirTime:string,ArrDelay:string,DepDelay:string,Origin:string,Dest:string,Distance:string,TaxiIn:string,TaxiOut:string,Cancelled:int,CancellationCode:string,Diverted:int,CarrierDelay:string,WeatherDelay:string,NASDelay:string,SecurityDelay:string,LateAircraftDelay:string,IsArrDelayed:string,IsDepDelayed:string,id:bigint>","Format":"parquet","RequiredDataFilters":"[]","DictionaryFilters":"[]","PartitionFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"executor time CPU","accumulatorId":103,"metricType":"nsTiming","experimental":false},{"name":"driver time - sorting files by size","accumulatorId":145,"metricType":"timing","experimental":false},{"name":"unified cache hits count for ParquetFooter","accumulatorId":172,"metricType":"sum","experimental":false},{"name":"unified cache miss count for ParquetFooter","accumulatorId":175,"metricType":"sum","experimental":false},{"name":"unified cache write bytes for ParquetColumnChunk","accumulatorId":186,"metricType":"size","experimental":false},{"name":"row groups in files to read total","accumulatorId":95,"metricType":"sum","experimental":false},{"name":"cache writes size (uncompressed)","accumulatorId":90,"metricType":"size","experimental":true},{"name":"dictionary filtering - num row groups evaluated","accumulatorId":121,"metricType":"sum","experimental":true},{"name":"data filters - row groups filtered","accumulatorId":113,"metricType":"sum","experimental":false},{"name":"cloud storage response size","accumulatorId":155,"metricType":"size","experimental":false},{"name":"columns with filters","accumulatorId":117,"metricType":"sum","experimental":true},{"name":"executor time CPU - decoding footers","accumulatorId":105,"metricType":"nsTiming","experimental":false},{"name":"files read","accumulatorId":132,"metricType":"sum","experimental":false},{"name":"preferred locations algorithm version","accumulatorId":148,"metricType":"maximum","experimental":false},{"name":"executor time IO wait - file statuses","accumulatorId":127,"metricType":"timing","experimental":false},{"name":"executor time IO wait","accumulatorId":99,"metricType":"nsTiming","experimental":false},{"name":"scanned columns","accumulatorId":140,"metricType":"count","experimental":false},{"name":"size of a row of all columns in the relation (estimated)","accumulatorId":141,"metricType":"size","experimental":false},{"name":"unified cache coalesce count for ParquetColumnChunk","accumulatorId":177,"metricType":"sum","experimental":false},{"name":"executor time CPU - decoding deletion vectors","accumulatorId":108,"metricType":"nsTiming","experimental":false},{"name":"number of deletion vectors read from memory cache","accumulatorId":161,"metricType":"count","experimental":false},{"name":"number of output batches","accumulatorId":76,"metricType":"sum","experimental":false},{"name":"size of row groups before filtering","accumulatorId":94,"metricType":"size","experimental":false},{"name":"unified cache populate time for Range","accumulatorId":191,"metricType":"nsTiming","experimental":false},{"name":"cloud storage retry duration","accumulatorId":159,"metricType":"timing","experimental":false},{"name":"rows scanned","accumulatorId":110,"metricType":"sum","experimental":false},{"name":"executor time IO wait - full files + column data","accumulatorId":101,"metricType":"nsTiming","experimental":false},{"name":"unified cache write bytes for Range","accumulatorId":188,"metricType":"size","experimental":false},{"name":"size of deletion vectors read from disk cache","accumulatorId":168,"metricType":"count","experimental":false},{"name":"unified cache populate time for ParquetFooter","accumulatorId":190,"metricType":"nsTiming","experimental":false},{"name":"cache true misses size (uncompressed)","accumulatorId":86,"metricType":"size","experimental":true},{"name":"unified cache hits count for ParquetColumnChunk","accumulatorId":171,"metricType":"sum","experimental":false},{"name":"executor time CPU - applying data filters","accumulatorId":116,"metricType":"nsTiming","experimental":false},{"name":"columns in the relation","accumulatorId":139,"metricType":"count","experimental":false},{"name":"executor time CPU - cache operations","accumulatorId":93,"metricType":"nsTiming","experimental":false},{"name":"number of deletion vector rows read from disk cache","accumulatorId":165,"metricType":"count","experimental":false},{"name":"data filters - batches skipped","accumulatorId":112,"metricType":"sum","experimental":false},{"name":"cumulative time","accumulatorId":77,"metricType":"nsTiming","experimental":false},{"name":"repeated reads estimated high size","accumulatorId":153,"metricType":"size","experimental":false},{"name":"unified cache serve bytes for Range","accumulatorId":182,"metricType":"size","experimental":false},{"name":"number of deletion vectors read from disk cache","accumulatorId":162,"metricType":"count","experimental":false},{"name":"files pruned","accumulatorId":146,"metricType":"sum","experimental":false},{"name":"size of a row of scanned columns (estimated)","accumulatorId":142,"metricType":"size","experimental":false},{"name":"max partition size chosen","accumulatorId":150,"metricType":"size","experimental":false},{"name":"files missing","accumulatorId":128,"metricType":"sum","experimental":false},{"name":"number of deletion vectors read","accumulatorId":160,"metricType":"count","experimental":false},{"name":"number of non-local (rescheduled) scan tasks","accumulatorId":131,"metricType":"sum","experimental":true},{"name":"cache rescheduled misses size","accumulatorId":87,"metricType":"size","experimental":true},{"name":"rows skipped via stats filtering","accumulatorId":97,"metricType":"sum","experimental":false},{"name":"cloud storage request size","accumulatorId":154,"metricType":"size","experimental":false},{"name":"driver time - list and filter partitions","accumulatorId":133,"metricType":"timing","experimental":false},{"name":"executor time IO wait - deletion vectors","accumulatorId":170,"metricType":"nsTiming","experimental":false},{"name":"size of the smallest file read","accumulatorId":135,"metricType":"size","experimental":false},{"name":"cache rescheduled misses size (uncompressed)","accumulatorId":88,"metricType":"size","experimental":true},{"name":"cache misses size","accumulatorId":83,"metricType":"size","experimental":false},{"name":"columns with filters - dictionary encoded","accumulatorId":118,"metricType":"sum","experimental":true},{"name":"number of local scan tasks","accumulatorId":130,"metricType":"sum","experimental":true},{"name":"size of data read with io requests","accumulatorId":126,"metricType":"size","experimental":true},{"name":"time spent reading deletion vectors","accumulatorId":169,"metricType":"nsTiming","experimental":false},{"name":"row groups read actual","accumulatorId":96,"metricType":"sum","experimental":false},{"name":"size of files read","accumulatorId":134,"metricType":"size","experimental":false},{"name":"cloud storage retry count","accumulatorId":158,"metricType":"count","experimental":false},{"name":"peak reader threads utilized","accumulatorId":125,"metricType":"average","experimental":false},{"name":"size of files pruned","accumulatorId":147,"metricType":"size","experimental":false},{"name":"cloud storage request count","accumulatorId":156,"metricType":"count","experimental":false},{"name":"cloud storage requests to fetch parquet footer","accumulatorId":109,"metricType":"count","experimental":false},{"name":"unified cache coalesce count for Range","accumulatorId":179,"metricType":"sum","experimental":false},{"name":"size of deletion vectors read","accumulatorId":166,"metricType":"count","experimental":false},{"name":"executor time IO wait - footers","accumulatorId":100,"metricType":"nsTiming","experimental":false},{"name":"dictionary filtering - num row groups not evaluated - dictionary size","accumulatorId":122,"metricType":"sum","experimental":true},{"name":"number of deletion vector rows read from memory cache","accumulatorId":164,"metricType":"count","experimental":false},{"name":"unified cache miss count for Range","accumulatorId":176,"metricType":"sum","experimental":false},{"name":"tasks total","accumulatorId":80,"metricType":"sum","experimental":false},{"name":"dictionary filtering - num row groups eligible","accumulatorId":120,"metricType":"sum","experimental":true},{"name":"cache writes stored uncompressed size","accumulatorId":92,"metricType":"size","experimental":true},{"name":"cache hits size","accumulatorId":81,"metricType":"size","experimental":false},{"name":"data filters - rows skipped","accumulatorId":111,"metricType":"sum","experimental":false},{"name":"unified cache read bytes for ParquetColumnChunk","accumulatorId":183,"metricType":"size","experimental":false},{"name":"split size average distribution per node","accumulatorId":137,"metricType":"size","experimental":false},{"name":"number of deletion vector rows read","accumulatorId":163,"metricType":"count","experimental":false},{"name":"number of output rows","accumulatorId":75,"metricType":"sum","experimental":false},{"name":"unified cache read bytes for Range","accumulatorId":185,"metricType":"size","experimental":false},{"name":"the proration factor used","accumulatorId":149,"metricType":"sum","experimental":false},{"name":"unified cache hits count for Range","accumulatorId":173,"metricType":"sum","experimental":false},{"name":"executor time IO wait - Aether metadata","accumulatorId":102,"metricType":"nsTiming","experimental":true},{"name":"unified cache coalesce count for ParquetFooter","accumulatorId":178,"metricType":"sum","experimental":false},{"name":"size of the largest file read","accumulatorId":136,"metricType":"size","experimental":false},{"name":"size of deletion vectors read from memory cache","accumulatorId":167,"metricType":"count","experimental":false},{"name":"cache hits size (uncompressed)","accumulatorId":82,"metricType":"size","experimental":true},{"name":"unified cache serve bytes for ParquetColumnChunk","accumulatorId":180,"metricType":"size","experimental":false},{"name":"max distance between the positions of scanned columns in the relation","accumulatorId":143,"metricType":"count","experimental":false},{"name":"executor time CPU - applying dictionary filters","accumulatorId":119,"metricType":"nsTiming","experimental":false},{"name":"repeated reads estimated low size","accumulatorId":152,"metricType":"size","experimental":false},{"name":"executor time CPU - other","accumulatorId":104,"metricType":"nsTiming","experimental":false},{"name":"row groups skipped via stats filtering","accumulatorId":98,"metricType":"sum","experimental":false},{"name":"files corrupt","accumulatorId":129,"metricType":"sum","experimental":false},{"name":"cache true misses size","accumulatorId":85,"metricType":"size","experimental":true},{"name":"executor time CPU - decompressing pages","accumulatorId":107,"metricType":"nsTiming","experimental":false},{"name":"row groups skipped via lazy materialization","accumulatorId":114,"metricType":"sum","experimental":false},{"name":"cluster's current parallelism ","accumulatorId":151,"metricType":"sum","experimental":false},{"name":"split size relative skew","accumulatorId":138,"metricType":"size","experimental":false},{"name":"unified cache miss count for ParquetColumnChunk","accumulatorId":174,"metricType":"sum","experimental":false},{"name":"cache writes stored compressed size","accumulatorId":91,"metricType":"size","experimental":true},{"name":"cache writes size","accumulatorId":89,"metricType":"size","experimental":true},{"name":"cloud storage request duration","accumulatorId":157,"metricType":"timing","experimental":false},{"name":"num early close","accumulatorId":79,"metricType":"sum","experimental":false},{"name":"unified cache write bytes for ParquetFooter","accumulatorId":187,"metricType":"size","experimental":false},{"name":"cache misses size (uncompressed)","accumulatorId":84,"metricType":"size","experimental":true},{"name":"partitions read","accumulatorId":144,"metricType":"sum","experimental":false},{"name":"exclusive time","accumulatorId":78,"metricType":"nsTiming","experimental":true},{"name":"row groups skipped via dictionary filtering","accumulatorId":123,"metricType":"sum","experimental":false},{"name":"row groups using lazy materialization","accumulatorId":115,"metricType":"sum","experimental":false},{"name":"unified cache serve bytes for ParquetFooter","accumulatorId":181,"metricType":"size","experimental":false},{"name":"unified cache read bytes for ParquetFooter","accumulatorId":184,"metricType":"size","experimental":false},{"name":"executor time CPU - decoding columns","accumulatorId":106,"metricType":"nsTiming","experimental":false},{"name":"unified cache populate time for ParquetColumnChunk","accumulatorId":189,"metricType":"nsTiming","experimental":false},{"name":"peak memory usage","accumulatorId":124,"metricType":"size","experimental":false}],"explainId":1}],"metadata":{},"metrics":[{"name":"number of output batches","accumulatorId":70,"metricType":"sum","experimental":false},{"name":"cumulative time","accumulatorId":71,"metricType":"nsTiming","experimental":false},{"name":"tasks total","accumulatorId":74,"metricType":"sum","experimental":false},{"name":"number of output rows","accumulatorId":69,"metricType":"sum","experimental":false},{"name":"num early close","accumulatorId":73,"metricType":"sum","experimental":false},{"name":"exclusive time","accumulatorId":72,"metricType":"nsTiming","experimental":true}],"explainId":2}],"metadata":{},"metrics":[{"name":"number of output batches","accumulatorId":64,"metricType":"sum","experimental":false},{"name":"cumulative time","accumulatorId":65,"metricType":"nsTiming","experimental":false},{"name":"tasks total","accumulatorId":68,"metricType":"sum","experimental":false},{"name":"number of output rows","accumulatorId":63,"metricType":"sum","experimental":false},{"name":"num early close","accumulatorId":67,"metricType":"sum","experimental":false},{"name":"exclusive time","accumulatorId":66,"metricType":"nsTiming","experimental":true}],"explainId":3}],"metadata":{},"metrics":[{"name":"Maximum size of 3rd varlen key","accumulatorId":52,"metricType":"maximum","experimental":true},{"name":"Minimum size of 3rd varlen key","accumulatorId":51,"metricType":"minimum","experimental":true},{"name":"shuffle checksum expression evaluation time in NS","accumulatorId":62,"metricType":"nsTiming","experimental":false},{"name":"num bytes written","accumulatorId":32,"metricType":"size","experimental":false},{"name":"num uncompressed bytes written","accumulatorId":33,"metricType":"size","experimental":false},{"name":"time taken to sort rows by partition ID (part of shuffle file write)","accumulatorId":44,"metricType":"nsTiming","experimental":false},{"name":"shuffle partitioning type","accumulatorId":59,"metricType":"maximum","experimental":true},{"name":"number of output batches","accumulatorId":27,"metricType":"sum","experimental":false},{"name":"Maximum size of 2nd varlen key","accumulatorId":50,"metricType":"maximum","experimental":true},{"name":"time taken waiting on file write IO (part of shuffle file write)","accumulatorId":45,"metricType":"nsTiming","experimental":false},{"name":"cumulative time","accumulatorId":28,"metricType":"nsTiming","experimental":false},{"name":"time taken to compress data","accumulatorId":46,"metricType":"nsTiming","experimental":false},{"name":"num bytes used for var-len data","accumulatorId":40,"metricType":"size","experimental":false},{"name":"num rows spilled to disk due to memory pressure","accumulatorId":36,"metricType":"sum","experimental":false},{"name":"number of partitions","accumulatorId":58,"metricType":"maximum","experimental":false},{"name":"Maximum size of 1st varlen key","accumulatorId":48,"metricType":"maximum","experimental":true},{"name":"total time spent producing shuffle files","accumulatorId":39,"metricType":"nsTiming","experimental":false},{"name":"time taken to build runtime filter","accumulatorId":54,"metricType":"nsTiming","experimental":false},{"name":"sampling and range boundary calculation time in ns","accumulatorId":60,"metricType":"minimum","experimental":false},{"name":"time taken to accumulate rows","accumulatorId":53,"metricType":"nsTiming","experimental":false},{"name":"num spills to disk due to memory pressure","accumulatorId":37,"metricType":"sum","experimental":false},{"name":"num bytes spilled to disk due to memory pressure","accumulatorId":35,"metricType":"size","experimental":false},{"name":"Minimum size of 1st varlen key","accumulatorId":47,"metricType":"minimum","experimental":true},{"name":"Minimum size of 2nd varlen key","accumulatorId":49,"metricType":"minimum","experimental":true},{"name":"tasks total","accumulatorId":31,"metricType":"sum","experimental":false},{"name":"runtime filter uncompressed output size in bytes","accumulatorId":57,"metricType":"size","experimental":false},{"name":"number of output rows","accumulatorId":26,"metricType":"sum","experimental":false},{"name":"time taken to convert columns to rows (part of shuffle file write)","accumulatorId":42,"metricType":"nsTiming","experimental":false},{"name":"time taken to reserve memory","accumulatorId":43,"metricType":"nsTiming","experimental":false},{"name":"runtime filter compressed output size in bytes","accumulatorId":56,"metricType":"size","experimental":false},{"name":"time for merging spill files in shuffle","accumulatorId":38,"metricType":"nsTiming","experimental":false},{"name":"time taken to convert columns to rows","accumulatorId":41,"metricType":"nsTiming","experimental":false},{"name":"time taken to output runtime filter","accumulatorId":55,"metricType":"nsTiming","experimental":false},{"name":"shuffle partition expression evaluation time","accumulatorId":61,"metricType":"nsTiming","experimental":false},{"name":"num early close","accumulatorId":30,"metricType":"sum","experimental":false},{"name":"exclusive time","accumulatorId":29,"metricType":"nsTiming","experimental":true},{"name":"peak memory usage","accumulatorId":34,"metricType":"size","experimental":false}],"explainId":4}],"metadata":{},"metrics":[{"name":"aos new number of partitions","accumulatorId":22,"metricType":"sum","experimental":false},{"name":"peak memory usage","accumulatorId":18,"metricType":"size","experimental":false},{"name":"aos rule action","accumulatorId":24,"metricType":"sum","experimental":false},{"name":"aos old number of partitions","accumulatorId":21,"metricType":"sum","experimental":false},{"name":"stage duration","accumulatorId":16,"metricType":"timing","experimental":false},{"name":"peak untracked memory usage","accumulatorId":19,"metricType":"size","experimental":false},{"name":"aos shuffle group id","accumulatorId":20,"metricType":"sum","experimental":false},{"name":"stage description size bytes","accumulatorId":17,"metricType":"sum","experimental":false},{"name":"number of output rows","accumulatorId":15,"metricType":"sum","experimental":false},{"name":"aos intended number of partitions","accumulatorId":23,"metricType":"sum","experimental":false},{"name":"marked for OOM fallback","accumulatorId":25,"metricType":"sum","experimental":true}],"explainId":5}],"metadata":{},"metrics":[],"explainId":6}],"metadata":{},"metrics":[{"name":"time taken to decompress data","accumulatorId":320,"metricType":"nsTiming","experimental":false},{"name":"local merged chunks fetched","accumulatorId":332,"metricType":"sum","experimental":false},{"name":"remote merged bytes read","accumulatorId":333,"metricType":"size","experimental":false},{"name":"number of output batches","accumulatorId":313,"metricType":"sum","experimental":false},{"name":"local merged blocks fetched","accumulatorId":330,"metricType":"sum","experimental":false},{"name":"corrupt merged block chunks","accumulatorId":327,"metricType":"sum","experimental":false},{"name":"num bytes read","accumulatorId":318,"metricType":"size","experimental":false},{"name":"remote merged reqs duration","accumulatorId":336,"metricType":"timing","experimental":false},{"name":"remote merged blocks fetched","accumulatorId":329,"metricType":"sum","experimental":false},{"name":"cumulative time","accumulatorId":314,"metricType":"nsTiming","experimental":false},{"name":"local bytes read","accumulatorId":325,"metricType":"size","experimental":false},{"name":"num uncompressed bytes read","accumulatorId":319,"metricType":"size","experimental":false},{"name":"fetch wait time","accumulatorId":326,"metricType":"timing","experimental":false},{"name":"remote bytes read","accumulatorId":323,"metricType":"size","experimental":false},{"name":"merged fetch fallback count","accumulatorId":328,"metricType":"sum","experimental":false},{"name":"tasks total","accumulatorId":317,"metricType":"sum","experimental":false},{"name":"number of output rows","accumulatorId":312,"metricType":"sum","experimental":false},{"name":"local blocks read","accumulatorId":322,"metricType":"sum","experimental":false},{"name":"remote merged chunks fetched","accumulatorId":331,"metricType":"sum","experimental":false},{"name":"remote blocks read","accumulatorId":321,"metricType":"sum","experimental":false},{"name":"num early close","accumulatorId":316,"metricType":"sum","experimental":false},{"name":"local merged bytes read","accumulatorId":334,"metricType":"size","experimental":false},{"name":"exclusive time","accumulatorId":315,"metricType":"nsTiming","experimental":true},{"name":"remote reqs duration","accumulatorId":335,"metricType":"timing","experimental":false},{"name":"remote bytes read to disk","accumulatorId":324,"metricType":"size","experimental":false}],"explainId":7}],"metadata":{},"metrics":[{"name":"number of output batches","accumulatorId":307,"metricType":"sum","experimental":false},{"name":"cumulative time","accumulatorId":308,"metricType":"nsTiming","experimental":false},{"name":"tasks total","accumulatorId":311,"metricType":"sum","experimental":false},{"name":"number of output rows","accumulatorId":306,"metricType":"sum","experimental":false},{"name":"num early close","accumulatorId":310,"metricType":"sum","experimental":false},{"name":"exclusive time","accumulatorId":309,"metricType":"nsTiming","experimental":true}],"explainId":8}],"metadata":{},"metrics":[{"name":"num spill partitions created","accumulatorId":305,"metricType":"sum","experimental":false},{"name":"time in produce","accumulatorId":292,"metricType":"nsTiming","experimental":false},{"name":"num uncompressed bytes spilled","accumulatorId":303,"metricType":"size","experimental":false},{"name":"num hash lookups","accumulatorId":297,"metricType":"sum","experimental":false},{"name":"number of output batches","accumulatorId":286,"metricType":"sum","experimental":false},{"name":"time in hash build","accumulatorId":291,"metricType":"nsTiming","experimental":false},{"name":"cumulative time","accumulatorId":287,"metricType":"nsTiming","experimental":false},{"name":"hashed relation size","accumulatorId":293,"metricType":"size","experimental":false},{"name":"num rows spilled to disk due to memory pressure","accumulatorId":301,"metricType":"sum","experimental":false},{"name":"Number of times hash table was resized","accumulatorId":295,"metricType":"sum","experimental":false},{"name":"num spills to disk due to memory pressure","accumulatorId":300,"metricType":"sum","experimental":false},{"name":"avg hash probes per row","accumulatorId":298,"metricType":"average","experimental":false},{"name":"num bytes spilled to disk due to memory pressure","accumulatorId":302,"metricType":"size","experimental":false},{"name":"tasks total","accumulatorId":290,"metricType":"sum","experimental":false},{"name":"avg hash probe steps per batch","accumulatorId":299,"metricType":"average","experimental":false},{"name":"number of output rows","accumulatorId":285,"metricType":"sum","experimental":false},{"name":"Time spent in resizing hash table","accumulatorId":296,"metricType":"nsTiming","experimental":false},{"name":"num early close","accumulatorId":289,"metricType":"sum","experimental":false},{"name":"exclusive time","accumulatorId":288,"metricType":"nsTiming","experimental":true},{"name":"max spill recursion depth","accumulatorId":304,"metricType":"average","experimental":false},{"name":"peak memory usage","accumulatorId":294,"metricType":"size","experimental":false}],"explainId":9}],"metadata":{},"metrics":[{"name":"column chunks - other encoding","accumulatorId":284,"metricType":"count","experimental":true},{"name":"files written","accumulatorId":269,"metricType":"count","experimental":false},{"name":"scalar fields in parquet schema","accumulatorId":273,"metricType":"maximum","experimental":false},{"name":"executor time CPU - page encoding","accumulatorId":275,"metricType":"nsTiming","experimental":false},{"name":"column chunks - full dictionary encoding","accumulatorId":282,"metricType":"count","experimental":true},{"name":"file size - compressed dictionary pages","accumulatorId":279,"metricType":"size","experimental":true},{"name":"number of output batches","accumulatorId":264,"metricType":"sum","experimental":false},{"name":"column chunks - mixed dictionary and plain encoding","accumulatorId":283,"metricType":"count","experimental":true},{"name":"column chunks - plain encoding","accumulatorId":281,"metricType":"count","experimental":true},{"name":"cumulative time","accumulatorId":265,"metricType":"nsTiming","experimental":false},{"name":"file size - metadata","accumulatorId":280,"metricType":"size","experimental":true},{"name":"executor time CPU - compression","accumulatorId":274,"metricType":"nsTiming","experimental":false},{"name":"page count","accumulatorId":271,"metricType":"count","experimental":false},{"name":"file size","accumulatorId":272,"metricType":"size","experimental":false},{"name":"tasks total","accumulatorId":268,"metricType":"sum","experimental":false},{"name":"number of output rows","accumulatorId":263,"metricType":"sum","experimental":false},{"name":"num early close","accumulatorId":267,"metricType":"sum","experimental":false},{"name":"executor time CPU - compute parquet statistics","accumulatorId":276,"metricType":"nsTiming","experimental":false},{"name":"exclusive time","accumulatorId":266,"metricType":"nsTiming","experimental":true},{"name":"row groups","accumulatorId":270,"metricType":"count","experimental":false},{"name":"file size - compressed data pages","accumulatorId":278,"metricType":"size","experimental":true},{"name":"peak memory usage","accumulatorId":277,"metricType":"size","experimental":false}],"explainId":10}],"metadata":{},"metrics":[{"name":"peak memory usage","accumulatorId":261,"metricType":"size","experimental":false},{"name":"stage duration","accumulatorId":259,"metricType":"timing","experimental":false},{"name":"peak untracked memory usage","accumulatorId":262,"metricType":"size","experimental":false},{"name":"stage description size bytes","accumulatorId":260,"metricType":"sum","experimental":false},{"name":"number of output rows","accumulatorId":258,"metricType":"sum","experimental":false}],"explainId":11}],"metadata":{},"metrics":[{"name":"cloud storage request duration","accumulatorId":249,"metricType":"timing","experimental":false},{"name":"cloud storage response size","accumulatorId":247,"metricType":"size","experimental":false},{"name":"task commit time","accumulatorId":256,"metricType":"timing","experimental":false},{"name":"number of written files","accumulatorId":252,"metricType":"sum","experimental":false},{"name":"cloud storage retry duration","accumulatorId":251,"metricType":"timing","experimental":false},{"name":"job commit time","accumulatorId":257,"metricType":"timing","experimental":false},{"name":"cloud storage request count","accumulatorId":248,"metricType":"count","experimental":false},{"name":"cloud storage request size","accumulatorId":246,"metricType":"size","experimental":false},{"name":"number of output rows","accumulatorId":254,"metricType":"sum","experimental":false},{"name":"number of dynamic part","accumulatorId":255,"metricType":"sum","experimental":false},{"name":"written output","accumulatorId":253,"metricType":"size","experimental":false},{"name":"cloud storage retry count","accumulatorId":250,"metricType":"count","experimental":false}],"explainId":12}],"metadata":{},"metrics":[],"explainId":13}],"metadata":{},"metrics":[],"explainId":25}}
{"Event":"SparkListenerJobStart","Job ID":2,"Submission Time":1710766591612,"Stage Infos":[{"Stage ID":3,"Stage Attempt ID":0,"Stage Name":"collect at TransactionalWriteEdge.scala:669","Number of Tasks":1,"RDD Info":[{"RDD ID":9,"Name":"SQLExecutionRDD","Callsite":"toRdd at TransactionalWriteEdge.scala:669","Parent IDs":[8],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":8,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"spark_plan_182\",\"name\":\"Execute WriteIntoDeltaCommand\"}","Callsite":"$anonfun$withThreadLocalCaptured$5 at LexicalThreadLocal.scala:63","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.rdd.RDD.collect(RDD.scala:1098)\ncom.databricks.sql.transaction.tahoe.files.TransactionalWriteEdge.$anonfun$writeFiles$13(TransactionalWriteEdge.scala:669)\norg.apache.spark.sql.execution.SQLExecution$.$anonfun$withCustomExecutionEnv$8(SQLExecution.scala:283)\norg.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:511)\norg.apache.spark.sql.execution.SQLExecution$.$anonfun$withCustomExecutionEnv$1(SQLExecution.scala:210)\norg.apache.spark.sql.SparkSession.withActive(SparkSession.scala:1138)\norg.apache.spark.sql.execution.SQLExecution$.withCustomExecutionEnv(SQLExecution.scala:153)\norg.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:460)\ncom.databricks.sql.transaction.tahoe.files.TransactionalWriteEdge.$anonfun$writeFiles$1(TransactionalWriteEdge.scala:659)\ncom.databricks.sql.transaction.tahoe.metering.DeltaLogging.withOperationTypeTag(DeltaLogging.scala:196)\ncom.databricks.sql.transaction.tahoe.metering.DeltaLogging.withOperationTypeTag$(DeltaLogging.scala:183)\ncom.databricks.sql.transaction.tahoe.OptimisticTransaction.withOperationTypeTag(OptimisticTransaction.scala:155)\ncom.databricks.sql.transaction.tahoe.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$2(DeltaLogging.scala:160)\ncom.databricks.spark.util.FrameProfiler$.record(FrameProfiler.scala:94)\ncom.databricks.sql.transaction.tahoe.metering.DeltaLogging.recordFrameProfile(DeltaLogging.scala:265)\ncom.databricks.sql.transaction.tahoe.metering.DeltaLogging.recordFrameProfile$(DeltaLogging.scala:263)\ncom.databricks.sql.transaction.tahoe.OptimisticTransaction.recordFrameProfile(OptimisticTransaction.scala:155)\ncom.databricks.sql.transaction.tahoe.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:159)\ncom.databricks.logging.UsageLogging.$anonfun$recordOperation$1(UsageLogging.scala:571)\ncom.databricks.logging.UsageLogging.executeThunkAndCaptureResultTags$1(UsageLogging.scala:666)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[3],"Properties":{"spark.hadoop.fs.idbfs.impl":"com.databricks.io.idbfs.IdbfsFileSystem","spark.databricks.session.share":"false","spark.databricks.repo.gitProvider":"gitHub","spark.hadoop.hive.server2.session.check.interval":"60000","spark.databricks.tahoe.logStore.class":"com.databricks.tahoe.store.DelegatingLogStore","spark.driver.port":"40907","spark.databricks.managedCatalog.clientClassName":"com.databricks.managedcatalog.ManagedCatalogClientImpl","spark.databricks.clusterUsageTags.sparkMasterUrlType":"*********(redacted)","spark.hadoop.fs.cpfs-s3n.impl":"*********(redacted)","spark.databricks.clusterUsageTags.sparkEnvVarContainsSingleQuotes":"false","spark.databricks.clusterUsageTags.clusterCreator":"JobLauncher","spark.databricks.mlflow.autologging.enabled":"true","spark.databricks.clusterUsageTags.enableSqlAclsOnly":"false","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2":"0","spark.sql.sources.default":"delta","spark.databricks.tahoe.logStore.azure.class":"com.databricks.tahoe.store.AzureLogStore","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED --add-opens=java.management/sun.management=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.task.reaper.killTimeout":"60s","spark.hadoop.fs.fcfs-s3.impl":"*********(redacted)","spark.job.interruptOnCancel":"true","spark.hadoop.fs.s3a.max.total.tasks":"1000","spark.databricks.clusterUsageTags.userProvidedRemoteVolumeType":"azure_disk_volume_type: PREMIUM_LRS\n","databricks.operationType":"delta.ddl.createTable,delta.transaction.writeFiles","spark.home":"/databricks/spark","spark.hadoop.fs.s3n.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.databricks.metrics.filesystem_io_metrics":"true","spark.hadoop.fs.stage.impl.disable.cache":"true","spark.hadoop.spark.sql.parquet.output.committer.class":"org.apache.spark.sql.parquet.DirectParquetOutputCommitter","spark.databricks.clusterUsageTags.clusterAvailability":"ON_DEMAND_AZURE","spark.databricks.io.directoryCommit.enableLogicalDelete":"false","spark.app.startTime":"1710765861425","spark.executor.tempDirectory":"/local_disk0/tmp","spark.hadoop.fs.s3a.connection.maximum":"200","spark.databricks.credential.scope.fs.adls.gen2.tokenProviderClassName":"*********(redacted)","spark.databricks.clusterUsageTags.driverInstanceId":"2e1f3e63927947fe9aeb4573a6fc5a61","spark.databricks.autotune.maintenance.client.classname":"com.databricks.maintenanceautocompute.MACClientImpl","spark.databricks.clusterUsageTags.userProvidedSparkVersion":"*********(redacted)","spark.hadoop.fs.gs.impl.disable.cache":"true","spark.databricks.sparkContextId":"7457485797975121240","spark.databricks.workerNodeTypeId":"Standard_DS3_v2","spark.hadoop.databricks.s3.create.deleteUnnecessaryFakeDirectories":"false","spark.databricks.clusterUsageTags.workerEnvironmentId":"workerenv-984752964297111","spark.hadoop.mapreduce.fileoutputcommitter.algorithm.version":"2","spark.databricks.clusterUsageTags.clusterId":"0318-124329-gscyjw0i","spark.databricks.privateLinkEnabled":"false","spark.databricks.service.client.type":"python","spark.databricks.clusterUsageTags.runtimeEngine":"PHOTON","spark.job.description":"spark.table('hive_metastore.sternp.flights').li...","spark.databricks.clusterUsageTags.clusterWorkers":"0","spark.app.id":"local-1710765872285","spark.databricks.clusterUsageTags.enableCredentialPassthrough":"false","spark.extraListeners":"com.databricks.backend.daemon.driver.DBCEventLoggingListener","spark.databricks.passthrough.glue.credentialsProviderFactoryClassName":"*********(redacted)","spark.databricks.cloudfetch.requestDownloadUrlsWithHeaders":"*********(redacted)","spark.databricks.clusterUsageTags.clusterMetastoreAccessType":"RDS_DIRECT","spark.hadoop.parquet.page.verify-checksum.enabled":"true","spark.databricks.repo.relativePath":"DatabricksPerfProfiler/Tests/SituationCreators/WriteManySmallFiles","spark.databricks.job.runId":"1","spark.connect.extensions.command.classes":"io.delta.connect.DeltaCommandPlugin","spark.databricks.clusterUsageTags.driverContainerPrivateIp":"10.139.64.109","spark.driver.tempDirectory":"/local_disk0/tmp","spark.hadoop.fs.wasbs.impl.disable.cache":"true","spark.repl.class.outputDir":"/local_disk0/tmp/repl/spark-7457485797975121240-5f1fb623-2bfe-459a-a7a0-bd065e8f96d1","spark.shuffle.service.enabled":"true","spark.speculation":"false","spark.eventLog.enabled":"false","spark.hadoop.spark.databricks.metrics.filesystem_metrics":"true","spark.hadoop.fs.fcfs-s3n.impl":"*********(redacted)","spark.databricks.clusterUsageTags.enableJdbcAutoStart":"true","spark.sql.hive.metastore.jars":"/databricks/databricks-hive/*","spark.hadoop.fs.cpfs-s3.impl":"*********(redacted)","spark.databricks.clusterUsageTags.attribute_tag_budget":"","spark.databricks.clusterUsageTags.userId":"*********(redacted)","spark.databricks.dataLineage.enabled":"true","spark.hadoop.spark.sql.sources.outputCommitterClass":"com.databricks.backend.daemon.data.client.MapReduceDirectOutputCommitter","spark.databricks.clusterUsageTags.clusterTargetWorkers":"0","spark.hadoop.spark.hadoop.aws.glue.cache.db.size":"1000","spark.hadoop.fs.adl.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.sql.hive.convertCTAS":"true","spark.databricks.passthrough.oauth.refresher.impl":"*********(redacted)","spark.databricks.secret.envVar.keys.toRedact":"*********(redacted)","spark.databricks.clusterUsageTags.containerType":"LXC","spark.databricks.unityCatalog.enabled":"true","spark.ui.prometheus.enabled":"true","spark.worker.cleanup.enabled":"false","spark.sql.hive.convertMetastoreParquet":"true","spark.databricks.unityCatalog.volumes.enabled":"true","spark.hadoop.fs.stage.impl":"com.databricks.backend.daemon.driver.managedcatalog.PersonalStagingFileSystem","spark.hadoop.fs.s3.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.databricks.clusterUsageTags.enableJobsAutostart":"true","spark.hadoop.fs.s3n.impl.disable.cache":"true","spark.hadoop.fs.adl.impl.disable.cache":"true","spark.databricks.cloudfetch.hasRegionSupport":"true","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2S3":"0","spark.hadoop.fs.s3a.fast.upload.active.blocks":"32","spark.hadoop.fs.s3.impl.disable.cache":"true","spark.databricks.sql.configMapperClass":"com.databricks.dbsql.config.SqlConfigMapperBridge","spark.hadoop.databricks.s3commit.client.sslTrustAll":"false","spark.databricks.clusterUsageTags.attribute_tag_dust_maintainer":"","spark.databricks.clusterUsageTags.instanceWorkerEnvNetworkType":"default","spark.databricks.replId":"ReplId-2f10f-b0824-12097","spark.databricks.clusterUsageTags.clusterSpotBidMaxPrice":"-1.0","spark.databricks.clusterUsageTags.userProvidedRemoteVolumeCount":"0","spark.r.backendConnectionTimeout":"604800","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2File":"0","spark.databricks.unityCatalog.queryFederation.enabled":"true","spark.driver.maxResultSize":"4g","spark.hadoop.parquet.memory.pool.ratio":"0.5","spark.databricks.clusterUsageTags.driverNodeType":"Standard_DS3_v2","spark.sql.catalogImplementation":"hive","spark.databricks.clusterUsageTags.clusterGeneration":"0","spark.databricks.repo.gitReferenceType":"branch","spark.databricks.wsfs.workspacePrivatePreview":"true","spark.databricks.clusterUsageTags.isSingleUserCluster":"true","user":"peter.stern@databricks.com","spark.databricks.passthrough.adls.tokenProviderClassName":"*********(redacted)","spark.databricks.acl.scim.client":"com.databricks.spark.sql.acl.client.DriverToWebappScimClient","spark.databricks.unityCatalog.credentialManager.apiTokenProviderClassName":"*********(redacted)","spark.databricks.clusterUsageTags.isServicePrincipalCluster":"false","spark.sql.warehouse.dir":"dbfs:/user/hive/warehouse","spark.logConf":"true","spark.hadoop.parquet.block.size.row.check.min":"10","spark.databricks.service.dbutils.repl.backend":"com.databricks.dbconnect.ReplDBUtils","spark.databricks.enablePublicDbfsFuse":"false","spark.hadoop.fs.abfss.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.hadoop.fs.wasb.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.databricks.clusterUsageTags.cloudProvider":"Azure","spark.hadoop.hive.server2.thrift.http.port":"10000","spark.databricks.clusterUsageTags.clusterLogDeliveryEnabled":"false","spark.shuffle.manager":"SORT","spark.hadoop.hive.server2.keystore.password":"*********(redacted)","spark.databricks.acl.provider":"com.databricks.sql.acl.ReflectionBackedAclProvider","spark.databricks.clusterUsageTags.enableElasticDisk":"true","spark.hadoop.parquet.abfs.readahead.optimization.enabled":"true","spark.hadoop.spark.hadoop.aws.glue.cache.table.ttl-mins":"30","spark.databricks.repo.gitReference":"master","orgId":"984752964297111","spark.databricks.eventLog.listenerClassName":"com.databricks.backend.daemon.driver.DBCEventLoggingListener","spark.databricks.clusterUsageTags.clusterStateMessage":"Starting Spark","spark.databricks.clusterUsageTags.sparkVersion":"13.3.x-photon-scala2.12","spark.databricks.clusterUsageTags.hailEnabled":"false","spark.databricks.unityCatalog.legacy.enableCrossScopeCredCache":"true","spark.sql.streaming.checkpointFileManagerClass":"com.databricks.spark.sql.streaming.DatabricksCheckpointFileManager","spark.databricks.clusterUsageTags.numPerGlobalInitScriptsV2":"2","spark.databricks.clusterUsageTags.userProvidedRemoteVolumeSizeGb":"0","spark.hadoop.fs.wasbs.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.hadoop.fs.file.impl":"com.databricks.backend.daemon.driver.WorkspaceLocalFileSystem","spark.hadoop.hive.warehouse.subdir.inherit.perms":"false","spark.databricks.unityCatalog.volumes.fuse.server.enabled":"true","spark.speculation.multiplier":"3","spark.databricks.clusterUsageTags.clusterPythonVersion":"3","spark.databricks.clusterUsageTags.ngrokNpipEnabled":"false","spark.databricks.unityCatalog.credentialScope.enabled":"*********(redacted)","spark.hadoop.hive.server2.thrift.http.cookie.auth.enabled":"false","spark.databricks.job.type":"notebook","spark.databricks.pipelines.analysisId":"DLTAnalysisID-48aeb-dd3cb-17f18-c","spark.storage.memoryFraction":"0.5","spark.r.numRBackendThreads":"1","spark.databricks.inherited.credentials.keys.spark.databricks.api.token":"*********(redacted)","spark.databricks.unityCatalog.enforce.permissions":"false","spark.hadoop.hive.server2.idle.operation.timeout":"7200000","spark.hadoop.hive.server2.transport.mode":"http","spark.hadoop.spark.hadoop.aws.glue.cache.db.ttl-mins":"30","spark.databricks.notebook.path":"/Repos/peter.stern@databricks.com/DB_Projects/DatabricksPerfProfiler/Tests/SituationCreators/WriteManySmallFiles","spark.databricks.tahoe.logStore.aws.class":"com.databricks.tahoe.store.MultiClusterLogStore","spark.hadoop.fs.s3a.fast.upload.default":"true","spark.databricks.driver.preferredMavenCentralMirrorUrl":"*********(redacted)","spark.master":"local[*, 4]","spark.databricks.clusterUsageTags.sparkEnvVarContainsNewline":"false","spark.databricks.execution.rootSqlExecutionId":"0","spark.files.fetchFailure.unRegisterOutputOnHost":"true","spark.hadoop.fs.s3a.retry.throttle.interval":"500ms","spark.sql.allowMultipleContexts":"false","spark.databricks.sql.initial.catalog.name":"hive_metastore","spark.databricks.clusterUsageTags.privateLinkEnabled":"false","spark.hadoop.fs.s3a.fast.upload":"true","spark.databricks.repo.gitUrl":"*********(redacted)","spark.databricks.secret.sparkConf.keys.toRedact":"*********(redacted)","NFS_REPL_TEMP_DIR":"/local_disk0/.ephemeral_nfs/repl_tmp_data/ReplId-2f10f-b0824-12097","spark.executor.memory":"1821m","spark.hadoop.fs.azure.user.agent.prefix":"*********(redacted)","spark.executor.id":"driver","spark.worker.aioaLazyConfig.iamReadinessCheckClientClass":"com.databricks.backend.daemon.driver.NephosIamRoleCheckClient","spark.hadoop.fs.s3a.retry.interval":"250ms","spark.rpc.message.maxSize":"256","spark.databricks.token":"*********(redacted)","spark.databricks.clusterUsageTags.clusterLogDestination":"","spark.scheduler.listenerbus.eventqueue.capacity":"20000","spark.hadoop.databricks.loki.fileSystemCache.enabled":"true","spark.databricks.env":"databricks-python-repl-ipykernel","spark.hadoop.parquet.page.size.check.estimate":"false","spark.databricks.repo.gitCommit":"0170971fba0ecfeb97e0b199a6c9db9da10b5b06","spark.hadoop.hive.server2.keystore.path":"/databricks/keys/jetty-ssl-driver-keystore.jks","spark.streaming.driver.writeAheadLog.closeFileAfterWrite":"true","spark.rdd.scope.noOverride":"true","spark.databricks.wsfsPublicPreview":"true","spark.sql.execution.parent":"0","spark.rdd.compress":"true","spark.hadoop.mapred.output.committer.class":"com.databricks.backend.daemon.data.client.DirectOutputCommitter","spark.storage.blockManagerTimeoutIntervalMs":"300000","spark.databricks.driverNodeTypeId":"Standard_DS3_v2","spark.hadoop.fs.azure.skip.metrics":"true","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2Workspace":"0","spark.hadoop.hive.hmshandler.retry.attempts":"10","spark.databricks.eventLog.dir":"eventlogs","spark.hadoop.fs.fcfs-wasb.impl":"*********(redacted)","spark.hadoop.fs.gs.outputstream.upload.chunk.size":"16777216","spark.hadoop.spark.driverproxy.customHeadersToProperties":"*********(redacted)","spark.databricks.automl.serviceEnabled":"true","spark.databricks.clusterUsageTags.sparkEnvVarContainsDoubleQuotes":"false","spark.databricks.credential.scope.fs.gs.auth.access.tokenProviderClassName":"*********(redacted)","spark.akka.frameSize":"256","spark.databricks.passthrough.s3a.tokenProviderClassName":"*********(redacted)","spark.databricks.delta.multiClusterWrites.enabled":"true","spark.hadoop.fs.fcfs-s3n.impl.disable.cache":"true","spark.databricks.clusterUsageTags.attribute_tag_dust_execution_env":"","spark.hadoop.fs.AbstractFileSystem.gs.impl":"shaded.databricks.com.google.cloud.hadoop.fs.gcs.GoogleHadoopFS","spark.databricks.clusterUsageTags.sparkImageLabel":"release__13.3.x-snapshot-photon-scala2.12__databricks-universe__13.3.12__ca78acd__818fc34__jenkins__8ed39b5__format-3","spark.serializer.objectStreamReset":"100","spark.hadoop.fs.abfs.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.databricks.clusterUsageTags.sparkEnvVarContainsEscape":"false","spark.sparkr.use.daemon":"false","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2Abfss":"0","spark.databricks.clusterUsageTags.clusterFirstOnDemand":"1","spark.files.useFetchCache":"false","spark.sql.hive.metastore.version":"0.13.0","spark.databricks.clusterUsageTags.driverPublicDns":"172.172.18.43","spark.databricks.clusterUsageTags.clusterNumCustomTags":"1","spark.databricks.clusterUsageTags.clusterName":"job-890396008853692-run-304417810497226-Job_cluster","spark.sql.hive.metastore.sharedPrefixes":"org.mariadb.jdbc,com.mysql.jdbc,org.postgresql,com.microsoft.sqlserver,microsoft.sql.DateTimeOffset,microsoft.sql.Types,com.databricks,com.codahale,com.fasterxml.jackson,shaded.databricks","spark.databricks.clusterUsageTags.clusterNumSshKeys":"0","spark.hadoop.fs.s3a.attempts.maximum":"10","spark.databricks.clusterUsageTags.orgId":"984752964297111","spark.memory.offHeap.enabled":"true","spark.databricks.redactor":"com.databricks.spark.util.DatabricksSparkLogRedactorProxy","spark.hadoop.fs.s3a.block.size":"67108864","spark.hadoop.hive.server2.enable.doAs":"false","spark.databricks.clusterUsageTags.sparkEnvVarContainsDollarSign":"false","spark.databricks.clusterUsageTags.clusterResourceClass":"SingleNode","spark.hadoop.hive.server2.idle.session.timeout":"900000","spark.hadoop.fs.abfs.impl.disable.cache":"true","spark.hadoop.fs.fcfs-abfss.impl.disable.cache":"true","spark.databricks.clusterUsageTags.autoTerminationMinutes":"0","spark.databricks.clusterUsageTags.attribute_tag_dust_suite":"","spark.databricks.passthrough.glue.executorServiceFactoryClassName":"*********(redacted)","spark.databricks.clusterUsageTags.enableDfAcls":"false","spark.hadoop.parquet.block.size.row.check.max":"10","spark.databricks.clusterUsageTags.driverInstancePrivateIp":"10.139.0.130","spark.databricks.clusterSource":"JOB","spark.hadoop.fs.cpfs-abfss.impl":"*********(redacted)","spark.hadoop.fs.s3a.connection.timeout":"50000","spark.hadoop.fs.cpfs-adl.impl.disable.cache":"true","spark.hadoop.fs.fcfs-abfs.impl.disable.cache":"true","spark.databricks.clusterUsageTags.region":"eastus2","spark.ui.port":"40001","spark.sql.parquet.compression.codec":"snappy","spark.databricks.workspaceUrl":"*********(redacted)","spark.hadoop.fs.abfss.impl.disable.cache":"true","spark.hadoop.parquet.filter.columnindex.enabled":"false","spark.sql.execution.id":"2","spark.databricks.passthrough.adls.gen2.tokenProviderClassName":"*********(redacted)","spark.hadoop.hive.hmshandler.retry.interval":"2000","spark.hadoop.fs.cpfs-abfss.impl.disable.cache":"true","spark.hadoop.fs.mlflowdbfs.impl":"com.databricks.mlflowdbfs.MlflowdbfsFileSystem","spark.databricks.acl.client":"com.databricks.spark.sql.acl.client.SparkSqlAclClient","spark.databricks.clusterUsageTags.dataPlaneRegion":"eastus2","spark.databricks.clusterUsageTags.clusterOwnerUserId":"5246238868874017","spark.streaming.driver.writeAheadLog.allowBatching":"true","spark.databricks.repo.gitStatus":"unknown","spark.databricks.clusterUsageTags.enableLocalDiskEncryption":"false","spark.hadoop.fs.azure.authorization.caching.enable":"false","spark.databricks.credential.scope.fs.s3a.tokenProviderClassName":"*********(redacted)","spark.hadoop.hive.server2.use.SSL":"true","spark.hadoop.fs.s3a.threads.max":"136","spark.repl.class.uri":"spark://10.139.64.109:40907/classes","spark.databricks.overrideDefaultCommitProtocol":"org.apache.spark.sql.execution.datasources.SQLHadoopMapReduceCommitProtocol","spark.databricks.optimizer.optimizeLimit.maxLimit":"10001","spark.driver.host":"10.139.64.109","spark.driver.allowMultipleContexts":"false","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2Gcs":"0","spark.databricks.driverNfs.enabled":"true","spark.hadoop.parquet.page.metadata.validation.enabled":"true","spark.hadoop.fs.fcfs-abfs.impl":"*********(redacted)","spark.hadoop.fs.s3a.multipart.size":"10485760","spark.databricks.delta.logStore.crossCloud.fatal":"true","spark.hadoop.fs.fcfs-s3a.impl":"*********(redacted)","spark.task.reaper.enabled":"true","spark.databricks.clusterUsageTags.clusterNodeType":"Standard_DS3_v2","spark.databricks.cloudProvider":"Azure","spark.databricks.clusterUsageTags.instanceWorkerEnvId":"workerenv-984752964297111","spark.databricks.inherited.credentials.keys.spark.databricks.uc.api.token":"*********(redacted)","spark.databricks.sessionUUID":"2e4750ec-4ceb-4548-95f6-b2c5a9a83e54","spark.databricks.cluster.profile":"singleNode","spark.shuffle.memoryFraction":"0.2","spark.databricks.clusterUsageTags.clusterScalingType":"fixed_size","spark.hadoop.fs.fcfs-s3.impl.disable.cache":"true","spark.hadoop.fs.dbfsartifacts.impl":"com.databricks.backend.daemon.data.client.DBFSV1","spark.databricks.credential.redactor":"*********(redacted)","spark.databricks.clusterUsageTags.isDpCpPrivateLinkEnabled":"false","spark.app.name":"Databricks Shell","spark.databricks.clusterUsageTags.clusterSku":"STANDARD_SKU","spark.hadoop.fs.azure.cache.invalidator.type":"com.databricks.encryption.utils.CacheInvalidatorImpl","spark.metrics.conf":"/databricks/spark/conf/metrics.properties","spark.databricks.workload.name":"JobRun","spark.sql.streaming.stopTimeout":"15s","spark.hadoop.fs.s3a.assumed.role.credentials.provider":"*********(redacted)","spark.delta.sharing.profile.provider.class":"*********(redacted)","spark.hadoop.spark.databricks.io.parquet.verifyChecksumOnWrite.enabled":"false","spark.files.overwrite":"true","spark.databricks.tahoe.logStore.gcp.class":"com.databricks.tahoe.store.GCPLogStore","spark.databricks.credential.scope.fs.impl":"*********(redacted)","spark.hadoop.spark.databricks.io.parquet.verifyChecksumOnWrite.throwsException":"false","spark.databricks.passthrough.s3a.threadPoolExecutor.factory.class":"com.databricks.backend.daemon.driver.aws.S3APassthroughThreadPoolExecutorFactory","spark.hadoop.fs.s3a.retry.limit":"6","spark.databricks.preemption.enabled":"true","spark.hadoop.fs.gs.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.hadoop.fs.dbfs.impl":"com.databricks.backend.daemon.data.client.DbfsHadoop3","spark.databricks.clusterUsageTags.enableGlueCatalogCredentialPassthrough":"*********(redacted)","spark.shuffle.reduceLocality.enabled":"false","spark.databricks.repl.enableClassFileCleanup":"true","spark.hadoop.fs.s3a.multipart.threshold":"104857600","spark.hadoop.fs.fcfs-abfss.impl":"*********(redacted)","spark.sparklyr-backend.threads":"1","spark.hadoop.fs.fcfs-wasbs.impl.disable.cache":"true","spark.databricks.clusterUsageTags.ignoreTerminationEventInAlerting":"false","spark.hadoop.databricks.fs.perfMetrics.enable":"true","spark.databricks.eventLog.enabled":"true","spark.databricks.clusterUsageTags.managedResourceGroup":"databricks-rg-field-eng-east-fg2bkkcjf6sio","spark.databricks.isShieldWorkspace":"false","spark.rdd.scope":"{\"id\":\"15\",\"name\":\"collect\"}","spark.hadoop.spark.hadoop.aws.glue.cache.table.size":"1000","spark.databricks.api.url":"https://eastus2.azuredatabricks.net","spark.databricks.inherited.spark.databricks.api.url":"*********(redacted)","spark.hadoop.fs.fcfs-wasbs.impl":"*********(redacted)","spark.databricks.clusterUsageTags.clusterPinned":"false","spark.speculation.quantile":"0.9","spark.databricks.job.id":"347682096904605","spark.hadoop.fs.cpfs-s3a.impl":"*********(redacted)","spark.hadoop.fs.cpfs-adl.impl":"*********(redacted)","userId":"5246238868874017","spark.hadoop.fs.wasb.impl.disable.cache":"true","spark.sql.legacy.createHiveTableByDefault":"false","spark.scheduler.mode":"FAIR","spark.shuffle.service.port":"4048","spark.databricks.qpl.queryId":"e5e2aed6-6887-4dad-a04a-d2d58e206ab9","spark.databricks.clusterUsageTags.isIMv2Enabled":"false","spark.hadoop.fs.fcfs-wasb.impl.disable.cache":"true","spark.hadoop.databricks.s3.verifyBucketExists.enabled":"false","spark.databricks.driverNfs.pathSuffix":".ephemeral_nfs","spark.sql.sources.commitProtocolClass":"com.databricks.sql.transaction.directory.DirectoryAtomicCommitProtocol","spark.hadoop.fs.s3a.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.databricks.driverNfs.clusterWidePythonLibsEnabled":"true","spark.connect.extensions.relation.classes":"io.delta.connect.DeltaRelationPlugin","spark.scheduler.pool":"211967908237090967","spark.hadoop.databricks.loki.fileStatusCache.enabled":"true","spark.databricks.unityCatalog.credentialManager.tokenRefreshEnabled":"*********(redacted)","spark.memory.offHeap.size":"5728370688","spark.databricks.clusterUsageTags.azureSubscriptionId":"3f2e4d32-8e8d-46d6-82bc-5bb8d962328b","spark.databricks.clusterUsageTags.clusterNoDriverDaemon":"false","spark.databricks.clusterUsageTags.clusterState":"Pending","spark.sql.parquet.cacheMetadata":"true","spark.databricks.clusterUsageTags.clusterSizeType":"VM_CONTAINER","spark.databricks.clusterUsageTags.effectiveSparkVersion":"13.3.x-photon-scala2.12","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2Dbfs":"0","spark.databricks.clusterUsageTags.driverContainerId":"9bd75d2b8a2e4069b9dcc6ad3dabdc25","spark.worker.aioaLazyConfig.dbfsReadinessCheckClientClass":"com.databricks.backend.daemon.driver.NephosDbfsReadinessCheckClient","spark.databricks.clusterUsageTags.clusterUnityCatalogMode":"*********(redacted)","spark.databricks.clusterUsageTags.clusterAllTags":"[{\"key\":\"ResourceClass\",\"value\":\"SingleNode\"},{\"key\":\"Vendor\",\"value\":\"Databricks\"},{\"key\":\"Creator\",\"value\":\"peter.stern@databricks.com\"},{\"key\":\"ClusterName\",\"value\":\"job-890396008853692-run-304417810497226-Job_cluster\"},{\"key\":\"ClusterId\",\"value\":\"0318-124329-gscyjw0i\"},{\"key\":\"JobId\",\"value\":\"890396008853692\"},{\"key\":\"RunName\",\"value\":\"WriteManySmallFiles\"},{\"key\":\"owner\",\"value\":\"kyle@databricks.com\"},{\"key\":\"DatabricksEnvironment\",\"value\":\"workerenv-984752964297111\"}]","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2Volumes":"0","spark.hadoop.parquet.page.write-checksum.enabled":"true","spark.plugins":"org.apache.spark.sql.connect.SparkConnectPlugin","spark.cleaner.referenceTracking.blocking":"false","spark.hadoop.databricks.dbfs.client.version":"v2","spark.hadoop.fs.fcfs-s3a.impl.disable.cache":"true","spark.databricks.clusterUsageTags.attribute_tag_service":"","spark.databricks.cloudfetch.requesterClassName":"*********(redacted)","spark.databricks.clusterUsageTags.clusterOwnerOrgId":"984752964297111","spark.jobGroup.id":"211967908237090967_7868666602381424818_job-347682096904605-run-1-action-6933310957083977","spark.databricks.workload.id":"984752964297111-347682096904605-1","spark.databricks.service.dbutils.server.backend":"com.databricks.dbconnect.SparkServerDBUtils","spark.hadoop.fs.s3a.impl.disable.cache":"true","spark.databricks.clusterUsageTags.sparkEnvVarContainsBacktick":"false","spark.databricks.credential.aws.secretKey.redactor":"*********(redacted)"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":3,"Stage Attempt ID":0,"Stage Name":"collect at TransactionalWriteEdge.scala:669","Number of Tasks":1,"RDD Info":[{"RDD ID":9,"Name":"SQLExecutionRDD","Callsite":"toRdd at TransactionalWriteEdge.scala:669","Parent IDs":[8],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":8,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"spark_plan_182\",\"name\":\"Execute WriteIntoDeltaCommand\"}","Callsite":"$anonfun$withThreadLocalCaptured$5 at LexicalThreadLocal.scala:63","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.rdd.RDD.collect(RDD.scala:1098)\ncom.databricks.sql.transaction.tahoe.files.TransactionalWriteEdge.$anonfun$writeFiles$13(TransactionalWriteEdge.scala:669)\norg.apache.spark.sql.execution.SQLExecution$.$anonfun$withCustomExecutionEnv$8(SQLExecution.scala:283)\norg.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:511)\norg.apache.spark.sql.execution.SQLExecution$.$anonfun$withCustomExecutionEnv$1(SQLExecution.scala:210)\norg.apache.spark.sql.SparkSession.withActive(SparkSession.scala:1138)\norg.apache.spark.sql.execution.SQLExecution$.withCustomExecutionEnv(SQLExecution.scala:153)\norg.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:460)\ncom.databricks.sql.transaction.tahoe.files.TransactionalWriteEdge.$anonfun$writeFiles$1(TransactionalWriteEdge.scala:659)\ncom.databricks.sql.transaction.tahoe.metering.DeltaLogging.withOperationTypeTag(DeltaLogging.scala:196)\ncom.databricks.sql.transaction.tahoe.metering.DeltaLogging.withOperationTypeTag$(DeltaLogging.scala:183)\ncom.databricks.sql.transaction.tahoe.OptimisticTransaction.withOperationTypeTag(OptimisticTransaction.scala:155)\ncom.databricks.sql.transaction.tahoe.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$2(DeltaLogging.scala:160)\ncom.databricks.spark.util.FrameProfiler$.record(FrameProfiler.scala:94)\ncom.databricks.sql.transaction.tahoe.metering.DeltaLogging.recordFrameProfile(DeltaLogging.scala:265)\ncom.databricks.sql.transaction.tahoe.metering.DeltaLogging.recordFrameProfile$(DeltaLogging.scala:263)\ncom.databricks.sql.transaction.tahoe.OptimisticTransaction.recordFrameProfile(OptimisticTransaction.scala:155)\ncom.databricks.sql.transaction.tahoe.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:159)\ncom.databricks.logging.UsageLogging.$anonfun$recordOperation$1(UsageLogging.scala:571)\ncom.databricks.logging.UsageLogging.executeThunkAndCaptureResultTags$1(UsageLogging.scala:666)","Submission Time":1710766591620,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.hadoop.fs.idbfs.impl":"com.databricks.io.idbfs.IdbfsFileSystem","spark.databricks.session.share":"false","spark.databricks.repo.gitProvider":"gitHub","spark.hadoop.hive.server2.session.check.interval":"60000","spark.databricks.tahoe.logStore.class":"com.databricks.tahoe.store.DelegatingLogStore","spark.driver.port":"40907","spark.databricks.managedCatalog.clientClassName":"com.databricks.managedcatalog.ManagedCatalogClientImpl","spark.databricks.clusterUsageTags.sparkMasterUrlType":"*********(redacted)","spark.hadoop.fs.cpfs-s3n.impl":"*********(redacted)","spark.databricks.clusterUsageTags.sparkEnvVarContainsSingleQuotes":"false","spark.databricks.clusterUsageTags.clusterCreator":"JobLauncher","spark.databricks.mlflow.autologging.enabled":"true","spark.databricks.clusterUsageTags.enableSqlAclsOnly":"false","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2":"0","spark.sql.sources.default":"delta","spark.databricks.tahoe.logStore.azure.class":"com.databricks.tahoe.store.AzureLogStore","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED --add-opens=java.management/sun.management=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.task.reaper.killTimeout":"60s","spark.hadoop.fs.fcfs-s3.impl":"*********(redacted)","spark.job.interruptOnCancel":"true","spark.hadoop.fs.s3a.max.total.tasks":"1000","spark.databricks.clusterUsageTags.userProvidedRemoteVolumeType":"azure_disk_volume_type: PREMIUM_LRS\n","databricks.operationType":"delta.ddl.createTable,delta.transaction.writeFiles","spark.home":"/databricks/spark","spark.hadoop.fs.s3n.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.databricks.metrics.filesystem_io_metrics":"true","spark.hadoop.fs.stage.impl.disable.cache":"true","spark.hadoop.spark.sql.parquet.output.committer.class":"org.apache.spark.sql.parquet.DirectParquetOutputCommitter","spark.databricks.clusterUsageTags.clusterAvailability":"ON_DEMAND_AZURE","spark.databricks.io.directoryCommit.enableLogicalDelete":"false","spark.app.startTime":"1710765861425","spark.executor.tempDirectory":"/local_disk0/tmp","spark.hadoop.fs.s3a.connection.maximum":"200","spark.databricks.credential.scope.fs.adls.gen2.tokenProviderClassName":"*********(redacted)","spark.databricks.clusterUsageTags.driverInstanceId":"2e1f3e63927947fe9aeb4573a6fc5a61","spark.databricks.autotune.maintenance.client.classname":"com.databricks.maintenanceautocompute.MACClientImpl","spark.databricks.clusterUsageTags.userProvidedSparkVersion":"*********(redacted)","spark.hadoop.fs.gs.impl.disable.cache":"true","spark.databricks.sparkContextId":"7457485797975121240","spark.databricks.workerNodeTypeId":"Standard_DS3_v2","spark.hadoop.databricks.s3.create.deleteUnnecessaryFakeDirectories":"false","spark.databricks.clusterUsageTags.workerEnvironmentId":"workerenv-984752964297111","spark.hadoop.mapreduce.fileoutputcommitter.algorithm.version":"2","spark.databricks.clusterUsageTags.clusterId":"0318-124329-gscyjw0i","spark.databricks.privateLinkEnabled":"false","spark.databricks.service.client.type":"python","spark.databricks.clusterUsageTags.runtimeEngine":"PHOTON","spark.job.description":"spark.table('hive_metastore.sternp.flights').li...","spark.databricks.clusterUsageTags.clusterWorkers":"0","spark.app.id":"local-1710765872285","spark.databricks.clusterUsageTags.enableCredentialPassthrough":"false","spark.extraListeners":"com.databricks.backend.daemon.driver.DBCEventLoggingListener","spark.databricks.passthrough.glue.credentialsProviderFactoryClassName":"*********(redacted)","spark.databricks.cloudfetch.requestDownloadUrlsWithHeaders":"*********(redacted)","spark.databricks.clusterUsageTags.clusterMetastoreAccessType":"RDS_DIRECT","spark.hadoop.parquet.page.verify-checksum.enabled":"true","spark.databricks.repo.relativePath":"DatabricksPerfProfiler/Tests/SituationCreators/WriteManySmallFiles","spark.databricks.job.runId":"1","spark.connect.extensions.command.classes":"io.delta.connect.DeltaCommandPlugin","spark.databricks.clusterUsageTags.driverContainerPrivateIp":"10.139.64.109","spark.driver.tempDirectory":"/local_disk0/tmp","spark.hadoop.fs.wasbs.impl.disable.cache":"true","spark.repl.class.outputDir":"/local_disk0/tmp/repl/spark-7457485797975121240-5f1fb623-2bfe-459a-a7a0-bd065e8f96d1","spark.shuffle.service.enabled":"true","spark.speculation":"false","spark.eventLog.enabled":"false","spark.hadoop.spark.databricks.metrics.filesystem_metrics":"true","spark.hadoop.fs.fcfs-s3n.impl":"*********(redacted)","spark.databricks.clusterUsageTags.enableJdbcAutoStart":"true","spark.sql.hive.metastore.jars":"/databricks/databricks-hive/*","spark.hadoop.fs.cpfs-s3.impl":"*********(redacted)","spark.databricks.clusterUsageTags.attribute_tag_budget":"","spark.databricks.clusterUsageTags.userId":"*********(redacted)","spark.databricks.dataLineage.enabled":"true","spark.hadoop.spark.sql.sources.outputCommitterClass":"com.databricks.backend.daemon.data.client.MapReduceDirectOutputCommitter","spark.databricks.clusterUsageTags.clusterTargetWorkers":"0","spark.hadoop.spark.hadoop.aws.glue.cache.db.size":"1000","spark.hadoop.fs.adl.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.sql.hive.convertCTAS":"true","spark.databricks.passthrough.oauth.refresher.impl":"*********(redacted)","spark.databricks.secret.envVar.keys.toRedact":"*********(redacted)","spark.databricks.clusterUsageTags.containerType":"LXC","spark.databricks.unityCatalog.enabled":"true","spark.ui.prometheus.enabled":"true","spark.worker.cleanup.enabled":"false","spark.sql.hive.convertMetastoreParquet":"true","spark.databricks.unityCatalog.volumes.enabled":"true","spark.hadoop.fs.stage.impl":"com.databricks.backend.daemon.driver.managedcatalog.PersonalStagingFileSystem","spark.hadoop.fs.s3.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.databricks.clusterUsageTags.enableJobsAutostart":"true","spark.hadoop.fs.s3n.impl.disable.cache":"true","spark.hadoop.fs.adl.impl.disable.cache":"true","spark.databricks.cloudfetch.hasRegionSupport":"true","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2S3":"0","spark.hadoop.fs.s3a.fast.upload.active.blocks":"32","spark.hadoop.fs.s3.impl.disable.cache":"true","spark.databricks.sql.configMapperClass":"com.databricks.dbsql.config.SqlConfigMapperBridge","spark.hadoop.databricks.s3commit.client.sslTrustAll":"false","spark.databricks.clusterUsageTags.attribute_tag_dust_maintainer":"","spark.databricks.clusterUsageTags.instanceWorkerEnvNetworkType":"default","spark.databricks.replId":"ReplId-2f10f-b0824-12097","spark.databricks.clusterUsageTags.clusterSpotBidMaxPrice":"-1.0","spark.databricks.clusterUsageTags.userProvidedRemoteVolumeCount":"0","spark.r.backendConnectionTimeout":"604800","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2File":"0","spark.databricks.unityCatalog.queryFederation.enabled":"true","spark.driver.maxResultSize":"4g","spark.hadoop.parquet.memory.pool.ratio":"0.5","spark.databricks.clusterUsageTags.driverNodeType":"Standard_DS3_v2","spark.sql.catalogImplementation":"hive","spark.databricks.clusterUsageTags.clusterGeneration":"0","spark.databricks.repo.gitReferenceType":"branch","spark.databricks.wsfs.workspacePrivatePreview":"true","spark.databricks.clusterUsageTags.isSingleUserCluster":"true","user":"peter.stern@databricks.com","spark.databricks.passthrough.adls.tokenProviderClassName":"*********(redacted)","spark.databricks.acl.scim.client":"com.databricks.spark.sql.acl.client.DriverToWebappScimClient","spark.databricks.unityCatalog.credentialManager.apiTokenProviderClassName":"*********(redacted)","spark.databricks.clusterUsageTags.isServicePrincipalCluster":"false","spark.sql.warehouse.dir":"dbfs:/user/hive/warehouse","spark.logConf":"true","spark.hadoop.parquet.block.size.row.check.min":"10","spark.databricks.service.dbutils.repl.backend":"com.databricks.dbconnect.ReplDBUtils","spark.databricks.enablePublicDbfsFuse":"false","spark.hadoop.fs.abfss.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.hadoop.fs.wasb.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.databricks.clusterUsageTags.cloudProvider":"Azure","spark.hadoop.hive.server2.thrift.http.port":"10000","spark.databricks.clusterUsageTags.clusterLogDeliveryEnabled":"false","spark.shuffle.manager":"SORT","spark.hadoop.hive.server2.keystore.password":"*********(redacted)","spark.databricks.acl.provider":"com.databricks.sql.acl.ReflectionBackedAclProvider","spark.databricks.clusterUsageTags.enableElasticDisk":"true","spark.hadoop.parquet.abfs.readahead.optimization.enabled":"true","spark.hadoop.spark.hadoop.aws.glue.cache.table.ttl-mins":"30","spark.databricks.repo.gitReference":"master","orgId":"984752964297111","spark.databricks.eventLog.listenerClassName":"com.databricks.backend.daemon.driver.DBCEventLoggingListener","spark.databricks.clusterUsageTags.clusterStateMessage":"Starting Spark","spark.databricks.clusterUsageTags.sparkVersion":"13.3.x-photon-scala2.12","spark.databricks.clusterUsageTags.hailEnabled":"false","spark.databricks.unityCatalog.legacy.enableCrossScopeCredCache":"true","spark.sql.streaming.checkpointFileManagerClass":"com.databricks.spark.sql.streaming.DatabricksCheckpointFileManager","spark.databricks.clusterUsageTags.numPerGlobalInitScriptsV2":"2","spark.databricks.clusterUsageTags.userProvidedRemoteVolumeSizeGb":"0","spark.hadoop.fs.wasbs.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.hadoop.fs.file.impl":"com.databricks.backend.daemon.driver.WorkspaceLocalFileSystem","spark.hadoop.hive.warehouse.subdir.inherit.perms":"false","spark.databricks.unityCatalog.volumes.fuse.server.enabled":"true","spark.speculation.multiplier":"3","spark.databricks.clusterUsageTags.clusterPythonVersion":"3","spark.databricks.clusterUsageTags.ngrokNpipEnabled":"false","spark.databricks.unityCatalog.credentialScope.enabled":"*********(redacted)","spark.hadoop.hive.server2.thrift.http.cookie.auth.enabled":"false","spark.databricks.job.type":"notebook","spark.databricks.pipelines.analysisId":"DLTAnalysisID-48aeb-dd3cb-17f18-c","spark.storage.memoryFraction":"0.5","spark.r.numRBackendThreads":"1","spark.databricks.inherited.credentials.keys.spark.databricks.api.token":"*********(redacted)","spark.databricks.unityCatalog.enforce.permissions":"false","spark.hadoop.hive.server2.idle.operation.timeout":"7200000","spark.hadoop.hive.server2.transport.mode":"http","spark.hadoop.spark.hadoop.aws.glue.cache.db.ttl-mins":"30","spark.databricks.notebook.path":"/Repos/peter.stern@databricks.com/DB_Projects/DatabricksPerfProfiler/Tests/SituationCreators/WriteManySmallFiles","spark.databricks.tahoe.logStore.aws.class":"com.databricks.tahoe.store.MultiClusterLogStore","spark.hadoop.fs.s3a.fast.upload.default":"true","spark.databricks.driver.preferredMavenCentralMirrorUrl":"*********(redacted)","spark.master":"local[*, 4]","spark.databricks.clusterUsageTags.sparkEnvVarContainsNewline":"false","spark.databricks.execution.rootSqlExecutionId":"0","spark.files.fetchFailure.unRegisterOutputOnHost":"true","spark.hadoop.fs.s3a.retry.throttle.interval":"500ms","spark.sql.allowMultipleContexts":"false","spark.databricks.sql.initial.catalog.name":"hive_metastore","spark.databricks.clusterUsageTags.privateLinkEnabled":"false","spark.hadoop.fs.s3a.fast.upload":"true","spark.databricks.repo.gitUrl":"*********(redacted)","spark.databricks.secret.sparkConf.keys.toRedact":"*********(redacted)","NFS_REPL_TEMP_DIR":"/local_disk0/.ephemeral_nfs/repl_tmp_data/ReplId-2f10f-b0824-12097","spark.executor.memory":"1821m","spark.hadoop.fs.azure.user.agent.prefix":"*********(redacted)","spark.executor.id":"driver","spark.worker.aioaLazyConfig.iamReadinessCheckClientClass":"com.databricks.backend.daemon.driver.NephosIamRoleCheckClient","spark.hadoop.fs.s3a.retry.interval":"250ms","spark.rpc.message.maxSize":"256","spark.databricks.token":"*********(redacted)","spark.databricks.clusterUsageTags.clusterLogDestination":"","spark.scheduler.listenerbus.eventqueue.capacity":"20000","spark.hadoop.databricks.loki.fileSystemCache.enabled":"true","spark.databricks.env":"databricks-python-repl-ipykernel","spark.hadoop.parquet.page.size.check.estimate":"false","spark.databricks.repo.gitCommit":"0170971fba0ecfeb97e0b199a6c9db9da10b5b06","spark.hadoop.hive.server2.keystore.path":"/databricks/keys/jetty-ssl-driver-keystore.jks","spark.streaming.driver.writeAheadLog.closeFileAfterWrite":"true","spark.rdd.scope.noOverride":"true","spark.databricks.wsfsPublicPreview":"true","spark.sql.execution.parent":"0","spark.rdd.compress":"true","spark.hadoop.mapred.output.committer.class":"com.databricks.backend.daemon.data.client.DirectOutputCommitter","spark.storage.blockManagerTimeoutIntervalMs":"300000","spark.databricks.driverNodeTypeId":"Standard_DS3_v2","spark.hadoop.fs.azure.skip.metrics":"true","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2Workspace":"0","spark.hadoop.hive.hmshandler.retry.attempts":"10","spark.databricks.eventLog.dir":"eventlogs","spark.hadoop.fs.fcfs-wasb.impl":"*********(redacted)","spark.hadoop.fs.gs.outputstream.upload.chunk.size":"16777216","spark.hadoop.spark.driverproxy.customHeadersToProperties":"*********(redacted)","spark.databricks.automl.serviceEnabled":"true","spark.databricks.clusterUsageTags.sparkEnvVarContainsDoubleQuotes":"false","spark.databricks.credential.scope.fs.gs.auth.access.tokenProviderClassName":"*********(redacted)","spark.akka.frameSize":"256","spark.databricks.passthrough.s3a.tokenProviderClassName":"*********(redacted)","spark.databricks.delta.multiClusterWrites.enabled":"true","spark.hadoop.fs.fcfs-s3n.impl.disable.cache":"true","spark.databricks.clusterUsageTags.attribute_tag_dust_execution_env":"","spark.hadoop.fs.AbstractFileSystem.gs.impl":"shaded.databricks.com.google.cloud.hadoop.fs.gcs.GoogleHadoopFS","spark.databricks.clusterUsageTags.sparkImageLabel":"release__13.3.x-snapshot-photon-scala2.12__databricks-universe__13.3.12__ca78acd__818fc34__jenkins__8ed39b5__format-3","spark.serializer.objectStreamReset":"100","spark.hadoop.fs.abfs.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.databricks.clusterUsageTags.sparkEnvVarContainsEscape":"false","spark.sparkr.use.daemon":"false","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2Abfss":"0","spark.databricks.clusterUsageTags.clusterFirstOnDemand":"1","spark.files.useFetchCache":"false","spark.sql.hive.metastore.version":"0.13.0","spark.databricks.clusterUsageTags.driverPublicDns":"172.172.18.43","spark.databricks.clusterUsageTags.clusterNumCustomTags":"1","spark.databricks.clusterUsageTags.clusterName":"job-890396008853692-run-304417810497226-Job_cluster","spark.sql.hive.metastore.sharedPrefixes":"org.mariadb.jdbc,com.mysql.jdbc,org.postgresql,com.microsoft.sqlserver,microsoft.sql.DateTimeOffset,microsoft.sql.Types,com.databricks,com.codahale,com.fasterxml.jackson,shaded.databricks","spark.databricks.clusterUsageTags.clusterNumSshKeys":"0","spark.hadoop.fs.s3a.attempts.maximum":"10","spark.databricks.clusterUsageTags.orgId":"984752964297111","spark.memory.offHeap.enabled":"true","spark.databricks.redactor":"com.databricks.spark.util.DatabricksSparkLogRedactorProxy","spark.hadoop.fs.s3a.block.size":"67108864","spark.hadoop.hive.server2.enable.doAs":"false","spark.databricks.clusterUsageTags.sparkEnvVarContainsDollarSign":"false","spark.databricks.clusterUsageTags.clusterResourceClass":"SingleNode","spark.hadoop.hive.server2.idle.session.timeout":"900000","spark.hadoop.fs.abfs.impl.disable.cache":"true","spark.hadoop.fs.fcfs-abfss.impl.disable.cache":"true","spark.databricks.clusterUsageTags.autoTerminationMinutes":"0","spark.databricks.clusterUsageTags.attribute_tag_dust_suite":"","spark.databricks.passthrough.glue.executorServiceFactoryClassName":"*********(redacted)","spark.databricks.clusterUsageTags.enableDfAcls":"false","spark.hadoop.parquet.block.size.row.check.max":"10","spark.databricks.clusterUsageTags.driverInstancePrivateIp":"10.139.0.130","spark.databricks.clusterSource":"JOB","spark.hadoop.fs.cpfs-abfss.impl":"*********(redacted)","spark.hadoop.fs.s3a.connection.timeout":"50000","spark.hadoop.fs.cpfs-adl.impl.disable.cache":"true","spark.hadoop.fs.fcfs-abfs.impl.disable.cache":"true","spark.databricks.clusterUsageTags.region":"eastus2","spark.ui.port":"40001","spark.sql.parquet.compression.codec":"snappy","spark.databricks.workspaceUrl":"*********(redacted)","spark.hadoop.fs.abfss.impl.disable.cache":"true","spark.hadoop.parquet.filter.columnindex.enabled":"false","spark.sql.execution.id":"2","spark.databricks.passthrough.adls.gen2.tokenProviderClassName":"*********(redacted)","spark.hadoop.hive.hmshandler.retry.interval":"2000","spark.hadoop.fs.cpfs-abfss.impl.disable.cache":"true","spark.hadoop.fs.mlflowdbfs.impl":"com.databricks.mlflowdbfs.MlflowdbfsFileSystem","spark.databricks.acl.client":"com.databricks.spark.sql.acl.client.SparkSqlAclClient","spark.databricks.clusterUsageTags.dataPlaneRegion":"eastus2","spark.databricks.clusterUsageTags.clusterOwnerUserId":"5246238868874017","spark.streaming.driver.writeAheadLog.allowBatching":"true","spark.databricks.repo.gitStatus":"unknown","spark.databricks.clusterUsageTags.enableLocalDiskEncryption":"false","spark.hadoop.fs.azure.authorization.caching.enable":"false","spark.databricks.credential.scope.fs.s3a.tokenProviderClassName":"*********(redacted)","spark.hadoop.hive.server2.use.SSL":"true","spark.hadoop.fs.s3a.threads.max":"136","spark.repl.class.uri":"spark://10.139.64.109:40907/classes","spark.databricks.overrideDefaultCommitProtocol":"org.apache.spark.sql.execution.datasources.SQLHadoopMapReduceCommitProtocol","spark.databricks.optimizer.optimizeLimit.maxLimit":"10001","spark.driver.host":"10.139.64.109","spark.driver.allowMultipleContexts":"false","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2Gcs":"0","spark.databricks.driverNfs.enabled":"true","spark.hadoop.parquet.page.metadata.validation.enabled":"true","spark.hadoop.fs.fcfs-abfs.impl":"*********(redacted)","spark.hadoop.fs.s3a.multipart.size":"10485760","spark.databricks.delta.logStore.crossCloud.fatal":"true","spark.hadoop.fs.fcfs-s3a.impl":"*********(redacted)","spark.task.reaper.enabled":"true","spark.databricks.clusterUsageTags.clusterNodeType":"Standard_DS3_v2","spark.databricks.cloudProvider":"Azure","spark.databricks.clusterUsageTags.instanceWorkerEnvId":"workerenv-984752964297111","spark.databricks.inherited.credentials.keys.spark.databricks.uc.api.token":"*********(redacted)","spark.databricks.sessionUUID":"2e4750ec-4ceb-4548-95f6-b2c5a9a83e54","spark.databricks.cluster.profile":"singleNode","spark.shuffle.memoryFraction":"0.2","spark.databricks.clusterUsageTags.clusterScalingType":"fixed_size","spark.hadoop.fs.fcfs-s3.impl.disable.cache":"true","spark.hadoop.fs.dbfsartifacts.impl":"com.databricks.backend.daemon.data.client.DBFSV1","spark.databricks.credential.redactor":"*********(redacted)","spark.databricks.clusterUsageTags.isDpCpPrivateLinkEnabled":"false","spark.app.name":"Databricks Shell","spark.databricks.clusterUsageTags.clusterSku":"STANDARD_SKU","spark.hadoop.fs.azure.cache.invalidator.type":"com.databricks.encryption.utils.CacheInvalidatorImpl","spark.metrics.conf":"/databricks/spark/conf/metrics.properties","spark.databricks.workload.name":"JobRun","spark.sql.streaming.stopTimeout":"15s","spark.hadoop.fs.s3a.assumed.role.credentials.provider":"*********(redacted)","spark.delta.sharing.profile.provider.class":"*********(redacted)","spark.hadoop.spark.databricks.io.parquet.verifyChecksumOnWrite.enabled":"false","spark.files.overwrite":"true","spark.databricks.tahoe.logStore.gcp.class":"com.databricks.tahoe.store.GCPLogStore","spark.databricks.credential.scope.fs.impl":"*********(redacted)","spark.hadoop.spark.databricks.io.parquet.verifyChecksumOnWrite.throwsException":"false","spark.databricks.passthrough.s3a.threadPoolExecutor.factory.class":"com.databricks.backend.daemon.driver.aws.S3APassthroughThreadPoolExecutorFactory","spark.hadoop.fs.s3a.retry.limit":"6","spark.databricks.preemption.enabled":"true","spark.hadoop.fs.gs.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.hadoop.fs.dbfs.impl":"com.databricks.backend.daemon.data.client.DbfsHadoop3","spark.databricks.clusterUsageTags.enableGlueCatalogCredentialPassthrough":"*********(redacted)","spark.shuffle.reduceLocality.enabled":"false","spark.databricks.repl.enableClassFileCleanup":"true","spark.hadoop.fs.s3a.multipart.threshold":"104857600","spark.hadoop.fs.fcfs-abfss.impl":"*********(redacted)","spark.sparklyr-backend.threads":"1","spark.hadoop.fs.fcfs-wasbs.impl.disable.cache":"true","spark.databricks.clusterUsageTags.ignoreTerminationEventInAlerting":"false","spark.hadoop.databricks.fs.perfMetrics.enable":"true","spark.databricks.eventLog.enabled":"true","spark.databricks.clusterUsageTags.managedResourceGroup":"databricks-rg-field-eng-east-fg2bkkcjf6sio","spark.databricks.isShieldWorkspace":"false","spark.rdd.scope":"{\"id\":\"15\",\"name\":\"collect\"}","spark.hadoop.spark.hadoop.aws.glue.cache.table.size":"1000","spark.databricks.api.url":"https://eastus2.azuredatabricks.net","spark.databricks.inherited.spark.databricks.api.url":"*********(redacted)","spark.hadoop.fs.fcfs-wasbs.impl":"*********(redacted)","spark.databricks.clusterUsageTags.clusterPinned":"false","spark.speculation.quantile":"0.9","spark.databricks.job.id":"347682096904605","spark.hadoop.fs.cpfs-s3a.impl":"*********(redacted)","spark.hadoop.fs.cpfs-adl.impl":"*********(redacted)","userId":"5246238868874017","spark.hadoop.fs.wasb.impl.disable.cache":"true","spark.sql.legacy.createHiveTableByDefault":"false","spark.scheduler.mode":"FAIR","spark.shuffle.service.port":"4048","spark.databricks.qpl.queryId":"e5e2aed6-6887-4dad-a04a-d2d58e206ab9","spark.databricks.clusterUsageTags.isIMv2Enabled":"false","spark.hadoop.fs.fcfs-wasb.impl.disable.cache":"true","spark.hadoop.databricks.s3.verifyBucketExists.enabled":"false","spark.databricks.driverNfs.pathSuffix":".ephemeral_nfs","spark.sql.sources.commitProtocolClass":"com.databricks.sql.transaction.directory.DirectoryAtomicCommitProtocol","spark.hadoop.fs.s3a.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.databricks.driverNfs.clusterWidePythonLibsEnabled":"true","spark.connect.extensions.relation.classes":"io.delta.connect.DeltaRelationPlugin","spark.scheduler.pool":"211967908237090967","spark.hadoop.databricks.loki.fileStatusCache.enabled":"true","spark.databricks.unityCatalog.credentialManager.tokenRefreshEnabled":"*********(redacted)","spark.memory.offHeap.size":"5728370688","spark.databricks.clusterUsageTags.azureSubscriptionId":"3f2e4d32-8e8d-46d6-82bc-5bb8d962328b","spark.databricks.clusterUsageTags.clusterNoDriverDaemon":"false","spark.databricks.clusterUsageTags.clusterState":"Pending","spark.sql.parquet.cacheMetadata":"true","spark.databricks.clusterUsageTags.clusterSizeType":"VM_CONTAINER","spark.databricks.clusterUsageTags.effectiveSparkVersion":"13.3.x-photon-scala2.12","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2Dbfs":"0","spark.databricks.clusterUsageTags.driverContainerId":"9bd75d2b8a2e4069b9dcc6ad3dabdc25","spark.worker.aioaLazyConfig.dbfsReadinessCheckClientClass":"com.databricks.backend.daemon.driver.NephosDbfsReadinessCheckClient","spark.databricks.clusterUsageTags.clusterUnityCatalogMode":"*********(redacted)","spark.databricks.clusterUsageTags.clusterAllTags":"[{\"key\":\"ResourceClass\",\"value\":\"SingleNode\"},{\"key\":\"Vendor\",\"value\":\"Databricks\"},{\"key\":\"Creator\",\"value\":\"peter.stern@databricks.com\"},{\"key\":\"ClusterName\",\"value\":\"job-890396008853692-run-304417810497226-Job_cluster\"},{\"key\":\"ClusterId\",\"value\":\"0318-124329-gscyjw0i\"},{\"key\":\"JobId\",\"value\":\"890396008853692\"},{\"key\":\"RunName\",\"value\":\"WriteManySmallFiles\"},{\"key\":\"owner\",\"value\":\"kyle@databricks.com\"},{\"key\":\"DatabricksEnvironment\",\"value\":\"workerenv-984752964297111\"}]","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2Volumes":"0","spark.hadoop.parquet.page.write-checksum.enabled":"true","spark.plugins":"org.apache.spark.sql.connect.SparkConnectPlugin","spark.cleaner.referenceTracking.blocking":"false","spark.hadoop.databricks.dbfs.client.version":"v2","spark.hadoop.fs.fcfs-s3a.impl.disable.cache":"true","spark.databricks.clusterUsageTags.attribute_tag_service":"","spark.databricks.cloudfetch.requesterClassName":"*********(redacted)","spark.databricks.clusterUsageTags.clusterOwnerOrgId":"984752964297111","spark.jobGroup.id":"211967908237090967_7868666602381424818_job-347682096904605-run-1-action-6933310957083977","spark.databricks.workload.id":"984752964297111-347682096904605-1","spark.databricks.service.dbutils.server.backend":"com.databricks.dbconnect.SparkServerDBUtils","spark.hadoop.fs.s3a.impl.disable.cache":"true","spark.databricks.clusterUsageTags.sparkEnvVarContainsBacktick":"false","spark.databricks.credential.aws.secretKey.redactor":"*********(redacted)"}}
{"Event":"SparkListenerTaskStart","Stage ID":3,"Stage Attempt ID":0,"Task Info":{"Task ID":3,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1710766591648,"Executor ID":"driver","Host":"10.139.64.109","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":3,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":3,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1710766591648,"Executor ID":"driver","Host":"10.139.64.109","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1710766591667,"Failed":false,"Killed":false,"Accumulables":[{"ID":416,"Name":"internal.metrics.executorDeserializeTime","Update":3,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":417,"Name":"internal.metrics.executorDeserializeCpuTime","Update":3696300,"Value":3696300,"Internal":true,"Count Failed Values":true},{"ID":418,"Name":"internal.metrics.executorRunTime","Update":5,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":419,"Name":"internal.metrics.executorCpuTime","Update":5579400,"Value":5579400,"Internal":true,"Count Failed Values":true},{"ID":420,"Name":"internal.metrics.resultSize","Update":823,"Value":823,"Internal":true,"Count Failed Values":true},{"ID":465,"Name":"internal.metrics.trackedOffHeapMemorySize","Update":0,"Value":0,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"NettyDirectMemory":0,"JvmDirectMemory":0,"SparkDirectMemoryOverLimit":0,"TotalOffHeapMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":3,"Executor Deserialize CPU Time":3696300,"Executor Run Time":5,"Executor CPU Time":5579400,"Peak Execution Memory":0,"Result Size":823,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":3,"Stage Attempt ID":0,"Stage Name":"collect at TransactionalWriteEdge.scala:669","Number of Tasks":1,"RDD Info":[{"RDD ID":9,"Name":"SQLExecutionRDD","Callsite":"toRdd at TransactionalWriteEdge.scala:669","Parent IDs":[8],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":8,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"spark_plan_182\",\"name\":\"Execute WriteIntoDeltaCommand\"}","Callsite":"$anonfun$withThreadLocalCaptured$5 at LexicalThreadLocal.scala:63","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.rdd.RDD.collect(RDD.scala:1098)\ncom.databricks.sql.transaction.tahoe.files.TransactionalWriteEdge.$anonfun$writeFiles$13(TransactionalWriteEdge.scala:669)\norg.apache.spark.sql.execution.SQLExecution$.$anonfun$withCustomExecutionEnv$8(SQLExecution.scala:283)\norg.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:511)\norg.apache.spark.sql.execution.SQLExecution$.$anonfun$withCustomExecutionEnv$1(SQLExecution.scala:210)\norg.apache.spark.sql.SparkSession.withActive(SparkSession.scala:1138)\norg.apache.spark.sql.execution.SQLExecution$.withCustomExecutionEnv(SQLExecution.scala:153)\norg.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:460)\ncom.databricks.sql.transaction.tahoe.files.TransactionalWriteEdge.$anonfun$writeFiles$1(TransactionalWriteEdge.scala:659)\ncom.databricks.sql.transaction.tahoe.metering.DeltaLogging.withOperationTypeTag(DeltaLogging.scala:196)\ncom.databricks.sql.transaction.tahoe.metering.DeltaLogging.withOperationTypeTag$(DeltaLogging.scala:183)\ncom.databricks.sql.transaction.tahoe.OptimisticTransaction.withOperationTypeTag(OptimisticTransaction.scala:155)\ncom.databricks.sql.transaction.tahoe.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$2(DeltaLogging.scala:160)\ncom.databricks.spark.util.FrameProfiler$.record(FrameProfiler.scala:94)\ncom.databricks.sql.transaction.tahoe.metering.DeltaLogging.recordFrameProfile(DeltaLogging.scala:265)\ncom.databricks.sql.transaction.tahoe.metering.DeltaLogging.recordFrameProfile$(DeltaLogging.scala:263)\ncom.databricks.sql.transaction.tahoe.OptimisticTransaction.recordFrameProfile(OptimisticTransaction.scala:155)\ncom.databricks.sql.transaction.tahoe.metering.DeltaLogging.$anonfun$recordDeltaOperationInternal$1(DeltaLogging.scala:159)\ncom.databricks.logging.UsageLogging.$anonfun$recordOperation$1(UsageLogging.scala:571)\ncom.databricks.logging.UsageLogging.executeThunkAndCaptureResultTags$1(UsageLogging.scala:666)","Submission Time":1710766591620,"Completion Time":1710766591667,"Accumulables":[{"ID":416,"Name":"internal.metrics.executorDeserializeTime","Value":3,"Internal":true,"Count Failed Values":true},{"ID":417,"Name":"internal.metrics.executorDeserializeCpuTime","Value":3696300,"Internal":true,"Count Failed Values":true},{"ID":418,"Name":"internal.metrics.executorRunTime","Value":5,"Internal":true,"Count Failed Values":true},{"ID":419,"Name":"internal.metrics.executorCpuTime","Value":5579400,"Internal":true,"Count Failed Values":true},{"ID":420,"Name":"internal.metrics.resultSize","Value":823,"Internal":true,"Count Failed Values":true},{"ID":465,"Name":"internal.metrics.trackedOffHeapMemorySize","Value":0,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":2,"Completion Time":1710766591673,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":2,"time":1710766591693,"errorMessage":""}
{"Event":"SparkListenerJobStart","Job ID":3,"Submission Time":1710766594393,"Stage Infos":[],"Stage IDs":[],"Properties":{"spark.hadoop.fs.idbfs.impl":"com.databricks.io.idbfs.IdbfsFileSystem","spark.databricks.session.share":"false","spark.databricks.repo.gitProvider":"gitHub","spark.hadoop.hive.server2.session.check.interval":"60000","spark.databricks.tahoe.logStore.class":"com.databricks.tahoe.store.DelegatingLogStore","spark.driver.port":"40907","spark.databricks.managedCatalog.clientClassName":"com.databricks.managedcatalog.ManagedCatalogClientImpl","spark.databricks.clusterUsageTags.sparkMasterUrlType":"*********(redacted)","spark.hadoop.fs.cpfs-s3n.impl":"*********(redacted)","spark.databricks.clusterUsageTags.sparkEnvVarContainsSingleQuotes":"false","spark.databricks.clusterUsageTags.clusterCreator":"JobLauncher","spark.databricks.mlflow.autologging.enabled":"true","spark.databricks.clusterUsageTags.enableSqlAclsOnly":"false","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2":"0","spark.sql.sources.default":"delta","spark.databricks.tahoe.logStore.azure.class":"com.databricks.tahoe.store.AzureLogStore","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED --add-opens=java.management/sun.management=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.task.reaper.killTimeout":"60s","spark.hadoop.fs.fcfs-s3.impl":"*********(redacted)","spark.job.interruptOnCancel":"true","spark.hadoop.fs.s3a.max.total.tasks":"1000","spark.databricks.clusterUsageTags.userProvidedRemoteVolumeType":"azure_disk_volume_type: PREMIUM_LRS\n","databricks.operationType":"delta.ddl.createTable,delta.skipping.none","spark.home":"/databricks/spark","spark.hadoop.fs.s3n.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.databricks.metrics.filesystem_io_metrics":"true","spark.hadoop.fs.stage.impl.disable.cache":"true","spark.hadoop.spark.sql.parquet.output.committer.class":"org.apache.spark.sql.parquet.DirectParquetOutputCommitter","spark.databricks.clusterUsageTags.clusterAvailability":"ON_DEMAND_AZURE","spark.databricks.io.directoryCommit.enableLogicalDelete":"false","spark.app.startTime":"1710765861425","spark.executor.tempDirectory":"/local_disk0/tmp","spark.hadoop.fs.s3a.connection.maximum":"200","spark.databricks.credential.scope.fs.adls.gen2.tokenProviderClassName":"*********(redacted)","spark.databricks.clusterUsageTags.driverInstanceId":"2e1f3e63927947fe9aeb4573a6fc5a61","spark.databricks.autotune.maintenance.client.classname":"com.databricks.maintenanceautocompute.MACClientImpl","spark.databricks.clusterUsageTags.userProvidedSparkVersion":"*********(redacted)","spark.hadoop.fs.gs.impl.disable.cache":"true","spark.databricks.sparkContextId":"7457485797975121240","spark.databricks.workerNodeTypeId":"Standard_DS3_v2","spark.hadoop.databricks.s3.create.deleteUnnecessaryFakeDirectories":"false","spark.databricks.clusterUsageTags.workerEnvironmentId":"workerenv-984752964297111","spark.hadoop.mapreduce.fileoutputcommitter.algorithm.version":"2","spark.databricks.clusterUsageTags.clusterId":"0318-124329-gscyjw0i","spark.databricks.privateLinkEnabled":"false","spark.databricks.service.client.type":"python","spark.databricks.clusterUsageTags.runtimeEngine":"PHOTON","spark.job.description":"spark.table('hive_metastore.sternp.flights').li...","spark.databricks.clusterUsageTags.clusterWorkers":"0","spark.app.id":"local-1710765872285","spark.databricks.clusterUsageTags.enableCredentialPassthrough":"false","spark.extraListeners":"com.databricks.backend.daemon.driver.DBCEventLoggingListener","spark.databricks.passthrough.glue.credentialsProviderFactoryClassName":"*********(redacted)","spark.databricks.cloudfetch.requestDownloadUrlsWithHeaders":"*********(redacted)","spark.databricks.clusterUsageTags.clusterMetastoreAccessType":"RDS_DIRECT","spark.hadoop.parquet.page.verify-checksum.enabled":"true","spark.databricks.repo.relativePath":"DatabricksPerfProfiler/Tests/SituationCreators/WriteManySmallFiles","spark.databricks.job.runId":"1","spark.connect.extensions.command.classes":"io.delta.connect.DeltaCommandPlugin","spark.databricks.clusterUsageTags.driverContainerPrivateIp":"10.139.64.109","spark.driver.tempDirectory":"/local_disk0/tmp","spark.hadoop.fs.wasbs.impl.disable.cache":"true","spark.repl.class.outputDir":"/local_disk0/tmp/repl/spark-7457485797975121240-5f1fb623-2bfe-459a-a7a0-bd065e8f96d1","spark.shuffle.service.enabled":"true","spark.speculation":"false","spark.eventLog.enabled":"false","spark.hadoop.spark.databricks.metrics.filesystem_metrics":"true","spark.hadoop.fs.fcfs-s3n.impl":"*********(redacted)","spark.databricks.clusterUsageTags.enableJdbcAutoStart":"true","spark.sql.hive.metastore.jars":"/databricks/databricks-hive/*","spark.hadoop.fs.cpfs-s3.impl":"*********(redacted)","spark.databricks.clusterUsageTags.attribute_tag_budget":"","spark.databricks.clusterUsageTags.userId":"*********(redacted)","spark.databricks.dataLineage.enabled":"true","spark.hadoop.spark.sql.sources.outputCommitterClass":"com.databricks.backend.daemon.data.client.MapReduceDirectOutputCommitter","spark.databricks.clusterUsageTags.clusterTargetWorkers":"0","spark.hadoop.spark.hadoop.aws.glue.cache.db.size":"1000","spark.hadoop.fs.adl.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.sql.hive.convertCTAS":"true","spark.databricks.passthrough.oauth.refresher.impl":"*********(redacted)","spark.databricks.secret.envVar.keys.toRedact":"*********(redacted)","spark.databricks.clusterUsageTags.containerType":"LXC","spark.databricks.unityCatalog.enabled":"true","spark.ui.prometheus.enabled":"true","spark.worker.cleanup.enabled":"false","spark.sql.hive.convertMetastoreParquet":"true","spark.databricks.unityCatalog.volumes.enabled":"true","spark.hadoop.fs.stage.impl":"com.databricks.backend.daemon.driver.managedcatalog.PersonalStagingFileSystem","spark.hadoop.fs.s3.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.databricks.clusterUsageTags.enableJobsAutostart":"true","spark.hadoop.fs.s3n.impl.disable.cache":"true","spark.hadoop.fs.adl.impl.disable.cache":"true","spark.databricks.cloudfetch.hasRegionSupport":"true","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2S3":"0","spark.hadoop.fs.s3a.fast.upload.active.blocks":"32","spark.hadoop.fs.s3.impl.disable.cache":"true","spark.databricks.sql.configMapperClass":"com.databricks.dbsql.config.SqlConfigMapperBridge","spark.hadoop.databricks.s3commit.client.sslTrustAll":"false","spark.databricks.clusterUsageTags.attribute_tag_dust_maintainer":"","spark.databricks.clusterUsageTags.instanceWorkerEnvNetworkType":"default","spark.databricks.replId":"ReplId-2f10f-b0824-12097","spark.databricks.clusterUsageTags.clusterSpotBidMaxPrice":"-1.0","spark.databricks.clusterUsageTags.userProvidedRemoteVolumeCount":"0","spark.r.backendConnectionTimeout":"604800","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2File":"0","spark.databricks.unityCatalog.queryFederation.enabled":"true","spark.driver.maxResultSize":"4g","spark.hadoop.parquet.memory.pool.ratio":"0.5","spark.databricks.clusterUsageTags.driverNodeType":"Standard_DS3_v2","spark.sql.catalogImplementation":"hive","spark.databricks.clusterUsageTags.clusterGeneration":"0","spark.databricks.repo.gitReferenceType":"branch","spark.databricks.wsfs.workspacePrivatePreview":"true","spark.databricks.clusterUsageTags.isSingleUserCluster":"true","user":"peter.stern@databricks.com","spark.databricks.passthrough.adls.tokenProviderClassName":"*********(redacted)","spark.databricks.acl.scim.client":"com.databricks.spark.sql.acl.client.DriverToWebappScimClient","spark.databricks.unityCatalog.credentialManager.apiTokenProviderClassName":"*********(redacted)","spark.databricks.clusterUsageTags.isServicePrincipalCluster":"false","spark.sql.warehouse.dir":"dbfs:/user/hive/warehouse","spark.logConf":"true","spark.hadoop.parquet.block.size.row.check.min":"10","spark.databricks.service.dbutils.repl.backend":"com.databricks.dbconnect.ReplDBUtils","spark.databricks.enablePublicDbfsFuse":"false","spark.hadoop.fs.abfss.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.hadoop.fs.wasb.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.databricks.clusterUsageTags.cloudProvider":"Azure","spark.hadoop.hive.server2.thrift.http.port":"10000","spark.databricks.clusterUsageTags.clusterLogDeliveryEnabled":"false","spark.shuffle.manager":"SORT","spark.hadoop.hive.server2.keystore.password":"*********(redacted)","spark.databricks.acl.provider":"com.databricks.sql.acl.ReflectionBackedAclProvider","spark.databricks.clusterUsageTags.enableElasticDisk":"true","spark.hadoop.parquet.abfs.readahead.optimization.enabled":"true","spark.hadoop.spark.hadoop.aws.glue.cache.table.ttl-mins":"30","spark.databricks.repo.gitReference":"master","orgId":"984752964297111","spark.databricks.eventLog.listenerClassName":"com.databricks.backend.daemon.driver.DBCEventLoggingListener","spark.databricks.clusterUsageTags.clusterStateMessage":"Starting Spark","spark.databricks.clusterUsageTags.sparkVersion":"13.3.x-photon-scala2.12","spark.databricks.clusterUsageTags.hailEnabled":"false","spark.databricks.unityCatalog.legacy.enableCrossScopeCredCache":"true","spark.sql.streaming.checkpointFileManagerClass":"com.databricks.spark.sql.streaming.DatabricksCheckpointFileManager","spark.databricks.clusterUsageTags.numPerGlobalInitScriptsV2":"2","spark.databricks.clusterUsageTags.userProvidedRemoteVolumeSizeGb":"0","spark.hadoop.fs.wasbs.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.hadoop.fs.file.impl":"com.databricks.backend.daemon.driver.WorkspaceLocalFileSystem","spark.hadoop.hive.warehouse.subdir.inherit.perms":"false","spark.databricks.unityCatalog.volumes.fuse.server.enabled":"true","spark.speculation.multiplier":"3","spark.databricks.clusterUsageTags.clusterPythonVersion":"3","spark.databricks.clusterUsageTags.ngrokNpipEnabled":"false","spark.databricks.unityCatalog.credentialScope.enabled":"*********(redacted)","spark.hadoop.hive.server2.thrift.http.cookie.auth.enabled":"false","spark.databricks.job.type":"notebook","spark.databricks.pipelines.analysisId":"DLTAnalysisID-48aeb-dd3cb-17f18-c","spark.storage.memoryFraction":"0.5","spark.r.numRBackendThreads":"1","spark.databricks.inherited.credentials.keys.spark.databricks.api.token":"*********(redacted)","spark.databricks.unityCatalog.enforce.permissions":"false","spark.hadoop.hive.server2.idle.operation.timeout":"7200000","spark.hadoop.hive.server2.transport.mode":"http","spark.hadoop.spark.hadoop.aws.glue.cache.db.ttl-mins":"30","spark.databricks.notebook.path":"/Repos/peter.stern@databricks.com/DB_Projects/DatabricksPerfProfiler/Tests/SituationCreators/WriteManySmallFiles","spark.databricks.tahoe.logStore.aws.class":"com.databricks.tahoe.store.MultiClusterLogStore","spark.hadoop.fs.s3a.fast.upload.default":"true","spark.databricks.driver.preferredMavenCentralMirrorUrl":"*********(redacted)","spark.master":"local[*, 4]","spark.databricks.clusterUsageTags.sparkEnvVarContainsNewline":"false","spark.databricks.execution.rootSqlExecutionId":"0","spark.files.fetchFailure.unRegisterOutputOnHost":"true","spark.hadoop.fs.s3a.retry.throttle.interval":"500ms","spark.sql.allowMultipleContexts":"false","spark.databricks.sql.initial.catalog.name":"hive_metastore","spark.databricks.clusterUsageTags.privateLinkEnabled":"false","spark.hadoop.fs.s3a.fast.upload":"true","spark.databricks.repo.gitUrl":"*********(redacted)","spark.databricks.secret.sparkConf.keys.toRedact":"*********(redacted)","NFS_REPL_TEMP_DIR":"/local_disk0/.ephemeral_nfs/repl_tmp_data/ReplId-2f10f-b0824-12097","spark.executor.memory":"1821m","spark.hadoop.fs.azure.user.agent.prefix":"*********(redacted)","spark.executor.id":"driver","spark.worker.aioaLazyConfig.iamReadinessCheckClientClass":"com.databricks.backend.daemon.driver.NephosIamRoleCheckClient","spark.hadoop.fs.s3a.retry.interval":"250ms","spark.rpc.message.maxSize":"256","spark.databricks.token":"*********(redacted)","spark.databricks.clusterUsageTags.clusterLogDestination":"","spark.scheduler.listenerbus.eventqueue.capacity":"20000","spark.hadoop.databricks.loki.fileSystemCache.enabled":"true","spark.databricks.env":"databricks-python-repl-ipykernel","spark.hadoop.parquet.page.size.check.estimate":"false","spark.databricks.repo.gitCommit":"0170971fba0ecfeb97e0b199a6c9db9da10b5b06","spark.hadoop.hive.server2.keystore.path":"/databricks/keys/jetty-ssl-driver-keystore.jks","spark.streaming.driver.writeAheadLog.closeFileAfterWrite":"true","spark.databricks.wsfsPublicPreview":"true","spark.rdd.compress":"true","spark.hadoop.mapred.output.committer.class":"com.databricks.backend.daemon.data.client.DirectOutputCommitter","spark.storage.blockManagerTimeoutIntervalMs":"300000","spark.databricks.driverNodeTypeId":"Standard_DS3_v2","spark.hadoop.fs.azure.skip.metrics":"true","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2Workspace":"0","spark.hadoop.hive.hmshandler.retry.attempts":"10","spark.databricks.eventLog.dir":"eventlogs","spark.hadoop.fs.fcfs-wasb.impl":"*********(redacted)","spark.hadoop.fs.gs.outputstream.upload.chunk.size":"16777216","spark.hadoop.spark.driverproxy.customHeadersToProperties":"*********(redacted)","spark.databricks.automl.serviceEnabled":"true","spark.databricks.clusterUsageTags.sparkEnvVarContainsDoubleQuotes":"false","spark.databricks.credential.scope.fs.gs.auth.access.tokenProviderClassName":"*********(redacted)","spark.akka.frameSize":"256","spark.databricks.passthrough.s3a.tokenProviderClassName":"*********(redacted)","spark.databricks.delta.multiClusterWrites.enabled":"true","spark.hadoop.fs.fcfs-s3n.impl.disable.cache":"true","spark.databricks.clusterUsageTags.attribute_tag_dust_execution_env":"","spark.hadoop.fs.AbstractFileSystem.gs.impl":"shaded.databricks.com.google.cloud.hadoop.fs.gcs.GoogleHadoopFS","spark.databricks.clusterUsageTags.sparkImageLabel":"release__13.3.x-snapshot-photon-scala2.12__databricks-universe__13.3.12__ca78acd__818fc34__jenkins__8ed39b5__format-3","spark.serializer.objectStreamReset":"100","spark.hadoop.fs.abfs.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.databricks.clusterUsageTags.sparkEnvVarContainsEscape":"false","spark.sparkr.use.daemon":"false","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2Abfss":"0","spark.databricks.clusterUsageTags.clusterFirstOnDemand":"1","spark.files.useFetchCache":"false","spark.sql.hive.metastore.version":"0.13.0","spark.databricks.clusterUsageTags.driverPublicDns":"172.172.18.43","spark.databricks.clusterUsageTags.clusterNumCustomTags":"1","spark.databricks.clusterUsageTags.clusterName":"job-890396008853692-run-304417810497226-Job_cluster","spark.sql.hive.metastore.sharedPrefixes":"org.mariadb.jdbc,com.mysql.jdbc,org.postgresql,com.microsoft.sqlserver,microsoft.sql.DateTimeOffset,microsoft.sql.Types,com.databricks,com.codahale,com.fasterxml.jackson,shaded.databricks","spark.databricks.clusterUsageTags.clusterNumSshKeys":"0","spark.hadoop.fs.s3a.attempts.maximum":"10","spark.databricks.clusterUsageTags.orgId":"984752964297111","spark.memory.offHeap.enabled":"true","spark.databricks.redactor":"com.databricks.spark.util.DatabricksSparkLogRedactorProxy","spark.hadoop.fs.s3a.block.size":"67108864","spark.hadoop.hive.server2.enable.doAs":"false","spark.databricks.clusterUsageTags.sparkEnvVarContainsDollarSign":"false","spark.databricks.clusterUsageTags.clusterResourceClass":"SingleNode","spark.hadoop.hive.server2.idle.session.timeout":"900000","spark.hadoop.fs.abfs.impl.disable.cache":"true","spark.hadoop.fs.fcfs-abfss.impl.disable.cache":"true","spark.databricks.clusterUsageTags.autoTerminationMinutes":"0","spark.databricks.clusterUsageTags.attribute_tag_dust_suite":"","spark.databricks.passthrough.glue.executorServiceFactoryClassName":"*********(redacted)","spark.databricks.clusterUsageTags.enableDfAcls":"false","spark.hadoop.parquet.block.size.row.check.max":"10","spark.databricks.clusterUsageTags.driverInstancePrivateIp":"10.139.0.130","spark.databricks.clusterSource":"JOB","spark.hadoop.fs.cpfs-abfss.impl":"*********(redacted)","spark.hadoop.fs.s3a.connection.timeout":"50000","spark.hadoop.fs.cpfs-adl.impl.disable.cache":"true","spark.hadoop.fs.fcfs-abfs.impl.disable.cache":"true","spark.databricks.clusterUsageTags.region":"eastus2","spark.ui.port":"40001","spark.sql.parquet.compression.codec":"snappy","spark.databricks.workspaceUrl":"*********(redacted)","spark.hadoop.fs.abfss.impl.disable.cache":"true","spark.hadoop.parquet.filter.columnindex.enabled":"false","spark.sql.execution.id":"0","spark.databricks.passthrough.adls.gen2.tokenProviderClassName":"*********(redacted)","spark.hadoop.hive.hmshandler.retry.interval":"2000","spark.hadoop.fs.cpfs-abfss.impl.disable.cache":"true","spark.hadoop.fs.mlflowdbfs.impl":"com.databricks.mlflowdbfs.MlflowdbfsFileSystem","spark.databricks.acl.client":"com.databricks.spark.sql.acl.client.SparkSqlAclClient","spark.databricks.clusterUsageTags.dataPlaneRegion":"eastus2","spark.databricks.clusterUsageTags.clusterOwnerUserId":"5246238868874017","spark.streaming.driver.writeAheadLog.allowBatching":"true","spark.databricks.repo.gitStatus":"unknown","spark.databricks.clusterUsageTags.enableLocalDiskEncryption":"false","spark.hadoop.fs.azure.authorization.caching.enable":"false","spark.databricks.credential.scope.fs.s3a.tokenProviderClassName":"*********(redacted)","spark.hadoop.hive.server2.use.SSL":"true","spark.hadoop.fs.s3a.threads.max":"136","spark.repl.class.uri":"spark://10.139.64.109:40907/classes","spark.databricks.overrideDefaultCommitProtocol":"org.apache.spark.sql.execution.datasources.SQLHadoopMapReduceCommitProtocol","spark.databricks.optimizer.optimizeLimit.maxLimit":"10001","spark.driver.host":"10.139.64.109","spark.driver.allowMultipleContexts":"false","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2Gcs":"0","spark.databricks.driverNfs.enabled":"true","spark.hadoop.parquet.page.metadata.validation.enabled":"true","spark.hadoop.fs.fcfs-abfs.impl":"*********(redacted)","spark.hadoop.fs.s3a.multipart.size":"10485760","spark.databricks.delta.logStore.crossCloud.fatal":"true","spark.task.reaper.enabled":"true","spark.hadoop.fs.fcfs-s3a.impl":"*********(redacted)","spark.databricks.clusterUsageTags.clusterNodeType":"Standard_DS3_v2","spark.databricks.cloudProvider":"Azure","spark.databricks.clusterUsageTags.instanceWorkerEnvId":"workerenv-984752964297111","spark.databricks.inherited.credentials.keys.spark.databricks.uc.api.token":"*********(redacted)","spark.databricks.sessionUUID":"2e4750ec-4ceb-4548-95f6-b2c5a9a83e54","spark.databricks.cluster.profile":"singleNode","spark.shuffle.memoryFraction":"0.2","spark.databricks.clusterUsageTags.clusterScalingType":"fixed_size","spark.hadoop.fs.fcfs-s3.impl.disable.cache":"true","spark.hadoop.fs.dbfsartifacts.impl":"com.databricks.backend.daemon.data.client.DBFSV1","spark.databricks.credential.redactor":"*********(redacted)","spark.databricks.clusterUsageTags.isDpCpPrivateLinkEnabled":"false","spark.app.name":"Databricks Shell","spark.databricks.clusterUsageTags.clusterSku":"STANDARD_SKU","spark.hadoop.fs.azure.cache.invalidator.type":"com.databricks.encryption.utils.CacheInvalidatorImpl","spark.metrics.conf":"/databricks/spark/conf/metrics.properties","spark.databricks.workload.name":"JobRun","spark.sql.streaming.stopTimeout":"15s","spark.hadoop.fs.s3a.assumed.role.credentials.provider":"*********(redacted)","spark.delta.sharing.profile.provider.class":"*********(redacted)","spark.hadoop.spark.databricks.io.parquet.verifyChecksumOnWrite.enabled":"false","spark.files.overwrite":"true","spark.databricks.tahoe.logStore.gcp.class":"com.databricks.tahoe.store.GCPLogStore","spark.databricks.credential.scope.fs.impl":"*********(redacted)","spark.hadoop.spark.databricks.io.parquet.verifyChecksumOnWrite.throwsException":"false","spark.databricks.passthrough.s3a.threadPoolExecutor.factory.class":"com.databricks.backend.daemon.driver.aws.S3APassthroughThreadPoolExecutorFactory","spark.hadoop.fs.s3a.retry.limit":"6","spark.databricks.preemption.enabled":"true","spark.hadoop.fs.gs.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.hadoop.fs.dbfs.impl":"com.databricks.backend.daemon.data.client.DbfsHadoop3","spark.databricks.clusterUsageTags.enableGlueCatalogCredentialPassthrough":"*********(redacted)","spark.shuffle.reduceLocality.enabled":"false","spark.databricks.repl.enableClassFileCleanup":"true","spark.hadoop.fs.s3a.multipart.threshold":"104857600","spark.hadoop.fs.fcfs-abfss.impl":"*********(redacted)","spark.sparklyr-backend.threads":"1","spark.hadoop.fs.fcfs-wasbs.impl.disable.cache":"true","spark.databricks.clusterUsageTags.ignoreTerminationEventInAlerting":"false","spark.hadoop.databricks.fs.perfMetrics.enable":"true","spark.databricks.eventLog.enabled":"true","spark.databricks.clusterUsageTags.managedResourceGroup":"databricks-rg-field-eng-east-fg2bkkcjf6sio","spark.databricks.isShieldWorkspace":"false","spark.hadoop.spark.hadoop.aws.glue.cache.table.size":"1000","spark.databricks.api.url":"https://eastus2.azuredatabricks.net","spark.databricks.inherited.spark.databricks.api.url":"*********(redacted)","spark.hadoop.fs.fcfs-wasbs.impl":"*********(redacted)","spark.databricks.clusterUsageTags.clusterPinned":"false","spark.speculation.quantile":"0.9","spark.databricks.job.id":"347682096904605","spark.hadoop.fs.cpfs-s3a.impl":"*********(redacted)","spark.hadoop.fs.cpfs-adl.impl":"*********(redacted)","userId":"5246238868874017","spark.hadoop.fs.wasb.impl.disable.cache":"true","spark.sql.legacy.createHiveTableByDefault":"false","spark.scheduler.mode":"FAIR","spark.shuffle.service.port":"4048","spark.databricks.qpl.queryId":"67a16a49-0a99-426d-bfef-6f9a793474bd","spark.databricks.clusterUsageTags.isIMv2Enabled":"false","spark.hadoop.fs.fcfs-wasb.impl.disable.cache":"true","spark.hadoop.databricks.s3.verifyBucketExists.enabled":"false","spark.databricks.driverNfs.pathSuffix":".ephemeral_nfs","spark.sql.sources.commitProtocolClass":"com.databricks.sql.transaction.directory.DirectoryAtomicCommitProtocol","spark.hadoop.fs.s3a.impl":"com.databricks.common.filesystem.LokiFileSystem","spark.databricks.driverNfs.clusterWidePythonLibsEnabled":"true","spark.connect.extensions.relation.classes":"io.delta.connect.DeltaRelationPlugin","spark.scheduler.pool":"211967908237090967","spark.hadoop.databricks.loki.fileStatusCache.enabled":"true","spark.databricks.unityCatalog.credentialManager.tokenRefreshEnabled":"*********(redacted)","spark.memory.offHeap.size":"5728370688","spark.databricks.clusterUsageTags.azureSubscriptionId":"3f2e4d32-8e8d-46d6-82bc-5bb8d962328b","spark.databricks.clusterUsageTags.clusterNoDriverDaemon":"false","spark.databricks.clusterUsageTags.clusterState":"Pending","spark.sql.parquet.cacheMetadata":"true","spark.databricks.clusterUsageTags.clusterSizeType":"VM_CONTAINER","spark.databricks.clusterUsageTags.effectiveSparkVersion":"13.3.x-photon-scala2.12","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2Dbfs":"0","spark.databricks.clusterUsageTags.driverContainerId":"9bd75d2b8a2e4069b9dcc6ad3dabdc25","spark.worker.aioaLazyConfig.dbfsReadinessCheckClientClass":"com.databricks.backend.daemon.driver.NephosDbfsReadinessCheckClient","spark.databricks.clusterUsageTags.clusterUnityCatalogMode":"*********(redacted)","spark.databricks.clusterUsageTags.clusterAllTags":"[{\"key\":\"ResourceClass\",\"value\":\"SingleNode\"},{\"key\":\"Vendor\",\"value\":\"Databricks\"},{\"key\":\"Creator\",\"value\":\"peter.stern@databricks.com\"},{\"key\":\"ClusterName\",\"value\":\"job-890396008853692-run-304417810497226-Job_cluster\"},{\"key\":\"ClusterId\",\"value\":\"0318-124329-gscyjw0i\"},{\"key\":\"JobId\",\"value\":\"890396008853692\"},{\"key\":\"RunName\",\"value\":\"WriteManySmallFiles\"},{\"key\":\"owner\",\"value\":\"kyle@databricks.com\"},{\"key\":\"DatabricksEnvironment\",\"value\":\"workerenv-984752964297111\"}]","spark.databricks.clusterUsageTags.numPerClusterInitScriptsV2Volumes":"0","spark.hadoop.parquet.page.write-checksum.enabled":"true","spark.plugins":"org.apache.spark.sql.connect.SparkConnectPlugin","spark.cleaner.referenceTracking.blocking":"false","spark.hadoop.databricks.dbfs.client.version":"v2","spark.hadoop.fs.fcfs-s3a.impl.disable.cache":"true","spark.databricks.clusterUsageTags.attribute_tag_service":"","spark.databricks.cloudfetch.requesterClassName":"*********(redacted)","spark.databricks.clusterUsageTags.clusterOwnerOrgId":"984752964297111","spark.jobGroup.id":"211967908237090967_7868666602381424818_job-347682096904605-run-1-action-6933310957083977","spark.databricks.workload.id":"984752964297111-347682096904605-1","spark.databricks.service.dbutils.server.backend":"com.databricks.dbconnect.SparkServerDBUtils","spark.hadoop.fs.s3a.impl.disable.cache":"true","spark.databricks.clusterUsageTags.sparkEnvVarContainsBacktick":"false","spark.databricks.credential.aws.secretKey.redactor":"*********(redacted)"}}
{"Event":"SparkListenerJobEnd","Job ID":3,"Completion Time":1710766594393,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":0,"time":1710766599929,"errorMessage":""}
